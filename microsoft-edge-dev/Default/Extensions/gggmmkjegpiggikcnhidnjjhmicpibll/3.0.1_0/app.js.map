{"version":3,"sources":["webpack://officechromeextension/webpack/runtime/chunk loaded","webpack://officechromeextension/./app/common/constants.js","webpack://officechromeextension/./app/common/httpInterceptor.js","webpack://officechromeextension/./app/common/logDecorator.js","webpack://officechromeextension/./app/common/storage.service.js","webpack://officechromeextension/./app/common/index.js","webpack://officechromeextension/./app/common/notification.service.js","webpack://officechromeextension/./app/user/index.js","webpack://officechromeextension/./app/user/protectedResourceInterceptor.js","webpack://officechromeextension/./app/user/msaUser.service.js","webpack://officechromeextension/./app/user/o365User.service.js","webpack://officechromeextension/./app/user/msidUser.service.js","webpack://officechromeextension/./app/user/user.service.js","webpack://officechromeextension/./app/mru/mru.service.js","webpack://officechromeextension/./app/mru/mru.controller.js","webpack://officechromeextension/./app/mru/index.js","webpack://officechromeextension/./app/diagnostics/index.js","webpack://officechromeextension/./app/diagnostics/telemetry.service.js","webpack://officechromeextension/./app/diagnostics/ariaTelemetry.service.js","webpack://officechromeextension/./app/popup/index.js","webpack://officechromeextension/./app/popup/popup.controller.js","webpack://officechromeextension/./app/experimentation/index.js","webpack://officechromeextension/./app/experimentation/experimentConstants.js","webpack://officechromeextension/./app/experimentation/experiment.service.js","webpack://officechromeextension/./app/experimentation/sharing/sharing.controller.js","webpack://officechromeextension/./app/experimentation/sharing/sharing.service.js","webpack://officechromeextension/./app/experimentation/sharing/sharingA/sharingA.controller.js","webpack://officechromeextension/./app/app.js","webpack://officechromeextension/./app/common/browserHandler.ts","webpack://officechromeextension/./app/common/utilities.ts","webpack://officechromeextension/./third_party/angularjs-localizationservice.1.0.1/localize.js","webpack://officechromeextension/webpack/bootstrap","webpack://officechromeextension/webpack/runtime/compat get default export","webpack://officechromeextension/webpack/runtime/define property getters","webpack://officechromeextension/webpack/runtime/hasOwnProperty shorthand","webpack://officechromeextension/webpack/runtime/jsonp chunk loading","webpack://officechromeextension/webpack/startup"],"names":["deferred","IDTYPE","MSACID","ORGIDPUID","ACTIVITY","AUTHENTICATION","NAME","AUTHORIZATION","NOTIFICATION","TELEMETRY","USERINFO_AVAILABLE","SSO","LOGOUT","REQUEST_TOKEN","LOG","APPINFO_NAME","FILE","APPLICATION_IMAGE_PATH","APPLICATION_LABEL","ERROR","MAX_SIZE_BYTE_LIMIT","OFFICE_APP_FILE_ASSOCIATIONS","EXCEL","ONENOTE","POWERPOINT","WORD","OFFICE_MIME_TYPES","ORIGIN","HTML5","LOCAL_PATH","SUPPORTED_APPLICATIONS","SUPPORTED_FILE_TYPES","JQUERY","EVENT_ID","KEYPRESS","ENTER","ARROWLEFT","ARROWUP","ARROWRIGHT","ARROWDOWN","MOUSEDOWN","LEFT_BUTTON_CLICK","LINKS","OFFICE_URL","PROGRESSPAGE_URL","SETTINGS_URL","SIGNUP","UNINSTALL","OFFICE_HOME_URL","OFFICE_HOME_DEV_URL","SUPPORT_URL","MYACCOUNT_MSA_URL","MYACCOUNT_O365_URL","APP","arguments","SWAY","SWAY_DEFAULT","ONEDRIVE","TEAMS","SHAREPOINT_DEFAULT","OUTLOOK_DEFAULT","OUTLOOK_O365","MENU_VIEWMODE","NONE","NEW","OPEN","ACCOUNT","SETTINGS","OAUTH","ACCESS_TOKEN","AUTH_CODE","CODE","EXPIRES_ON","REFRESH_TOKEN","SERVICE_ENDPOINT","SERVICE_ID","O365CONFIG","CLIENT_ID","CLIENT_SECRET","GRAPH_RESOURCE","ENDPOINTS","INSTANCE","LOGOUT_URI","MRU_URL","PHOTO_URL","ONEDRIVE_URL","SHAREPOINT_URL","REDIRECT_URI","UPLOAD_URL","FEDERATED_URL","MSACONFIG","ONEDRIVE_ITEMS_URL","SCOPE","URL","USERINFO_URL","FILEACCESS","id","priority","type","message","FILE_MAX_SIZE_BYTE_LIMIT_REACHED","FILE_UPLOAD_FAILURE_GENERIC","FILE_UPLOAD_FAILURE_SERVER","FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA","FILE_UPLOAD_IN_PROGRESS","SETDEFAULT","AUTOSAVE","buttons","title","AUTOSAVETOONEDRIVE","AUTOSAVETOSHAREPOINT","NOTSIGNEDIN","UNSUPPORTEDFILETYPE","INVALIDSUBSCRIPTION","WEBDOCREDIRECT","DISPLAY_URL","QUERY_OPTION","RECENTS","LIST_LENGTH_MSA","LIST_LENGTH_O365","FILTER","ONEDRIVE_ENDPOINT","DISPLAY_PANEL","LIST","LOADING","NO_DOCS","CANCELLED","GENERIC","NO_DOCS_FOUND","UNSUPPORTED_USER_TYPE","SIGNINSTATUS","UNKNOWN","HASREFRESHTOKEN","SIGNEDIN","COMMAND","SET_DISABLED","TRACK_TRACE","TRACK_EVENT","ENABLED_SETTING_STORAGE_KEY","EVENT_PREFIX","PII_TYPE","IDENTITY","USER_TYPE","MSA","O365","USER_SERVICE_TYPE","MSID","TIMEOUT","DEFAULT_REQUEST","USER_INFO_LOOKUP","USER_INFO_LOOKUP_TEST","COPY_PASTE","TEST","PASTE","GET_CLIPBOARD_DATA","GET_AVAILABLE_COMMANDS","ERROR_RETRIES","HTTP_REQUEST","BROWSER_ICON","DEFAULT","INACTIVE","MESSAGE_CHANNEL","RESPONSE_STATUS_SUCCESS","RESPONSE_STATUS_FAIL","RESPONSE_CODE_NO_SUPPORT","RESPONSE_CODE_INVALID","$q","$log","$timeout","$injector","retries","request","config","timeout","constants","responseError","response","status","debug","url","info","JSON","stringify","data","error_codes","get","$http","startsWith","resolve","error","reject","logDecorator","$delegate","telemetry","getTruncatedString","string","length","substring","trackTrace","properties","logToBackground","severity","stack","filename","source","log","Date","toLocaleString","undefined","month","day","hour","minute","second","extensionOrigin","location","href","origin","toString","replace","trimExtensionOrigin","console","toLowerCase","activity","messageString","prepareLog","originalFunction","severityLevel","args","slice","call","logParams","fullStack","Error","Promise","split","mapStackTrace","mappedStack","match","shift","then","caller","matched","pop","timeStamp","apply","warn","getEnabledSetting","setEnabledSetting","enabled","trackEvent","eventName","measurements","window","dumpStorage","chrome","storage","local","result","$httpProvider","$provide","decorator","interceptors","push","factory","keys","defer","promise","set","items","remove","clear","localize","show","notification","index","getLocalizedString","iconUrl","wasCleared","imageUrl","progress","notificationId","httpInterceptor","userService","headers","userType","resource","acquireToken","token","Authorization","clearToken","service","this","getConfig","lookupUserInfo","async","userInfo","oneDriveUrl","method","email","emails","account","cid","getResourceForEndpoint","endpoint","configEndpoint","hasOwnProperty","indexOf","tokenData","idToken","user","parsedJson","encodedIdToken","decodedToken","jwtToken","matches","exec","header","JWSPayload","JWSSig","decodeJwt","base64Decoded","base64IdToken","atob","decodeURIComponent","escape","base64DecodeStringUrlSafe","parse","_logstatus","err","extractIdToken","aud","upn","puid","tid","getUserProfile","id_token","httpRequest","webUrl","reason","getOneDriveUrl","sharePointUrl","getSharePointUrl","scopes","userInfoUrl","aadV2Url","redirectUri","logoutUrl","authorizeUrl","loginUrl","search","createParams","prompt","getUserService","additionalParams","defaultParams","URLSearchParams","Object","assign","fetchUserInfo","object","prop","deleteMetaDataTags","fetchOneDriveUrl","fetchOneDriveQuota","quota","parseInt","total","Math","round","endpointResources","paths","urlPath","pathname","reduce","previous","current","warning","infoFuncs","all","requestAccessToken","scope","response_type","params","navigateToAuthEndpoint","access_token","msaUserService","o365UserService","msidUserService","userOrServiceType","getServiceProvider","getAccessToken","isTokenExpired","expires_on","refreshToken","getIdentityProperty","getRefreshToken","refresh_token","grant_type","tokenUrl","refreshAccessToken","getUserType","getUserInfo","saveTokens","statusText","authorize","serviceType","code","accessToken","acquireTokenFromCode","setUserType","login","error_description","typeOrToken","values","includes","tenantInfo","tenants","payload","parseJwtToken","tenant","resolveTypeAndTenant","tenantEntry","identity","getStoredIdentity","mergeProperties","unpackStateParam","state","appid","inIFrame","searchParams","param","value","createGuid","frameId","cleanup","listener","iframe","document","getElementById","parentNode","removeChild","sender","clearTimeout","has","iframeAuthDelay","setTimeout","createElement","setAttribute","style","visibility","position","width","height","border","body","appendChild","src","handleLogin","logout","handleLogout","useAuthNext","toggle","override","checkAuthFlighting","noLogout","options","now","checkedTime","toUTCString","storageData","elapsed","authNext","lastCheck","flighted","force","accept","contentType","deviceId","getDeviceId","AppId","FeatureFlags","userServiceProvider","getServiceForUserType","target","key","sourceValue","entries","Array","isArray","forEach","getEndpointBase","expires_in","Number","item","tokenEntry","supportsScopes","required","granted","resourceScope","allTokens","property","saveUserInfo","expiresOn","userPrincipalName","getPhotoFromServer","photoUrl","photoRequest","responseType","photo","reader","FileReader","onload","readAsDataURL","char","timestamp","performance","rand","random","floor","close","tab","checkTransitionAuth","setInterval","initCheckTransition","isLoggedIn","getEndpointUrlForCurrentUser","getUserPhoto","waitForUserInfo","userInfoListener","giveUpDelay","giveUp","cleanUp","getUserLicenseInfo","getRecentDocs","endpointUrl","getOneDriveItem","itemId","_","getOneDriveSharedItems","supportedMimeType","normalizeMruList","fileList","newFileList","entry","DocumentUrl","Timestamp","Application","FileName","remoteItem","fileName","name","documentUrl","application","mru","mruItem","app","webDavUrl","supportedExtensions","ext","file","mimeType","packageInfo","package","lastModifiedDateTime","fileSystemInfo","lastAccessedDateTime","Id","getRecentDocumentList","documentsUrl","recentDocs","sharedItems","recent","shared","find","mergeSharedDocs","$scope","mruService","self","onLoad","currentDisplayPanel","getRecentDocumentsFromStorage","docList","recentDocuments","openRecentDocument","doc","clickEvent","ctrlKey","LIST_LENGTH","$watch","refreshRecentDocumentsList","recentDocumentsList","newRecentDocuments","listCount","i","isFileDataValid","appLabel","lastAccessed","toLocaleDateString","imageSource","shortenFilename","createOpenInWebUrl","mruListsEqual","setRecentDocumentsToStorage","oldList","newList","localRecentDocuments","path","controller","ariaTelemetry","telemetryProviders","addCustomProperties","pii","manifest","appVersion","version","language","semanticContext","AWTLogManager","setUserId","features","experimentFeatures","getEnabledSettingFromStorage","settings","settingName","storedSetting","readSettingValueOrUndefined","telemetry_enabled","lastUpdate","manualOverride","setEnabledSettingInStorage","command","propertiesToTrack","$window","addEventProperties","eventProperties","setProperty","enabledSetting","AWTEventProperties","setName","ariaLogger","logEvent","$document","onSignOutLinkClick","hasSignedIn","openDocument","signedInWithOrgId","accountPanelOpened","filesSelected","webRedirectInputChecked","telemetryInputChecked","onLine","username","profilePicture","rtl","isChrome","appDescriptionMessage","onMenuItemClick","viewMode","currentViewMode","onSignOutClick","onWelcomeSignInClick","onProfileClick","onSignupLinkClick","onWebRedirectInputChange","webRedirect_disabled","onTelemetryInputChange","onFileInputChange","loadFile","openOfficeHome","openSupportPage","supportUrl","openMyAccountPage","browseToRecents","append","createDocument","openSharePointSite","authType","handleTableNavigation","event","which","keyCode","currentCell","closest","currentRow","targetCell","prevCell","previousElementSibling","prevRow","querySelector","nextElementSibling","nextRow","preventDefault","focus","filesSelectedCount","postMessage","appLaunchers","label","iconClass","isBusinessOnly","ready","CheckBoxElements","querySelectorAll","j","storageResult","signInStatus","directive","require","restrict","link","element","attrs","ngModel","bind","$setViewValue","files","stopPropagation","originalEvent","dataTransfer","dropEffect","currentTarget","click","$routeProvider","when","templateUrl","controllerAs","otherwise","redirectTo","constant","DEFAULT_CLIENT_ID","ENABLED","BROWSERS","ENDPOINT","BAD_USER_TYPE","NO_CLIENT_ID","NO_FEATURES","EXPERIMENTS","SHARING","CONTROL","FLIGHTS","experimentConstants","currentUserType","flights","userTypeMap","getFlight","expName","experimentEnabled","getFlights","flightingDisabled","disabledCheck","Utilities","isNotUndefinedOrNull","isUndefinedOrNull","defaultFlights","clientId","getClientId","deferral","charCodeAt","stringToHex","Features","getFeatures","expKey","setExperimentFlights","invalid","feature","isFeatureInvalid","validateFeatures","featuresToFlights","setFlights","experiment","flightKey","enabledSettings","logName","browser","getBrowserName","enabledBrowsers","enabledForUser","experimentService","flightView","flight","setShareUrl","shareUrl","setFlagFromPermissions","getCID","docSplit","docId","canShare","permissions","userId","shortId","permissionObject","grantedTo","grantedToUser","roles","hasWriteAccess","getMSAPermissions","canBeShared","sharingService","shareDoc","init","shareDocument","openActive","$ariaProvider","$compileProvider","tabindex","imgSrcSanitizationWhitelist","browserListeners","propertyList","browserHandler","edgeBrowser","create","notifications","callback","alert","onButtonClicked","addListener","onClicked","runtime","getPlatformInfo","jasmine","concat","mock","browserAction","setIcon","icon","extension","getURL","i18n","getUILanguage","getMessage","onMessage","removeListener","splice","sendMessage","tabs","createProperties","BrowserHandler","deserializeQuery","query","pl","decode","s","obj","getFileExtension","docExt","splitDoc","navigateToUrlWithNewTab","onSuccess","active","safeOpenNewTab","windows","getAll","onCreated","isExtensionInTestingMode","isExtensionInDevelopmentMode","test","getManifest","update_url","getAppDescription","description","isBackgroundContext","loc","getBackgroundPage","getCurrentTime","getTime","navigator","vendor","getBrowserAndVersion","browserVersion","checkUserAgentForBrowser","regex","RegExp","browserMatch","userAgent","groups","userAgentData","brands","brand","orderedBrowserMatches","isRTL","uiLang","iconPath","angular","module","$filter","filter","input","i18nDirective","updateText","elm","tag","text","$observe","i18NAttrDirective","attr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","prototype","installedChunks","213","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","__webpack_exports__"],"mappings":"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","file":"\\app.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CopyPasteService } from '@1js/office-online-ccp';\r\n\r\nexport default {\r\n    IDTYPE: {\r\n        MSACID: 'MSACID',\r\n        ORGIDPUID: 'OrgIdPUID'\r\n    },\r\n    ACTIVITY: {\r\n        AUTHENTICATION: {\r\n            NAME: 'authentication'\r\n        },\r\n        AUTHORIZATION: {\r\n            NAME: 'authorization'\r\n        },\r\n        NOTIFICATION: {\r\n            NAME: 'notification'\r\n        },\r\n        TELEMETRY: {\r\n            NAME: 'telemetry'\r\n        },\r\n        USERINFO_AVAILABLE: {\r\n            NAME: 'userInfoAvailable'\r\n        },\r\n        SSO: {\r\n            NAME: 'sso'\r\n        },\r\n        LOGOUT: {\r\n            NAME: 'logout'\r\n        },\r\n        REQUEST_TOKEN: {\r\n            NAME: 'requestToken'\r\n        },\r\n        LOG: {\r\n            NAME: 'log'\r\n        },\r\n    },\r\n    APPINFO_NAME: 'OfficeOnlineExtension',\r\n    FILE: {\r\n        APPLICATION_IMAGE_PATH: {\r\n            'excel': 'assets/excel_doc.png',\r\n            'onenote': 'assets/onenote_doc.png',\r\n            'powerpoint': 'assets/powerpoint_doc.png',\r\n            'unknown': 'assets/generic_doc.png',\r\n            'word': 'assets/word_doc.png'\r\n        },\r\n        APPLICATION_LABEL: {\r\n            'excel': 'ExcelOnlineAppName',\r\n            'onenote': 'OneNoteOnlineAppName',\r\n            'powerpoint': 'PowerPointOnlineAppName',\r\n            'unknown': 'OfficeOnlineAppName',\r\n            'word': 'WordOnlineAppName'\r\n        },\r\n        ERROR: {\r\n            'FILE_SIZE_MAX_EXCEEDED': 'fileSizeMaxExceeded',\r\n            'LOAD_FROM_PATH': 'loadFromPath',\r\n            'UNSUPPORTED_FILE_TYPE': 'unsupportedFileType'\r\n        },\r\n        MAX_SIZE_BYTE_LIMIT: 1024 * 1024 * 4,\r\n        OFFICE_APP_FILE_ASSOCIATIONS: {\r\n            EXCEL: 'excel',\r\n            ONENOTE: 'onenote',\r\n            POWERPOINT: 'powerpoint',\r\n            WORD: 'word'\r\n        },\r\n        OFFICE_MIME_TYPES: {\r\n            'application/msword': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': 'word',\r\n            'application/vnd.oasis.opendocument.text': 'word',\r\n            'application/vnd.ms-powerpoint': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'powerpoint',\r\n            'application/vnd.oasis.opendocument.presentation': 'powerpoint',\r\n            'application/vnd.ms-excel': 'excel',\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n            'application/vnd.ms-excel.sheet.binary.macroEnabled.12': 'excel',\r\n            'application/vnd.ms-excel.sheet.macroEnabled.12': 'excel',\r\n            'application/vnd.oasis.opendocument.spreadsheet': 'excel'\r\n        },\r\n        ORIGIN: {\r\n            HTML5: 'html5',\r\n            LOCAL_PATH: 'local_path'\r\n        },\r\n        SUPPORTED_APPLICATIONS: [\r\n            'Word',\r\n            'Excel',\r\n            'PowerPoint',\r\n            'OneNote'\r\n        ],\r\n        SUPPORTED_FILE_TYPES: {\r\n            'doc': 'word',\r\n            'dot': 'word',\r\n            'docx': 'word',\r\n            'dotx': 'word',\r\n            'odt': 'word',\r\n            'ppt': 'powerpoint',\r\n            'pot': 'powerpoint',\r\n            'pps': 'powerpoint',\r\n            // BUG: 214522: 'ppa': 'powerpoint',\r\n            'pptx': 'powerpoint',\r\n            'ppsx': 'powerpoint',\r\n            'odp': 'powerpoint',\r\n            // BUG: 214522: 'xls': 'excel',\r\n            // BUG: 214522: 'xlt': 'excel',\r\n            // BUG: 214522: 'xla': 'excel',\r\n            'xlsx': 'excel',\r\n            'xlsm': 'excel',\r\n            'xlsb': 'excel',\r\n            'ods': 'excel',\r\n            'notebook': 'onenote'\r\n        }\r\n    },\r\n    JQUERY: {\r\n        EVENT_ID: {\r\n            // Reference: http://api.jquery.com/keypress/\r\n            KEYPRESS: {\r\n                ENTER: 13,\r\n                ARROWLEFT: 37,\r\n                ARROWUP: 38,\r\n                ARROWRIGHT: 39,\r\n                ARROWDOWN: 40\r\n            },\r\n            // Reference: http://api.jquery.com/mousedown/\r\n            MOUSEDOWN: {\r\n                LEFT_BUTTON_CLICK: 1\r\n            }\r\n        }\r\n    },\r\n    LINKS: {\r\n        OFFICE_URL: 'https://portal.office.com/home',\r\n        PROGRESSPAGE_URL: 'https://onedrive.live.com',\r\n        SETTINGS_URL: 'chrome://extensions',\r\n        SIGNUP: 'https://onedrive.live.com/about',\r\n        UNINSTALL: 'https://contentstorage.osi.office.net/officeonlineextensionuninstall/uninstall.html',\r\n        OFFICE_HOME_URL: 'https://go.microsoft.com/fwlink/?linkid=859986',\r\n        OFFICE_HOME_DEV_URL: 'https://go.microsoft.com/fwlink/?linkid=860665',\r\n        SUPPORT_URL: 'https://aka.ms/officeextsignin',\r\n        MYACCOUNT_MSA_URL: 'https://go.microsoft.com/fwlink/?LinkId=823747',\r\n        MYACCOUNT_O365_URL: 'https://go.microsoft.com/fwlink/?LinkId=824642',\r\n        APP: {\r\n            WORD: function () {return `https://office.live.com/start/word.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            EXCEL: function () {return `https://office.live.com/start/excel.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            POWERPOINT: function () {return `https://office.live.com/start/powerpoint.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            ONENOTE: function () {return `https://www.onenote.com/notebooks?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY: function () {return `https://www.sway.com/?auth_pvr=${arguments[0]}&auth_upn=${arguments[1]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY_DEFAULT: 'https://www.sway.com/?WT.mc_id=Chrome_OfficeApp',\r\n            ONEDRIVE: 'https://onedrive.live.com',\r\n            TEAMS: 'https://teams.microsoft.com',\r\n            SHAREPOINT_DEFAULT: 'https://products.office.com/sharepoint',\r\n            OUTLOOK_DEFAULT: 'https://outlook.com',\r\n            OUTLOOK_O365: 'https://outlook.office365.com'\r\n        }\r\n    },\r\n    MENU_VIEWMODE: {\r\n        NONE: 0,\r\n        NEW: 1,\r\n        OPEN: 2,\r\n        ACCOUNT: 3,\r\n        SETTINGS: 4\r\n    },\r\n    OAUTH: {\r\n        ACCESS_TOKEN: 'access_token',\r\n        AUTH_CODE: 'authorization_code',\r\n        CODE: 'code',\r\n        EXPIRES_ON: 'expires_on',\r\n        REFRESH_TOKEN: 'refresh_token',\r\n        SERVICE_ENDPOINT: 'service_endpoint',\r\n        SERVICE_ID: 'service_id'\r\n    },\r\n    O365CONFIG: {\r\n        CLIENT_ID: 'd08f258a-c5dd-4a8f-8afc-9321d67c767a',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579837]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        GRAPH_RESOURCE: 'https://graph.microsoft.com',\r\n        ENDPOINTS: {\r\n            'officeapps.live.com': 'https://officeapps.live.com',\r\n            'graph.microsoft.com': 'https://graph.microsoft.com'\r\n        },\r\n        INSTANCE: 'https://login.windows.net/common/oauth2/',\r\n        LOGOUT_URI: 'https://login.microsoftonline.com/logout.srf',\r\n        MRU_URL: 'https://ocws.officeapps.live.com/ocs/docs/recent/',\r\n        PHOTO_URL: 'https://graph.microsoft.com/v1.0/me/photo/$value',\r\n        ONEDRIVE_URL: 'https://graph.microsoft.com/v1.0/me/drive/root',\r\n        SHAREPOINT_URL: 'https://graph.microsoft.com/v1.0/sites/root',\r\n        REDIRECT_URI: 'https://login.microsoftonline.com/login.srf',\r\n        UPLOAD_URL: 'https://graph.microsoft.com/v1.0/me/drive/root:/',\r\n        FEDERATED_URL: 'https://login.microsoftonline.com/getuserrealm.srf'\r\n    },\r\n    MSACONFIG: {\r\n        CLIENT_ID: '000000004016DA34',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579838]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        INSTANCE: 'https://login.live.com/oauth20_authorize.srf',\r\n        LOGOUT_URI: 'https://login.live.com/oauth20_logout.srf',\r\n        ONEDRIVE_ITEMS_URL: 'https://api.onedrive.com/v1.0/drive/items/',\r\n        PHOTO_URL: 'https://apis.live.net/v5.0/me/picture',\r\n        REDIRECT_URI: 'https://login.live.com/oauth20_desktop.srf',\r\n        SCOPE: 'wl.basic+wl.emails+wl.signin+wl.offline_access+onedrive.readwrite+wl.skydrive',\r\n        URL: 'https://login.live.com/oauth20_token.srf',\r\n        USERINFO_URL: 'https://apis.live.net/v5.0/me'\r\n    },\r\n    /* Notification priorities:\r\n       -2, -1: Do not use; deprecated\r\n       0 - Lowest priority; will not display in Edge\r\n       1 - Medium priority\r\n       2 - Highest priority\r\n    */\r\n    NOTIFICATION: {\r\n        FILEACCESS: {\r\n            id: 'fileAccess',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileAccess'\r\n        },\r\n        FILE_MAX_SIZE_BYTE_LIMIT_REACHED: {\r\n            id: 'fileMaxSizeByteLimitReached',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileMaxSizeByteLimitReached'\r\n        },\r\n        FILE_UPLOAD_FAILURE_GENERIC: {\r\n            id: 'fileUploadFailureGeneric',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureGeneric'\r\n        },\r\n        FILE_UPLOAD_FAILURE_SERVER: {\r\n            id: 'fileUploadFailureServer',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureServer'\r\n        },\r\n        FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA: {\r\n            id: 'fileUploadFailureUnsupportedMedia',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureUnsupportedMedia'\r\n        },\r\n        FILE_UPLOAD_IN_PROGRESS: {\r\n            id: 'fileUploadInProgress',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadInProgress'\r\n        },\r\n        SETDEFAULT: {\r\n            id: 'setDefault',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationSetDefault'\r\n        },\r\n        AUTOSAVE: {\r\n            id: 'autoSave',\r\n            priority: 0,\r\n            type: 'basic',\r\n            buttons: [\r\n                {title: 'NotificationAutoSaveButton'}\r\n            ]\r\n        },\r\n        AUTOSAVETOONEDRIVE: 'NotificationAutoSaveToOneDrive',\r\n        AUTOSAVETOSHAREPOINT: 'NotificationAutoSaveToSharePoint',\r\n        NOTSIGNEDIN: {\r\n            id: 'notSignedIn',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationNotSignedIn'\r\n        },\r\n        UNSUPPORTEDFILETYPE: {\r\n            id: 'unsupportedFileType',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationUnsupportedFileType'\r\n        },\r\n        INVALIDSUBSCRIPTION: {\r\n            id: 'invalidSubscription',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationInvalidSubscription'\r\n        },\r\n        WEBDOCREDIRECT: {\r\n            id: 'webDocRedirect',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationWebDocRedirect',\r\n            buttons: [\r\n                {title: 'NotificationWebDocRedirectButton'}\r\n            ]\r\n        }\r\n    },\r\n    ONEDRIVE: {\r\n        DISPLAY_URL: 'https://onedrive.live.com/view.aspx?cid=',\r\n        INSTANCE: 'https://api.onedrive.com/v1.0',\r\n        QUERY_OPTION: '?@name.conflictBehavior=rename'\r\n    },\r\n    RECENTS: {\r\n        LIST_LENGTH_MSA: 3,\r\n        LIST_LENGTH_O365: 3,\r\n        FILTER: '?apps=powerpoint,word,excel,onenote&sort=date',\r\n        ONEDRIVE_ENDPOINT: 'https://api.onedrive.com/v2.1/drive/recent',\r\n        DISPLAY_PANEL: {\r\n            ERROR: 0,\r\n            LIST: 1,\r\n            LOADING: 2,\r\n            NO_DOCS: 3,\r\n            NONE: 4\r\n        },\r\n        ERROR: {\r\n            CANCELLED: 0,\r\n            GENERIC: 1,\r\n            NO_DOCS_FOUND: 2,\r\n            UNSUPPORTED_USER_TYPE: 3\r\n        }\r\n    },\r\n    SIGNINSTATUS: {\r\n        UNKNOWN: -1,\r\n        NONE: 0,\r\n        HASREFRESHTOKEN: 1,\r\n        SIGNEDIN: 2\r\n    },\r\n    TELEMETRY: {\r\n        COMMAND: {\r\n            SET_DISABLED: 'setDisabledTelemetry',\r\n            TRACK_TRACE: 'trackTrace',\r\n            TRACK_EVENT: 'trackEvent'\r\n        },\r\n        ENABLED_SETTING_STORAGE_KEY: 'telemetry_enabled',\r\n        EVENT_PREFIX: 'OO_CHROME_',\r\n        PII_TYPE: {\r\n            IDENTITY: 10\r\n        }\r\n    },\r\n    USER_TYPE: {\r\n        MSA: 'msa',\r\n        O365: 'aad',\r\n        NONE: 'none'\r\n    },\r\n    USER_SERVICE_TYPE: {\r\n        MSA: 'msaUserService',\r\n        O365: 'o365UserService',\r\n        MSID: 'msidUserService',\r\n        NONE: 'noneUserService'\r\n    },\r\n    TIMEOUT: {\r\n        DEFAULT_REQUEST: 10000,\r\n        USER_INFO_LOOKUP: 5000,\r\n        USER_INFO_LOOKUP_TEST: 50\r\n    },\r\n    COPY_PASTE: {\r\n        TEST: CopyPasteService.testCommand,\r\n        PASTE: CopyPasteService.pasteCommand,\r\n        GET_CLIPBOARD_DATA: CopyPasteService.getClipboardDataCommand,\r\n        GET_AVAILABLE_COMMANDS: CopyPasteService.getAvailableCommandsCommand\r\n    },\r\n    ERROR_RETRIES: {\r\n        HTTP_REQUEST: 3\r\n    },\r\n    BROWSER_ICON: {\r\n        DEFAULT: '../assets/icon_20.png',\r\n        INACTIVE: '../assets/icon_inactive_20.png'\r\n    },\r\n    SSO: {\r\n        MESSAGE_CHANNEL: 'com.microsoft.browsercore',\r\n        RESPONSE_STATUS_SUCCESS: 'Success',\r\n        RESPONSE_STATUS_FAIL: 'Fail',\r\n        RESPONSE_CODE_NO_SUPPORT: 'NoSupport',\r\n        RESPONSE_CODE_INVALID: -2147186943\r\n    },\r\n};\r\n","import constants from './constants';\r\nimport Utilities from './utilities';\r\nimport 'angular';\r\n\r\nexport default httpInterceptor;\r\n\r\nfunction httpInterceptor($q, $log, $timeout, $injector) {\r\n    var retries = 0;\r\n    return {\r\n        request: function (config) {\r\n            if (Utilities.isUndefinedOrNull(config.timeout)) {\r\n                config.timeout = constants.TIMEOUT.DEFAULT_REQUEST;\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response) {\r\n                switch (response.status) {\r\n                    case 0:\r\n                        $log.debug(`httpErrorResponseInterceptor - Request cancelled - ${response.config.url}`);\r\n                        break;\r\n                    case 401:\r\n                        $log.info(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                        break;\r\n                    case 400:\r\n                        // Error of invalid AADService. Log the info trace.\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50001\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Invalid AADSerivce - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            break;\r\n                        }\r\n\r\n                        // Interaction required. Retry the request with the same resource for 3 times.\r\n                        // https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-code\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50079\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Interaction required - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            if (retries < constants.ERROR_RETRIES.HTTP_REQUEST) {\r\n                                retries++;\r\n                                return $timeout(function () {\r\n                                    var $http = $injector.get('$http');\r\n                                    return $http(response.config);\r\n                                }, constants.TIMEOUT.USER_INFO_LOOKUP);\r\n                            }\r\n\r\n                            retries = 0;\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        // don't throw exceptions when graph returns something not found\r\n                        if (response.config.url.startsWith('https://graph.microsoft.com/v1.0/me/drive')) {\r\n                            return $q.resolve(response);\r\n                        }\r\n                    // eslint-disable-next-line no-fallthrough\r\n                    default:\r\n                        $log.error(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                }\r\n            }\r\n\r\n            return $q.reject(response);\r\n        },\r\n    };\r\n}\r\n","import BrowserHandler from './browserHandler';\r\nimport Utilities from '../common/utilities';\r\nimport {mapStackTrace} from 'sourcemapped-stacktrace';\r\n\r\nexport default function logDecorator($delegate, telemetry) {\r\n    // App Insights custom property values have a max length of 8192\r\n    // Limit to 8000 to stay under the App Insights limit\r\n    function getTruncatedString(string) {\r\n        return string.length > 8000 ? string.substring(0, 8000) : string;\r\n    }\r\n\r\n    // Wrapper functions for telemetry in order to handle any errors from the telemetry service //\r\n\r\n    // Gets the enabled setting from storage\r\n    function getEnabledSetting() {\r\n        return telemetry.getEnabledSetting();\r\n    }\r\n\r\n    // Sets the enabled setting\r\n    function setEnabledSetting(enabled) {\r\n        try {\r\n            telemetry.setEnabledSetting(enabled);\r\n        } catch (error) {\r\n            $delegate.error(`setEnabledSetting error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom event\r\n    function trackEvent(eventName, properties, measurements) {\r\n        try {\r\n            telemetry.trackEvent(eventName, properties, measurements);\r\n        } catch (error) {\r\n            $delegate.error(`trackEvent error with eventName ${eventName}: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom trace (logging/diagnostics info)\r\n    function trackTrace(message, properties) {\r\n        try {\r\n            telemetry.trackTrace(message, properties);\r\n        } catch (error) {\r\n            // empty - if trackTrace fails, then error, info, warn, and debug statements can't be logged\r\n        }\r\n    }\r\n\r\n    function trimExtensionOrigin(url) {\r\n        try {\r\n            const extensionOrigin = (new URL(location.href)).origin + '/';\r\n            url = url.toString().replace(extensionOrigin, '');\r\n        }\r\n        // eslint-disable-next-line no-empty\r\n        catch {}\r\n\r\n        return url;\r\n    }\r\n\r\n    // Sends the log in a message where the background script will handle it and log\r\n    // the message to the console. Only useful in cases like the popup where an event\r\n    // may get logged before you can open the debugger window\r\n    function logToBackground(message, severity, stack, filename, source) {\r\n        if (Utilities.isBackgroundContext()) {\r\n            try {\r\n                const now = new Date();\r\n                var timeStamp = now.toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n                var log = `[${timeStamp}] (${trimExtensionOrigin(source)}) ${filename ? filename + ' ' : ''} ${message}`;\r\n                console[severity.toLowerCase()](log);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n            catch {}\r\n            return;\r\n        }\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: 'log',\r\n            severity: severity,\r\n            log: message,\r\n            filename: filename,\r\n            stack: stack\r\n        });\r\n    }\r\n\r\n    function messageString(message) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        }\r\n        return JSON.stringify(message);\r\n    }\r\n\r\n    // Returns a new logging function (error, info, etc.) that extends the original logging function\r\n    var prepareLog = function (originalFunction, severityLevel) {\r\n        return function () {\r\n            var args = [].slice.call(arguments);\r\n            var logParams = args[0];\r\n            var fullStack = undefined;\r\n\r\n            if (Utilities.isExtensionInDevelopmentMode()) {\r\n                fullStack = Error().stack;\r\n            }\r\n\r\n            var message = getTruncatedString(messageString(logParams.message ? logParams.message : logParams));\r\n\r\n            new Promise((resolve) => {\r\n                if (logParams.stack) {\r\n                    resolve(typeof logParams.stack === 'string' ? getTruncatedString(logParams.stack).split('\\n') : logParams.stack);\r\n                } else if (fullStack) {\r\n                    mapStackTrace(fullStack, mappedStack => {\r\n                        // remove this file from the top of the stack\r\n                        while (mappedStack[0].match('logDecorator.js')) {\r\n                            mappedStack.shift();\r\n                        }\r\n\r\n                        resolve(mappedStack);\r\n                    }, {/*cacheGlobally: true*/});\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).then((stack) => {\r\n                var filename = '';\r\n                var source = logParams.source || location;\r\n                if (logParams.filename) {\r\n                    filename = logParams.filename;\r\n                } else {\r\n                    for (var caller of stack) {\r\n                        var matched = caller.match(/\\b[\\w.]+\\b:\\d+/g);\r\n                        if (!matched) {\r\n                            continue;\r\n                        }\r\n                        filename = matched.pop();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                logToBackground(message, severityLevel, stack, filename, source);\r\n                var timeStamp = new Date().toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n\r\n                args[0] = `[${timeStamp}] ${filename ? filename + ' ' : ''}${severityLevel}: ${message}`;\r\n\r\n                // Only output logs in development mode\r\n                if (Utilities.isExtensionInDevelopmentMode()) {\r\n                    originalFunction.apply(null, args);\r\n                }\r\n\r\n                // Do not track debug trace messages to telemetry\r\n                if (severityLevel === 'DEBUG') {\r\n                    return;\r\n                }\r\n\r\n                trackTrace(severityLevel, {\r\n                    message: message,\r\n                    stack: severityLevel === 'ERROR' ? stack : '',\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n    // Extend the original $delegate logging functions\r\n    $delegate.debug = prepareLog($delegate.debug, 'DEBUG');\r\n    $delegate.info = prepareLog($delegate.info, 'INFO');\r\n    $delegate.warn = prepareLog($delegate.warn, 'WARN');\r\n    $delegate.error = prepareLog($delegate.error, 'ERROR');\r\n\r\n    // Attach telemetry functions to the $delegate so that $log can replace the telemetry service throughout the application\r\n    $delegate.getEnabledSetting = getEnabledSetting;\r\n    $delegate.setEnabledSetting = setEnabledSetting;\r\n    $delegate.trackEvent = trackEvent;\r\n    $delegate.trackTrace = trackTrace;\r\n\r\n    return $delegate;\r\n}\r\n","import BrowserHandler from './browserHandler';\r\n\r\nwindow.dumpStorage = () => {\r\n    if (!window.chrome) {\r\n        return;\r\n    }\r\n\r\n    window.chrome.storage.local.get(null, result => {\r\n        console.log(`result '${JSON.stringify(result, '\\t')}'`);\r\n    });\r\n};\r\n\r\nexport default function ($q, $log) {\r\n    return {\r\n        get: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.get(keys, function (result) {\r\n                $log.debug(`storage: get '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        set: function (items) {\r\n            $log.debug(`storage: set items '${JSON.stringify(items)}'`);\r\n            BrowserHandler.storage.local.set(items);\r\n        },\r\n\r\n        remove: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.remove(keys, function (result) {\r\n                $log.debug(`storage: remove '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        clear: function () {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.clear(function (result) {\r\n                $log.debug(`storage: clear result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport './browserHandler'; /* eslint-disable-line sort-imports */\r\nimport 'angularjs-localizationservice.1.0.1/localize';\r\nimport httpInterceptor from './httpInterceptor';\r\nimport logDecorator from './logDecorator';\r\nimport notification from './notification.service';\r\nimport storage from './storage.service';\r\n\r\nvar commonModule = angular\r\n    .module('app.common', [])\r\n    .config(['$httpProvider', '$provide', appCommon])\r\n    .factory('storage', ['$q', '$log', storage])\r\n    .factory('notification', ['$log', 'localize', notification])\r\n    .factory('httpInterceptor', ['$q', '$log', '$timeout', '$injector', httpInterceptor]);\r\n\r\nexport default commonModule.name;\r\n\r\nfunction appCommon($httpProvider, $provide) {\r\n    $provide.decorator('$log', ['$delegate', 'telemetry', logDecorator]);\r\n\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('httpInterceptor');\r\n}\r\n","import Utilities from './utilities';\r\nimport BrowserHandler from './browserHandler';\r\nimport constants from './constants';\r\n\r\nexport default function ($log, localize) {\r\n    return {\r\n        show: function (notification) {\r\n            // Send message to background instance to handle show notification.\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.NOTIFICATION.NAME,\r\n                    notification: notification,\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            var buttons;\r\n            if (notification.buttons !== undefined && notification.buttons !== null) {\r\n                buttons = [];\r\n                for (var index = 0; index < notification.buttons.length; ++index) {\r\n                    buttons[index] = {};\r\n                    buttons[index].title = localize.getLocalizedString(notification.buttons[index].title);\r\n                    buttons[index].iconUrl = notification.buttons[index].iconUrl;\r\n                }\r\n            }\r\n\r\n            BrowserHandler.notifications.clear(notification.id, function (wasCleared) {\r\n                BrowserHandler.notifications.create(\r\n                    notification.id,\r\n                    {\r\n                        iconUrl: '../assets/icon.png',\r\n                        imageUrl: notification.imageUrl,\r\n                        message: localize.getLocalizedString(notification.message),\r\n                        priority: notification.priority,\r\n                        progress: notification.progress,\r\n                        title: '',\r\n                        type: notification.type,\r\n                        buttons: buttons,\r\n                    },\r\n                    function (notificationId) {\r\n                        if (notificationId === undefined || notificationId === null) {\r\n                            $log.error('CreateNotificationError');\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport protectedResourceInterceptor from './protectedResourceInterceptor';\r\nimport userService from './user.service';\r\nimport msidUserService from './msidUser.service';\r\nimport msaUserService from './msaUser.service';\r\nimport o365UserService from './o365User.service';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.user', [])\r\n    .config(['$httpProvider', '$provide', appUser])\r\n    .factory('protectedResourceInterceptor', ['$q', '$log', '$injector', protectedResourceInterceptor])\r\n    .service('msaUserService', ['$log', '$injector', msaUserService])\r\n    .service('o365UserService', ['$log', '$injector', 'notification', o365UserService])\r\n    .service('msidUserService', ['$log', '$injector', 'notification', msidUserService])\r\n    .factory('userService', ['$q', '$log', '$injector', 'storage', 'notification', 'msaUserService', 'o365UserService', 'msidUserService', userService])\r\n    .name;\r\n\r\nfunction appUser($httpProvider, $provide) {\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('protectedResourceInterceptor');\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './user.service';\r\nimport constants from '../common/constants';\r\n\r\n\r\nexport default function protectedResourceInterceptor($q, $log, $injector) {\r\n    var userService = $injector.get('userService');\r\n\r\n    return {\r\n        request: function (config) {\r\n            var deferred = $q.defer();\r\n\r\n            if (Utilities.isUndefinedOrNull(config) || Utilities.isUndefinedOrNull(config.headers)) {\r\n                $log.error('protectedResourceInterceptor.request: http request config is null or undefined');\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var userType = config.headers['X-UserType'];\r\n\r\n            // Only apply http config changes to requests that have custom header\r\n            if (Utilities.isUndefinedOrNull(userType)) {\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var resource = config.headers['X-Resource'];\r\n\r\n            // Remove the custom header; no longer needed\r\n            delete config.headers['X-Resource'];\r\n            delete config.headers['X-UserType'];\r\n            userService.acquireToken(userType, config.url, resource).then(token => {\r\n                // Validate userType within acquireToken method\r\n                if (!Utilities.isUndefinedOrNull(token)) {\r\n                    config.headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                else {\r\n                    $log.warn(`failed to get auth token for type:${userType} url: ${config.url}, resource ${resource}`);\r\n                }\r\n                deferred.resolve(config);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n        responseError: function (response) {\r\n            if (response && response.status === 401) {\r\n                if (Utilities.isNotUndefinedOrNull(response.config) &&\r\n                    (response.config.url === constants.O365CONFIG.SHAREPOINT_URL || response.config.url === constants.O365CONFIG.PHOTO_URL)) {\r\n                    // Don't clear the token if the request is made to get the sharepoint site url or the user photo.\r\n                    return $q.reject(response);\r\n                }\r\n\r\n                userService.clearToken();\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msaUserService($log, $injector) {\r\n    this.type = constants.USER_TYPE.MSA;\r\n    this.type = constants.USER_SERVICE_TYPE.MSA;\r\n    this.userType = constants.USER_TYPE.MSA;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.MSACONFIG.URL,\r\n            'params': {\r\n                'client_id': constants.MSACONFIG.CLIENT_ID,\r\n                'client_secret': constants.MSACONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.MSACONFIG.REDIRECT_URI\r\n            },\r\n            'resource': constants.ONEDRIVE.INSTANCE,\r\n            'loginUrl': constants.MSACONFIG.INSTANCE + '?response_type=code&client_id=' + constants.MSACONFIG.CLIENT_ID + '&redirect_uri=' + constants.MSACONFIG.REDIRECT_URI + '&scope=' + constants.MSACONFIG.SCOPE,\r\n            'logoutUrl': constants.MSACONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.MSACONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.RECENTS.ONEDRIVE_ENDPOINT\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (data) {\r\n        return new Promise((resolve, reject) => {\r\n            var userInfo = {\r\n                oneDriveUrl: constants.LINKS.APP.ONEDRIVE\r\n            };\r\n\r\n            var $http = $injector.get('$http');\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.USERINFO_URL,\r\n                headers: {\r\n                    'X-UserType': constants.USER_SERVICE_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    var data = response.data;\r\n                    userInfo.email = data.emails.account;\r\n                    userInfo.cid = data.id;\r\n                    resolve(userInfo);\r\n                },\r\n                function () {\r\n                    reject(`msaUser.Service.lookupUserInfo http request failed`);\r\n                });\r\n        });\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        return constants.MSACONFIG.SCOPE;\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function o365UserService($log, $injector, notification) {\r\n    this.type = constants.USER_SERVICE_TYPE.O365;\r\n    this.userType = constants.USER_TYPE.O365;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.O365CONFIG.INSTANCE + 'token',\r\n            'params': {\r\n                'client_id': constants.O365CONFIG.CLIENT_ID,\r\n                'client_secret': constants.O365CONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.O365CONFIG.REDIRECT_URI,\r\n                'resource': constants.O365CONFIG.GRAPH_RESOURCE\r\n            },\r\n            'resource': constants.O365CONFIG.GRAPH_RESOURCE,\r\n            'loginUrl': constants.O365CONFIG.INSTANCE + 'authorize?response_type=code&client_id=' + constants.O365CONFIG.CLIENT_ID + '&redirect_uri=' + constants.O365CONFIG.REDIRECT_URI + '&response_mode=query',\r\n            'logoutUrl': constants.O365CONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.O365CONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.O365CONFIG.MRU_URL + constants.RECENTS.FILTER\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        var resource = this.getConfig().resource;\r\n        if (Utilities.isUndefinedOrNull(endpoint)) {\r\n            return resource;\r\n        }\r\n\r\n        // Return resource from config data.\r\n        for (var configEndpoint in constants.O365CONFIG.ENDPOINTS) {\r\n            if (constants.O365CONFIG.ENDPOINTS.hasOwnProperty(configEndpoint) && endpoint.indexOf(configEndpoint) > -1) {\r\n                resource = constants.O365CONFIG.ENDPOINTS[configEndpoint];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return resource;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (tokenData) {\r\n        var userInfo = getUserProfile(tokenData.id_token);\r\n        const oneDriveUrl = await getOneDriveUrl();\r\n        userInfo.oneDriveUrl = oneDriveUrl;\r\n\r\n        const sharePointUrl = await getSharePointUrl();\r\n        userInfo.sharePointUrl = sharePointUrl || constants.LINKS.APP.SHAREPOINT_DEFAULT;\r\n        return userInfo;\r\n    };\r\n\r\n    async function getOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            clearToken();\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error('0365User.getOneDriveUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getSharePointUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.SHAREPOINT_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_SERVICE_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n            return Promise.reject('No SharePoint info for user');\r\n        }\r\n        catch (reason) {\r\n            $log.error('0365User.getSharePointUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function clearToken() {\r\n        var userService = $injector.get('userService');\r\n        userService.clearToken();\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function getUserProfile(idToken) {\r\n        var user = {};\r\n        var parsedJson = extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === constants.O365CONFIG.CLIENT_ID.toLowerCase()) {\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.email = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.email = parsedJson.email;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('puid')) {\r\n                    user.puid = parsedJson.puid;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('tid')) {\r\n                    user.tid = parsedJson.tid;\r\n                }\r\n            } else {\r\n                $log.error('IdToken has invalid aud field');\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function extractIdToken(encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                this._logstatus('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            $log.error('The returned id_token could not be decoded: ' + err.stack);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function decodeJwt(jwtToken) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3],\r\n        };\r\n\r\n        return crackedToken;\r\n    }\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msidUserService($log, $injector, notification) {\r\n    const type = constants.USER_SERVICE_TYPE.MSID;\r\n    var userService = undefined;\r\n    // previous app registration also included (are they still needed?)\r\n    // Graph:\r\n    // offline_access, Directory.AccessAsUser.All, User.Read.All\r\n    // SharePoint:\r\n    // MyFiles.Read, MyFiles.Write\r\n    const scopes = 'email openid profile user.read';\r\n    const userInfoUrl = 'https://graph.microsoft.com/v1.0/me/';\r\n    const aadV2Url = new URL('https://login.microsoftonline.com/common/oauth2/').toString();\r\n    const msaOAuthUrl = new URL('https://login.live.com/oauth20_authorize.srf').toString();\r\n    const redirectUri = new URL('nativeclient', aadV2Url).toString();\r\n    const logoutUrl = new URL('v2.0/logoutsession', aadV2Url).toString();\r\n    const authorizeUrl = new URL('v2.0/authorize', aadV2Url).toString();\r\n    const aadClientId = 'e28ff72c-58a5-49ba-8125-42ec264d7cd0'; // newest clientId\r\n    const loginUrl = (() => {\r\n        var loginUrl = new URL(authorizeUrl);\r\n        loginUrl.search = createParams({prompt: 'select_account'});\r\n        return loginUrl.toString();\r\n    })();\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = $injector.get('userService');\r\n        }\r\n\r\n        return userService;\r\n    }\r\n\r\n    function createParams(additionalParams) {\r\n        const defaultParams = {\r\n            'client_id': aadClientId,\r\n            'response_type': 'id_token token',\r\n            'redirect_uri': redirectUri,\r\n            'scope': scopes,\r\n            'response_mode': 'fragment',\r\n        };\r\n        const params = new URLSearchParams(Object.assign({}, defaultParams, additionalParams));\r\n        return params.toString();\r\n    }\r\n\r\n    // Could we use chrome.identity.launchWebAuthFlow()\r\n    // with redirect url https://ndjpnladcallmjemlbaebfadecfhkepb.chromiumapp.org/response?\r\n    // see https://developer.chrome.com/extensions/identity#method-launchWebAuthFlow\r\n    function getConfig() {\r\n        return {\r\n            'loginUrl': loginUrl,\r\n            'logoutUrl': logoutUrl,\r\n            'photoUrl': 'https://graph.microsoft.com/beta/me/photo/$value',\r\n            'userInfoUrl': userInfoUrl,\r\n            'documentsUrl': 'https://graph.microsoft.com/v1.0/me/drive/recent'\r\n        };\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const msaParams = {\r\n            'url': msaOAuthUrl,\r\n            'aadredir': 1,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        const aadParams = {\r\n            'url': authorizeUrl,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        // TODO: Not sure if aadv2 requires dual stack approach where we try one endpoint and then another but if\r\n        // so we then need to determine if we should start with AAD or MSA but default to MSA since it can\r\n        // handle sign up in case they want to create a new account for overview on how to handle dual stack\r\n        // select_account see https://identitydocs.azurewebsites.net/static/overview/user_discovery.html\r\n        const authEndpointParams = [];\r\n        // authEndpointParams.push(msaParams); // not adding until app configuration is updated to support msa\r\n        authEndpointParams.push(aadParams);\r\n\r\n        var accountId = undefined;\r\n        for (var endpointParams of authEndpointParams) {\r\n            var loginUrl = new URL(endpointParams.url);\r\n            delete endpointParams.url;\r\n\r\n            if (accountId) {\r\n                endpointParams.set('login_hint', accountId);\r\n            }\r\n            loginUrl.search = createParams(endpointParams);\r\n            var response = await getUserService().navigateToAuthEndpoint(loginUrl.toString(), type);\r\n            if (!response.error || response.error === 'aad_auth') {\r\n                return;\r\n            }\r\n\r\n            if (response.username) {\r\n                accountId = response.username;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function lookupUserInfo(token) {\r\n        const infoFuncs = [\r\n            fetchUserInfo(),\r\n            fetchOneDriveUrl(),\r\n            fetchOneDriveQuota()\r\n        ];\r\n        var results = await Promise.all(infoFuncs);\r\n\r\n        return results.reduce((previous, current) => {\r\n            return Object.assign(previous, current);\r\n        });\r\n    }\r\n\r\n    function deleteMetaDataTags(object) {\r\n        for (const prop in object) {\r\n            if (object.hasOwnProperty(prop)) {\r\n                if (prop.match(/^@odata/i)) {\r\n                    delete object[prop];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    async function fetchUserInfo() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: userInfoUrl,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        var userInfo = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            userInfo = deleteMetaDataTags(response);\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchUserInfo failed: ${reason}`);\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    async function fetchOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var data = await getUserService().httpRequest(request);\r\n            if (data.webUrl) {\r\n                return {'oneDriveUrl': data.webUrl};\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error(`msidUser.fetchOneDriveUrl failed: ${JSON.stringify(reason)}`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // accounts.microsoft.com makes a call to\r\n    // https://account.microsoft.com/services/api/subscriptions?X-Requested-With=XMLHttpRequest&excludeWindowsStoreInstallOptions=false&_=1571422283464\r\n    // which seems to get consumer subscriptions, maybe another option?\r\n    async function fetchSubscriptionInfo(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/licenseDetails',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n\r\n        var licenses = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n\r\n            for (const license of response.value.values()) {\r\n                const sku = license.skuPartNumber.toLowerCase();\r\n                var plans = license.servicePlans.filter(plan => plan.provisioningStatus === 'Success').map(plan => plan.servicePlanName.toLowerCase());\r\n                licenses[sku] = plans;\r\n            }\r\n            return {'licenses': licenses};\r\n        }\r\n        catch (reason) {\r\n            $log.error(`msidUser.fetchSubscriptionInfo failed: ${JSON.stringify(reason)}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function fetchOneDriveQuota() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive',\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            var quota = parseInt(response.quota.total) / (1024 * 1024 * 1024);\r\n            quota = Math.round(quota * 100) / 100;\r\n            $log.info(`OneDrive quota: ${JSON.stringify(response.quota, null, '\\t')} capacity: ${quota}GB`);\r\n            return {'driveQuota': response.quota.total, 'driveQuotaString': `${quota}GB`};\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchOneDriveQuota failed: ${reason}`);\r\n        }\r\n    }\r\n\r\n    function getResourceForEndpoint(endpoint) {\r\n        if (!endpoint) {\r\n            return scopes;\r\n        }\r\n\r\n        const endpointResources = {\r\n            'https://graph.microsoft.com': {\r\n                '/v1.0/me/': scopes,\r\n                '/v1.0/me/drive/recent': 'Files.ReadWrite.All' //'https://graph.microsoft.com/Files.ReadWrite.All'\r\n            },\r\n            'https://nleditor.osi.office.net':\r\n            {\r\n                '/NlEditor/': 'https://nleditor.osi.office.net/NlEditor/instrumentation.write'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const url = new URL(endpoint);\r\n            if (!endpointResources.hasOwnProperty(url.origin)) {\r\n                return scopes;\r\n            }\r\n            const paths = endpointResources[url.origin];\r\n            const urlPath = url.pathname;\r\n\r\n            var match = Object.keys(paths).reduce((previous, current) => {\r\n                if (urlPath.startsWith(current) && current.length > previous.length) {\r\n                    return current;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            });\r\n\r\n            return paths[match];\r\n        }\r\n        catch (reason) {\r\n            $log.warning(`msidUser.Service threw an exception: ${reason}`);\r\n            return scopes;\r\n        }\r\n    }\r\n\r\n    async function requestAccessToken(resource, userInfo) {\r\n        var additionalParams = {scope: resource, response_type: 'token'};\r\n        if (userInfo && userInfo.email) {\r\n            // additionalParams['domain_hint'] = organizations;\r\n            additionalParams['login_hint'] = userInfo.email;\r\n        }\r\n        var params = createParams(additionalParams);\r\n        var url = new URL(authorizeUrl);\r\n\r\n        url.search = params.toString();\r\n        var result = await getUserService().navigateToAuthEndpoint(url.href, type, true);\r\n\r\n        if (!result || !result.access_token) {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.info(`failed to get token from iframe for resource ${resource}`);\r\n            return Promise.reject(`unable to retrieve result from ${url.href}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        getConfig: getConfig,\r\n        getResourceForEndpoint: getResourceForEndpoint,\r\n        // handleLogin: handleLogin,\r\n        lookupUserInfo: lookupUserInfo,\r\n        requestAccessToken: requestAccessToken\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// ppe = 'https://nleditor.osi.officeppe.net/NLEditor/BrowserExtension/V1'\r\nconst FlightingUrl = 'https://nleditor.osi.office.net/NLEditor/api/V1/BrowserExtension';\r\n\r\nexport default function userService($q, $log, $injector, storage, notification, msaUserService, o365UserService, msidUserService) {\r\n    function authMessageListener(message, sender, response) {\r\n        switch (message.activity) {\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n                logout().then(() => {\r\n                    response();\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n                login(message.type).then(result => {\r\n                    response(result);\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n                {\r\n                    // This handler can probably go away if it's determined that we don't\r\n                    // need to call authenticate for any responses that aren't our own\r\n                    if (sender.id === BrowserHandler.runtime.id && message.close) {\r\n                        if (sender.tab && sender.tab.id) {\r\n                            BrowserHandler.tabs.remove(sender.tab.id);\r\n                        }\r\n                        delete message.close;\r\n                    }\r\n\r\n                    authorize(unpackStateParam(message)).then(() => {\r\n                        response();\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                {\r\n                    navigateToAuthEndpoint(message.data.url, message.data.type, message.data.inIFrame).then(token => {\r\n                        response(token);\r\n                    });\r\n                    return true;\r\n                }\r\n            default:\r\n                {\r\n                    return;\r\n                }\r\n        }\r\n    }\r\n\r\n    // This module can be loaded by pages other than the background page so only\r\n    // handle these messages on the background page\r\n    if (Utilities.isBackgroundContext()) {\r\n        BrowserHandler.runtime.onMessage.addListener(authMessageListener);\r\n    }\r\n\r\n    async function acquireToken(userOrServiceType, endpoint, resource) {\r\n        var userService = {};\r\n        userService = await getServiceProvider(userOrServiceType);\r\n\r\n        if (!userService) {\r\n            $log.error('userService.acquireToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        if (!resource && userService.getResourceForEndpoint) {\r\n            resource = userService.getResourceForEndpoint(endpoint);\r\n        }\r\n\r\n        var token = {};\r\n        try {\r\n            token = await getAccessToken(endpoint, resource);\r\n\r\n            // if found cached token for resource/scope and not expired, return it\r\n            if (token && token.access_token && !isTokenExpired(token.expires_on)) {\r\n                $log.debug(`Using cached token with resource:'${resource}'${endpoint ? ' for ' + endpoint : ''} `);\r\n                return token.access_token;\r\n            }\r\n\r\n            token = await requestAccessToken(userService, resource);\r\n\r\n            if (token) {\r\n                saveTokens(userService, endpoint, token);\r\n            } else {\r\n                return Promise.reject('No tokens available');\r\n            }\r\n        }\r\n        catch (reason) {\r\n            $log.error(`userService.acquireToken - failed. reason: ${reason}, userType: ${userOrServiceType}, endpoint: ${endpoint}, resource: ${resource}`);\r\n        }\r\n\r\n        if (!token || !token.access_token || !token.expires_on || isTokenExpired(token.expires_on)) {\r\n            return null;\r\n        }\r\n\r\n        return token.access_token;\r\n    }\r\n\r\n    function getFunctionName() {\r\n        var stack = Error().stack;\r\n        if (stack.length < 3) {\r\n            return;\r\n        }\r\n        var caller = stack.split('\\n')[2];\r\n        var match = caller.match(/^\\s*at\\s*(\\w*)/);\r\n        if (!match || match.length < 2) {\r\n            return;\r\n        }\r\n\r\n        return match[1];\r\n    }\r\n\r\n    async function httpRequest(request) {\r\n        if (!request) {\r\n            return Promise.reject('Invalid Request');\r\n        }\r\n\r\n        var stack = new Error().stack;\r\n        var result = new Promise((resolve, reject) => {\r\n            const $http = $injector.get('$http');\r\n\r\n            $http(request).then(\r\n                (response) => {\r\n                    resolve(response.data);\r\n                },\r\n                (response) => {\r\n                    reject(`httpRequest failed for url: ${request.url} reason: ${response.statusText} stack:\\n ${stack}`);\r\n                });\r\n\r\n        });\r\n\r\n        return (await result);\r\n    }\r\n\r\n    async function acquireTokenFromCode(userService, code) {\r\n        if (!userService) {\r\n            $log.error('userService.acquireTokenFromCode - Invalid type');\r\n            Promise.reject('Invalid userService type');\r\n            return;\r\n        }\r\n\r\n        var config = userService.getConfig();\r\n        config.params.grant_type = constants.OAUTH.AUTH_CODE;\r\n        config.params.code = code;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        const accessToken = await httpRequest(request);\r\n        await saveTokens(userService, userService.getConfig().resource, accessToken);\r\n        // is all the above needed or would protectedResourceInterceptor call into acquireToken\r\n        // if the userType was just added to the header here?\r\n        await lookupUserInfo(userService, accessToken);\r\n        return accessToken.access_token;\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        return getIdentityProperty('refresh_token');\r\n    }\r\n\r\n    async function refreshAccessToken(userService, resource, refresh_token) {\r\n        if (!userService) {\r\n            $log.error('userService.refreshAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        var token = {};\r\n        var config = userService.getConfig();\r\n\r\n        config.params.grant_type = constants.OAUTH.REFRESH_TOKEN;\r\n        config.params.resource = resource;\r\n        config.params.refresh_token = refresh_token;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        token = await httpRequest(request);\r\n        return token;\r\n    }\r\n\r\n    async function requestAccessToken(userService, resource) {\r\n        if (!userService) {\r\n            $log.error('userService.requestAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        // if there's a refresh token available (code grant only) attempt to renew it\r\n        // if there is no refresh token then it's an implicit flow which just attempts\r\n        // to get a new access token\r\n        const refreshToken = await getRefreshToken();\r\n        if (refreshToken) {\r\n            return refreshAccessToken(userService, resource, refreshToken);\r\n        }\r\n\r\n        const userType = await getUserType();\r\n        var userInfo = await getUserInfo(userType);\r\n        if (userService.requestAccessToken) {\r\n            var result = await userService.requestAccessToken(resource, userInfo);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async function authorize(request) {\r\n        const serviceType = request.type;\r\n        var userType = undefined;\r\n        var userService = await getServiceProvider(serviceType);\r\n        var result = false;\r\n        if (!userService) {\r\n            $log.error('userService.authenticate - Invalid type');\r\n            return;\r\n        }\r\n\r\n        if (request.code) {\r\n            userType = serviceType.userType;\r\n            try {\r\n                var token = await acquireTokenFromCode(userService, request.code);\r\n                result = !!token;\r\n\r\n            }\r\n            catch (reason) {\r\n                if (userType === constants.USER_TYPE.O365) {\r\n                    notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (request.id_token) {\r\n                userType = await setUserType(request.id_token);\r\n            }\r\n            if (request.access_token) {\r\n                await saveTokens(userService, userService.getConfig().userInfoUrl, request);\r\n                if (!userType) {\r\n                    userType = await getUserType();\r\n                }\r\n                await lookupUserInfo(userService, request.id_token);\r\n            }\r\n            result = userType !== constants.USER_TYPE.NONE;\r\n        }\r\n        if (request.error) {\r\n            if (request.error === 'interaction_required') {\r\n                login(await getUserType(), false);\r\n            } else {\r\n                $log.error(`userService.authenticate - authentication returned error: ${request.error} description: ${request.error_description} request: ${JSON.stringify(request)}`);\r\n            }\r\n        }\r\n\r\n        $log.trackEvent('Authorization', {'userType': userType, 'serviceType': serviceType, 'succeeded': result});\r\n        return result ? Promise.resolve() : Promise.reject();\r\n    }\r\n\r\n    async function clearToken() {\r\n        return Promise.all([\r\n            storage.remove('accessToken'),\r\n            storage.remove('refreshToken'),\r\n            storage.remove('userInfo'),\r\n            storage.remove('userType'),\r\n            storage.remove('identity'),\r\n        ]);\r\n    }\r\n\r\n    async function getLoginStatus() {\r\n        var result = await storage.get('userType');\r\n\r\n        if (!result.userType) {\r\n            return false;\r\n        }\r\n        try {\r\n            var accessToken = await acquireToken(result.userType);\r\n            return !!accessToken;\r\n        }\r\n        catch (reason) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isLoggedIn() {\r\n        var storageData = await storage.get(['userType', 'identity']);\r\n        return (storageData.identity && storageData.userType && storageData.userType !== constants.USER_TYPE.NONE /*&& result.accessToken*/);\r\n    }\r\n\r\n    async function getUserType() {\r\n        // Does this still need to be here? every telemetry call\r\n        // calls this which causes us to log back in again\r\n        /*\r\n        var status = await getLoginStatus();\r\n        if (!status) {\r\n            deferred.resolve(constants.USER_TYPE.NONE);\r\n            return deferred.promise;\r\n        }\r\n        */\r\n\r\n        var result = await storage.get('userType');\r\n        return result.userType || constants.USER_TYPE.NONE;\r\n    }\r\n\r\n    async function setUserType(typeOrToken) {\r\n        var userType = '';\r\n        if (Object.values(constants.USER_TYPE).includes(typeOrToken)) {\r\n            userType = typeOrToken;\r\n        } else {\r\n            var tenantInfo = resolveTypeAndTenant(typeOrToken);\r\n            userType = tenantInfo.type;\r\n            delete tenantInfo.type;\r\n\r\n            var tenantEntry = {\r\n                [userType]: tenantInfo\r\n            };\r\n\r\n            var identity = await getStoredIdentity();\r\n\r\n            mergeProperties(identity, tenantEntry);\r\n            await storage.set({identity});\r\n        }\r\n\r\n        if (userType !== constants.USER_TYPE.NONE) {\r\n            await storage.set({'userType': userType});\r\n        }\r\n\r\n        return userType;\r\n    }\r\n\r\n    function unpackStateParam(message) {\r\n        // separate the type from the state param\r\n        if (message.state) {\r\n            message.state = decodeURIComponent(message.state);\r\n        }\r\n        var [state, type, appid] = message.state.split('|');\r\n        if (type) {\r\n            message.type = type;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    async function navigateToAuthEndpoint(url, type, inIFrame) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({activity: 'requestToken', data: {url: url, type: type, inIFrame: inIFrame}}, token => {\r\n                    resolve(token);\r\n                });\r\n            } else {\r\n                url = new URL(url);\r\n                const params = url.searchParams;\r\n                for (const param of ['state', 'nonce']) {\r\n                    var value = params.get(param);\r\n                    if (!value) {\r\n                        value = createGuid();\r\n                    }\r\n                    // append the type to ensure the same is used to handle the response\r\n                    if (param === 'state' && type) {\r\n                        value += '|' + type + '|' + constants.APPINFO_NAME;\r\n                    }\r\n\r\n                    params.set(param, value);\r\n                }\r\n\r\n                var frameId = undefined;\r\n                var timeout = undefined;\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function cleanup() {\r\n                    BrowserHandler.runtime.onMessage.removeListener(listener);\r\n                    if (frameId) {\r\n                        var iframe = document.getElementById(frameId);\r\n                        if (iframe) {\r\n                            iframe.parentNode.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // remember the state parameter to unsure the response has the same state\r\n                const state = params.get('state');\r\n                const scope = params.get('scope');\r\n\r\n                $log.info(`loading auth url:${url.href} ${inIFrame ? 'in iframe' : ''}`);\r\n                var info = await getUserInfo();\r\n                if (info && info.email && !params.has('login_hint')) {\r\n                    params.set('login_hint', info.email);\r\n                }\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function listener(message, sender, response) {\r\n                    if (sender.id !== BrowserHandler.runtime.id) {\r\n                        $log.debug(`auth listener rejected invalid id: ${sender.id}`);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.activity === constants.ACTIVITY.AUTHORIZATION.NAME) {\r\n                        var result = unpackStateParam(message);\r\n\r\n                        if (!result) {\r\n                            $log.error(`userService.listener - auth url:${url} returned null response `);\r\n                            reject(result);\r\n                        }\r\n\r\n                        if (result.state !== state) {\r\n                            $log.warn(`userService.listener - auth url:${url} mismatched state:${result.state}`);\r\n                        }\r\n\r\n                        $log[result.error ? 'error' : 'debug'](`userService.listener - auth response:${JSON.stringify(result)} received from url:${url}`);\r\n\r\n                        if (timeout) {\r\n                            clearTimeout(timeout);\r\n                        }\r\n\r\n                        delete result.activity;\r\n                        cleanup();\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                BrowserHandler.runtime.onMessage.addListener(listener);\r\n\r\n                if (!inIFrame) {\r\n                    BrowserHandler.tabs.create({url: url.toString()});\r\n                } else {\r\n                    params.set('prompt', 'none');\r\n                    frameId = 'authFrame!' + scope;\r\n\r\n                    const iframeAuthDelay = 60000;\r\n                    timeout = setTimeout(() => {\r\n                        $log.warn(`userService.authInFrame timed out waiting for ${url.toString()} after ${iframeAuthDelay} ms`);\r\n                        cleanup();\r\n                        reject('Timed out waiting for response from iFrame');\r\n                    }, iframeAuthDelay);\r\n\r\n                    var iframe = document.getElementById(frameId);\r\n                    if (!iframe) {\r\n                        iframe = document.createElement('iframe');\r\n                        iframe.setAttribute('id', frameId);\r\n                        iframe.style.visibility = \"hidden\";\r\n                        iframe.style.position = \"absolute\";\r\n                        iframe.style.width = iframe.style.height = \"0\";\r\n                        iframe.style.border = \"0\";\r\n                        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n\r\n                        document.body.appendChild(iframe);\r\n                        iframe.src = url.toString();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async function login(userType, clear = true) {\r\n        if (clear === true) {\r\n            clearToken();\r\n        }\r\n\r\n        var userService = await getServiceProvider(userType);\r\n        if (userService.handleLogin) {\r\n            return userService.handleLogin();\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        var loginUrl = config['loginUrl'];\r\n        if (!loginUrl) {\r\n            $log.error('userService.login - Invalid type');\r\n            return;\r\n        }\r\n\r\n        return navigateToAuthEndpoint(loginUrl, userService.type);\r\n    }\r\n\r\n    async function logout() {\r\n        const userType = await getUserType();\r\n        var userService = await getServiceProvider(userType);\r\n        clearToken();\r\n        if (userService.handleLogout) {\r\n            await userService.handleLogout();\r\n        } else {\r\n            const config = userService.getConfig();\r\n            var logoutUrl = config['logoutUrl'];\r\n            if (!logoutUrl) {\r\n                $log.error('userService.logout - Invalid type');\r\n                return;\r\n            }\r\n\r\n            var request = {\r\n                method: 'GET',\r\n                url: logoutUrl\r\n            };\r\n\r\n            await httpRequest(request);\r\n        }\r\n\r\n        $log.debug(`userService.logout - ${userType}`);\r\n    }\r\n\r\n    async function getDeviceId() {\r\n        var result = await storage.get('deviceId');\r\n        if (result.deviceId) {\r\n            return result.deviceId;\r\n        }\r\n\r\n        var id = createGuid();\r\n        await storage.set({'deviceId': id});\r\n        return id;\r\n    }\r\n\r\n    async function useAuthNext(toggle) {\r\n        if (typeof toggle !== 'undefined') {\r\n            storage.set({'authNext': {override: toggle}});\r\n        }\r\n\r\n        return checkAuthFlighting({noLogout: true});\r\n    }\r\n\r\n    window.useAuthNext = useAuthNext;\r\n    window.checkTransitionAuth = checkAuthFlighting;\r\n\r\n    // only check once a day\r\n    const transitionAuthInterval = 24 /*hours*/ * 3600 /*seconds per hour*/ * 1000/* millseconds per second*/;\r\n\r\n    async function initCheckTransition() {\r\n        $log.debug('initCheckTransition');\r\n        //check now before setting interval\r\n        await checkAuthFlighting();\r\n        // set the recurring interval to perform the check\r\n        setInterval(checkAuthFlighting, transitionAuthInterval);\r\n    }\r\n\r\n    if (Utilities.isBackgroundContext()) {\r\n        initCheckTransition();\r\n    }\r\n\r\n    async function checkAuthFlighting(options) {\r\n        var now = new Date();\r\n        const checkedTime = now.toUTCString();\r\n        var storageData = await storage.get('authNext');\r\n        now = Math.round(now / 1000);\r\n        var elapsed = 0;\r\n        if (storageData.authNext && storageData.authNext.lastCheck && Utilities.isNotUndefinedOrNull(storageData.authNext.flighted)) {\r\n            elapsed = now - storageData.authNext.lastCheck;\r\n\r\n            if (!(options && options.force === true) && elapsed < transitionAuthInterval && storageData.authNext.flighted) {\r\n                return storageData.authNext.flighted;\r\n            }\r\n        }\r\n\r\n        $log.info(`checkTransitionAuth time:${checkedTime}`);\r\n\r\n        var authNext = await (async () => {\r\n            // Guidance from service is to use deviceId as userId since the userId isn't\r\n            // always available, and would change if they login with a different account.\r\n            // X_UserId needs to be consistent so they don't jump flights but\r\n            // X_CorrelationId isn't required\r\n            const editorService = FlightingUrl;\r\n            var deviceId = await getDeviceId();\r\n            var request = {\r\n                url: editorService,\r\n                method: 'POST',\r\n                accept: 'application/json',\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    // 'X-CorrelationId': deviceId,\r\n                    'X-UserId': deviceId // CodeQL [js/insecure-randomness] False-positive: Device Id for flighting doesn't need to be be cryptographically secure.\r\n                },\r\n                data: {\r\n                    AppId: \"OfficeBX_Online\"\r\n                }\r\n            };\r\n\r\n            var result = {};\r\n            try {\r\n                result = await httpRequest(request);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-debugger\r\n                debugger;\r\n                $log.error(`userService.checkAuthFlighting - Call to editor service failed. error:${JSON.stringify(error)}`);\r\n            }\r\n\r\n            var enabled = false;\r\n            if (result && result.FeatureFlags && result.FeatureFlags.authNext) {\r\n                var authNext = result.FeatureFlags.authNext;\r\n                enabled = typeof authNext === 'string' ? authNext.toLowerCase() === 'true' : !!authNext;\r\n            }\r\n\r\n            $log.info(`editor featureFlags.authNext returned:${enabled}`);\r\n            return enabled;\r\n        })();\r\n\r\n        await storage.set({'authNext': {flighted: authNext, 'lastCheck': now}});\r\n\r\n        // check the override last so the flighting service will still get called as usual\r\n        if (storageData.authNext && Utilities.isNotUndefinedOrNull(storageData.authNext.override)) {\r\n            $log.info(`using authNext override from local storage.`);\r\n            return storageData.authNext.override;\r\n        }\r\n\r\n        var serviceType = await getIdentityProperty('service');\r\n        if (authNext === (serviceType === constants.USER_SERVICE_TYPE.MSID)) {\r\n            // current serviceType and authNext match so return with no change\r\n            return;\r\n        }\r\n\r\n        $log.trackEvent('AuthNext', {elapsed, authNext, serviceType});\r\n\r\n        // logout to force user to login with correct flighted auth\r\n        if (options && !options.noLogout) {\r\n            await logout();\r\n        }\r\n    }\r\n\r\n    async function getLastAuthCheck() {\r\n        if (!window.lastAuthFlightCheck) {\r\n            var result = await storage.get('authNext');\r\n            if (result.lastCheck) {\r\n                window.lastAuthFlightCheck = result.lastCheck;\r\n            }\r\n        }\r\n        return window.lastAuthFlightCheck;\r\n    }\r\n\r\n\r\n    async function getServiceForUserType(userType) {\r\n        // if one serviceType was responsible for logged in identity return it\r\n        var serviceType = await getIdentityProperty('service', userType);\r\n        if (serviceType) {\r\n            return serviceType;\r\n        }\r\n\r\n        // otherwise determine which to use\r\n        serviceType = constants.USER_SERVICE_TYPE.NONE;\r\n        if (await useAuthNext()) {\r\n            return constants.USER_SERVICE_TYPE.MSID;\r\n        }\r\n\r\n        switch (userType) {\r\n            case constants.USER_TYPE.MSA:\r\n                serviceType = constants.USER_SERVICE_TYPE.MSA;\r\n                break;\r\n            case constants.USER_TYPE.O365:\r\n                serviceType = constants.USER_SERVICE_TYPE.O365;\r\n                break;\r\n        }\r\n        return serviceType;\r\n    }\r\n\r\n    async function getServiceProvider(type) {\r\n        var userServiceProvider = null;\r\n        if (!Object.values(constants.USER_SERVICE_TYPE).includes(type)) {\r\n            type = await getServiceForUserType(type);\r\n        }\r\n        // Determine which user service to use and inject\r\n        if (type.indexOf(constants.USER_SERVICE_TYPE.MSA) !== -1) {\r\n            userServiceProvider = msaUserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.O365) !== -1) {\r\n            userServiceProvider = o365UserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.MSID) !== -1) {\r\n            userServiceProvider = msidUserService;\r\n        } else {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.error(`userService.getServiceProvider - Invalid type - ${type}`);\r\n        }\r\n\r\n        return userServiceProvider;\r\n    }\r\n\r\n    async function getStoredIdentity() {\r\n        var result = await storage.get('identity');\r\n        return (result && result.identity) ? result.identity : {};\r\n    }\r\n\r\n    function mergeProperties(target, source) {\r\n        for (var [key, sourceValue] of Object.entries(source)) {\r\n            if (!sourceValue) {\r\n                continue;\r\n            }\r\n\r\n            if (!target[key] || target[key] === \"none\" || sourceValue === \"none\") {\r\n                target[key] = sourceValue;\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue !== typeof target[key]) {\r\n                $log.warn(`skipping ${key} due to conflicting types`);\r\n                continue;\r\n            }\r\n\r\n            if (Array.isArray(sourceValue)) {\r\n                sourceValue.forEach((value) => {\r\n                    var index = target[key].indexOf(value);\r\n                    if (index < 0) {\r\n                        target[key].push(value);\r\n                    }\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue === 'object') {\r\n\r\n                mergeProperties(target[key], sourceValue);\r\n                continue;\r\n            }\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n\r\n    function resolveTypeAndTenant(tokenData) {\r\n        var scopes = tokenData.scopes || tokenData.scope;\r\n        if (scopes && scopes.includes('wl.')) {\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n        var idToken = tokenData.id_token || tokenData;\r\n        if (!idToken) {\r\n            return {type: constants.USER_TYPE.NONE};\r\n        }\r\n\r\n        const tenants = {\r\n            '9188040d-6c67-4c5b-b112-36a304b66dad': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'prod'\r\n            },\r\n            '4925308c-f164-4d2d-bc7e-0631132e9375': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'ppe'\r\n            },\r\n            '72f988bf-86f1-41af-91ab-2d7cd011db47': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'prod', 'domain': 'microsoft.com'\r\n            },\r\n            'f686d426-8d16-42db-81b7-ab578e110ccd': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'ppe', 'domain': 'microsoft.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const {header, payload} = parseJwtToken(idToken);\r\n            var result = {['tenant']: payload.tid};\r\n            if (tenants.hasOwnProperty(result.tenant)) {\r\n                var tenantInfo = tenants[result.tenant];\r\n                result = Object.assign(result, tenantInfo);\r\n            } else {\r\n                // everything not included in tenants would be AAD\r\n                result.type = constants.USER_TYPE.O365;\r\n            }\r\n\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            // If it wasn't parsable then it must be an MSA\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n    }\r\n\r\n    function getEndpointBase(endpoint) {\r\n        const url = new URL(endpoint);\r\n        return url.origin;\r\n    }\r\n\r\n    async function saveTokens(userService, endpoint, tokenData) {\r\n        if (tokenData.expires_in && !tokenData.expires_on) {\r\n            tokenData.expires_on = Utilities.getCurrentTime() + Number(tokenData.expires_in);\r\n        }\r\n\r\n        if (!endpoint) {\r\n            $log.error('userService.saveTokens - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        var userType = await getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            userType = await setUserType(tokenData);\r\n        }\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.error('userService.saveTokens - unable to resolve userType');\r\n            return;\r\n        }\r\n\r\n        var scope = decodeURIComponent(tokenData.scope).toLowerCase().split(/[ +]/);\r\n\r\n        // if one of the scopes contains a url, then it is the actual endpoint\r\n        for (const item of scope) {\r\n            var result = item.match(/(^https:\\/\\/[.\\w]*(?:\\S+\\/))/i);\r\n            if (result) {\r\n                endpoint = result[result.index];\r\n                break;\r\n            }\r\n        }\r\n        endpoint = getEndpointBase(endpoint);\r\n        if (tokenData.resource && tokenData.resource !== endpoint) {\r\n            $log.info(`saveTokens ${endpoint} does not match ${tokenData.resource}`);\r\n            endpoint = tokenData.resource;\r\n        }\r\n\r\n        var tokenEntry = {\r\n            [userType]: {\r\n                \"id_token\": tokenData.id_token,\r\n                \"refresh_token\": tokenData.refresh_token,\r\n                \"service\": userService.type,\r\n                \"resources\": {\r\n                    [endpoint]: {\r\n                        \"access_token\": tokenData.access_token,\r\n                        \"expires_in\": tokenData.expires_in,\r\n                        \"expires_on\": tokenData.expires_on,\r\n                        \"scope\": scope\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        mergeProperties(identity, tokenEntry);\r\n        await storage.set({identity});\r\n    }\r\n\r\n    function supportsScopes(required, granted) {\r\n        if (!required) {\r\n            return true;\r\n        }\r\n\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n\r\n        if (!Array.isArray(required)) {\r\n            required = required.toLowerCase().split(/[ +]/);\r\n        }\r\n\r\n        for (const scope of required) {\r\n            if (!granted.includes(scope)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function getAccessToken(endpoint, resourceScope) {\r\n        if (!endpoint) {\r\n            $log.error('userService.getAccessToken - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        endpoint = getEndpointBase(endpoint);\r\n\r\n        try {\r\n            var allTokens = await getIdentityProperty('resources');\r\n\r\n            // either specifically by name or the first one if there is no entry for the endpoint\r\n            if (allTokens[endpoint]) {\r\n\r\n                var tokenData = allTokens[endpoint];\r\n                // if the resource is the same as the endpoint as in the case of legacy auth,\r\n                // no reason to validate the scopes. just return it\r\n                if (endpoint === resourceScope) {\r\n                    return tokenData;\r\n                }\r\n\r\n                if (tokenData && supportsScopes(resourceScope, tokenData.scope)) {\r\n                    return tokenData;\r\n                }\r\n\r\n                // remove it from the array so it's not checked again below\r\n                delete allTokens[endpoint];\r\n            }\r\n\r\n            // in case the token data was stored under a different endpoint, try to find the appropriate\r\n            // scopes stored under other scopes\r\n            for (const token in allTokens) {\r\n                if (supportsScopes(resourceScope, token.scope)) {\r\n                    return token;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getUserInfo(userType) {\r\n        return getIdentityProperty('userInfo', userType);\r\n    }\r\n\r\n    async function getIdentityProperty(property, userType) {\r\n        if (!userType) {\r\n            userType = await getUserType();\r\n        }\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        if (!identity[userType] || !identity[userType][property]) {\r\n            return null;\r\n        }\r\n\r\n        return identity[userType][property];\r\n    }\r\n\r\n    // Waits for the userInfo to be available (non-null) before resolving\r\n    async function waitForUserInfo(userType) {\r\n        return new Promise(async (resolve) => {\r\n            var userInfo = await getUserInfo(userType);\r\n            // userInfo is available => resolve\r\n            if (Utilities.isNotUndefinedOrNull(userInfo)) {\r\n                return resolve(userInfo);\r\n            }\r\n\r\n            BrowserHandler.runtime.onMessage.addListener(userInfoListener);\r\n\r\n            // in testing mode, only wait for a short time before giving up on getting the userInfo so as not to slow down unit tests too much\r\n            var giveUpDelay = Utilities.isExtensionInTestingMode() ? constants.TIMEOUT.USER_INFO_LOOKUP_TEST : constants.TIMEOUT.USER_INFO_LOOKUP;\r\n\r\n            // if looking up the userInfo takes too long, resolve with the current userInfo (undefined or null)\r\n            var giveUp = setTimeout(() => {\r\n                $log.warn(`userService.waitForUserInfo timed out after ${constants.TIMEOUT.USER_INFO_LOOKUP} ms - ${userType}`);\r\n                cleanUp();\r\n                resolve(userInfo);\r\n            }, giveUpDelay);\r\n\r\n            // listen for a runtime message that is sent when the userInfo is available from lookupUserInfo\r\n            function userInfoListener(request) {\r\n                if (request.activity === constants.ACTIVITY.USERINFO_AVAILABLE.NAME) {\r\n                    cleanUp();\r\n                    clearTimeout(giveUp);\r\n                    resolve(request.data);\r\n                }\r\n            }\r\n\r\n            function cleanUp() {\r\n                BrowserHandler.runtime.onMessage.removeListener(userInfoListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function saveUserInfo(userType, data, replace) {\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        var userInfo = {};\r\n        if (identity[userType] && identity[userType].userInfo && !replace) {\r\n            userInfo = identity[userType].userInfo;\r\n        }\r\n\r\n        mergeProperties(userInfo, data);\r\n\r\n        if (identity[userType]) {\r\n            identity[userType].userInfo = userInfo;\r\n            await storage.set({identity});\r\n        }\r\n    }\r\n\r\n    function isTokenExpired(expiresOn) {\r\n        var now = Utilities.getCurrentTime();\r\n        var offset = 120;\r\n        return expiresOn && expiresOn > now + offset ? false : true;\r\n    }\r\n\r\n    async function lookupUserInfo(userService, tokenData) {\r\n        var userType = await getUserType();\r\n\r\n        var userInfo = await userService.lookupUserInfo(tokenData);\r\n        // send a message (listened to in waitForUserInfo) with the newly available userInfo\r\n        BrowserHandler.runtime.sendMessage({activity: constants.ACTIVITY.USERINFO_AVAILABLE.NAME, data: userInfo});\r\n        // save the userInfo to local storage\r\n        if (!userInfo.email && userInfo.userPrincipalName) {\r\n            userInfo.email = userInfo.userPrincipalName;\r\n        }\r\n\r\n        await saveUserInfo(userType, userInfo, true);\r\n\r\n        // get user's profile photo\r\n        await getPhotoFromServer(userService);\r\n    }\r\n\r\n    // TODO: consolidate with o365User once we have WebPack\r\n    function parseJwtToken(token) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(token);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('userService.parseJwtToken - The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var header = JSON.parse(base64DecodeStringUrlSafe(matches[1]));\r\n        var payload = JSON.parse(base64DecodeStringUrlSafe(matches[2]));\r\n        return {header, payload};\r\n    }\r\n\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n    }\r\n\r\n    // Gets the user's photo (profile picture) from either local storage or an http call\r\n    // Calls the helper functions attached to the service (getUserType, getUserInfo, getPhotoFromServer) to allow for mocking in UTs\r\n    async function getUserPhoto() {\r\n        var userType = await getUserType();\r\n        // Invalid user type - no photo\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.warn('UserService.getUserPhoto: no signed-in user');\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n\r\n        var userInfo = await getUserInfo(userType);\r\n        // If there is a photo in local storage, use that\r\n        if (userInfo && userInfo.photo) {\r\n            $log.trackEvent('UserService_GotLocalPhoto', {'userType': userType});\r\n            return userInfo.photo;\r\n        }\r\n\r\n        // No local photo - Do not retry to fetch the photo from server, use the default photo instead.\r\n        return Promise.reject('No photo in local storage');\r\n    }\r\n\r\n    // Gets the user's photo from the appropriate endpoint based on the given userType\r\n    async function getPhotoFromServer(userService) {\r\n        const serviceType = userService.type;\r\n        const userType = await getUserType();\r\n        const config = userService.getConfig();\r\n        var photoUrl = config['photoUrl'];\r\n        if (!photoUrl) {\r\n            return;\r\n        }\r\n\r\n        // Request to get photo\r\n        var photoRequest = {\r\n            method: 'GET',\r\n            url: photoUrl,\r\n            responseType: 'blob',\r\n            headers: {\r\n                'X-UserType': serviceType\r\n            }\r\n        };\r\n\r\n        // Send photo request\r\n        try {\r\n            const photo = await httpRequest(photoRequest);\r\n            $log.trackEvent('UserService_GotServerPhoto', {'userType': userType});\r\n\r\n            // Convert the photo response into a displayable string source\r\n            var reader = new FileReader();\r\n            reader.onload = async () => {\r\n\r\n                // Save the photo in the userInfo in local storage\r\n                saveUserInfo(userType, {photo: reader.result});\r\n\r\n                return reader.result;\r\n            };\r\n            reader.readAsDataURL(photo);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function getEndpointUrlForCurrentUser(endpoint) {\r\n        const userType = await getUserType();\r\n        if (!userType || userType === constants.USER_TYPE.NONE) {\r\n            return null;\r\n        }\r\n        var userService = await getServiceProvider(userType);\r\n        if (!userService) {\r\n            return null;\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        return config[endpoint];\r\n    }\r\n\r\n    function createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\r\n            let timestamp = performance.now();\r\n            const rand = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (char === 'x' ? rand : (rand & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    async function getUserLicenseInfo() {\r\n        var userInfo = await getUserInfo();\r\n        const licenseProps = ['driveQuota', 'licenses'];\r\n        return licenseProps.reduce((previous, current) => {\r\n            if (userInfo[current]) {\r\n                previous[current] = userInfo[current];\r\n            }\r\n            return previous;\r\n        }, {});\r\n    }\r\n\r\n    // all exports are async\r\n    return {\r\n        acquireToken,\r\n        clearToken,\r\n        isLoggedIn,\r\n        getEndpointUrlForCurrentUser,\r\n        getUserType,\r\n        getUserInfo,\r\n        getUserPhoto,\r\n        httpRequest,\r\n        navigateToAuthEndpoint,\r\n        saveUserInfo,\r\n        waitForUserInfo,\r\n        getUserLicenseInfo,\r\n        useAuthNext,\r\n        // Exposed to be called from UTs\r\n        authorize,\r\n        getAccessToken,\r\n        getPhotoFromServer,\r\n        login,\r\n        logout,\r\n        lookupUserInfo,\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default mruService;\r\n\r\nfunction mruService($q, $log, $http, userService) {\r\n    // Gets the most recent documents list from either OneDrive or o365\r\n    async function getRecentDocumentList() {\r\n        const userType = await userService.getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n        const documentsUrl = await userService.getEndpointUrlForCurrentUser('documentsUrl');\r\n        var recentDocs = await getRecentDocs(userType, documentsUrl);\r\n        await mergeSharedDocs(userType, recentDocs);\r\n        return normalizeMruList(recentDocs.data || recentDocs.value || recentDocs);\r\n    }\r\n\r\n    // Calls into the appropriate endpoint to retrieve the recent documents\r\n    async function getRecentDocs(userType, endpointUrl) {\r\n        return new Promise((resolve, reject) => {\r\n            var request = {\r\n                method: 'GET',\r\n                accept: 'application/json',\r\n                url: endpointUrl,\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    'X-UserType': userType\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    resolve(response.data);\r\n                },\r\n                function () {\r\n                    reject(constants.RECENTS.ERROR.GENERIC);\r\n                });\r\n        });\r\n    }\r\n\r\n    async function getOneDriveItem(userType, itemId) {\r\n        var request = {\r\n            method: 'GET',\r\n            accept: 'application/json',\r\n            url: `https://graph.microsoft.com/v1.0/me/drive/items/${itemId}`,\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n        try {\r\n            return new Promise(resolve => {\r\n                $http(request)\r\n                    .then(function (response) {\r\n                        resolve(response.data);\r\n                    });\r\n            });\r\n        }\r\n        catch (_) {\r\n            return Promise.resolve({});\r\n        }\r\n    }\r\n\r\n    async function getOneDriveSharedItems(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            accept: 'application/json',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive/sharedWithMe',\r\n            contentType: 'application/json',\r\n            headers: {\r\n                'X-UserType': userType,\r\n            },\r\n        };\r\n        return new Promise(resolve => {\r\n            try {\r\n                $http(request)\r\n                    .then(function (response) {\r\n                        resolve(response.data);\r\n                    });\r\n            }\r\n            catch (_) {\r\n                resolve({});\r\n            }\r\n        });\r\n    }\r\n\r\n    // When using msa msgraph, recent docs doesn't include the necessary\r\n    // metadata needed to sort and access the files, so we have to get the\r\n    // documents shared with the person to look up the info for any shared\r\n    // documents and then each individual id for those owned by the person\r\n    async function mergeSharedDocs(userType, recentDocs) {\r\n        if (!recentDocs.value) {\r\n            return;\r\n        }\r\n\r\n        var sharedItems = undefined;\r\n        for (var recent of recentDocs.value) {\r\n            if (Object.values(recent.remoteItem).length) {\r\n                continue;\r\n            }\r\n\r\n            // only make this call if any of the recent docs\r\n            // don't have the remoteItem data\r\n            if (!sharedItems) {\r\n                var result = await getOneDriveSharedItems(userType);\r\n                if (!result.value) {\r\n                    return;\r\n                }\r\n                sharedItems = result.value;\r\n            }\r\n\r\n            var shared = sharedItems.find((value) => {\r\n                return value.remoteItem && value.remoteItem.id && value.remoteItem.id.toLowerCase() === recent.id.toLowerCase();\r\n            });\r\n\r\n            if (shared) {\r\n                recent.remoteItem = shared.remoteItem;\r\n                continue;\r\n            }\r\n\r\n            var item;\r\n            try {\r\n                item = await getOneDriveItem(userType, recent.id);\r\n            } catch (_) {\r\n                continue;\r\n            }\r\n\r\n            if (!item || !item.id) {\r\n                continue;\r\n            }\r\n\r\n            recent.remoteItem.webUrl = item.webUrl;\r\n            recent.name = item.name;\r\n            if (!recent.file) {\r\n                recent.file = item.file;\r\n            }\r\n            if (!recent.remoteItem.package) {\r\n                recent.remoteItem.package = item.package;\r\n            }\r\n            if (!recent.remoteItem.lastModifiedDateTime) {\r\n                recent.remoteItem.lastModifiedDateTime = item.lastModifiedDateTime;\r\n            }\r\n        }\r\n    }\r\n\r\n    const supportedMimeType = {\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n        'application/msonenote': 'onenote'\r\n    };\r\n\r\n    // Helper function to normalize the MRU list to be in the form of the JSON returned by MRU++ (with just the values we use)\r\n    // TODO: Once we use MRU++ for both services, we won't need this any longer\r\n    function normalizeMruList(fileList) {\r\n        var newFileList = [];\r\n        if (Utilities.isUndefinedOrNull(fileList)) {\r\n            return newFileList;\r\n        }\r\n\r\n        for (const entry of fileList) {\r\n            // if it's already got the correct metadata just add it and continue\r\n            if (entry.DocumentUrl && entry.Timestamp && entry.Application && entry.FileName/* && entry.Id*/) {\r\n                newFileList.push(entry);\r\n                continue;\r\n            }\r\n\r\n            // if it doesn't have the other known fields, then move along to the next\r\n            if (!entry.remoteItem) {\r\n                continue;\r\n            }\r\n\r\n            const fileName = entry.name || entry.remoteItem.name;\r\n            const id = entry.id || entry.remoteItem.id;\r\n            if (!fileName || !id) {\r\n                continue;\r\n            }\r\n\r\n            var remoteItem = entry.remoteItem;\r\n            var documentUrl = undefined;\r\n            var timestamp = undefined;\r\n            var application = undefined;\r\n            if (remoteItem.mru) {\r\n                var mruItem = remoteItem.mru;\r\n                if (mruItem.app && constants.FILE.SUPPORTED_APPLICATIONS.indexOf(mruItem.app) !== -1) {\r\n                    documentUrl = mruItem.url;\r\n                    timestamp = mruItem.timeStamp;\r\n                    application = mruItem.app.toLowerCase();\r\n                }\r\n            }\r\n            else {\r\n                // look in other known locations for url\r\n                documentUrl = remoteItem.webDavUrl || remoteItem.webUrl;\r\n                if (!documentUrl) {\r\n                    continue;\r\n                }\r\n\r\n                const supportedExtensions = constants.FILE.SUPPORTED_FILE_TYPES;\r\n                var ext = Utilities.getFileExtension(documentUrl) || Utilities.getFileExtension(fileName);\r\n                if (supportedExtensions.hasOwnProperty(ext)) {\r\n                    application = supportedExtensions[ext];\r\n                } else if (remoteItem.file && remoteItem.file.mimeType && supportedMimeType.hasOwnProperty(remoteItem.file.mimeType)) {\r\n                    application = supportedMimeType[remoteItem.file.mimeType];\r\n                } else if (!application) {\r\n                    var packageInfo = remoteItem.package || entry.package;\r\n                    if (!packageInfo || !packageInfo.type) {\r\n                        continue;\r\n                    }\r\n                    application = packageInfo.type.toLowerCase();\r\n                    if (!Object.values(supportedExtensions).includes(application)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (!application) {\r\n                    continue;\r\n                }\r\n\r\n                if (remoteItem.lastModifiedDateTime) {\r\n                    timestamp = remoteItem.lastModifiedDateTime;\r\n                } else if (remoteItem.fileSystemInfo) {\r\n                    timestamp = remoteItem.fileSystemInfo.lastAccessedDateTime || remoteItem.fileSystemInfo.lastModifiedDateTime;\r\n                }\r\n\r\n                if (!timestamp) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            newFileList.push({\r\n                DocumentUrl: documentUrl,\r\n                Timestamp: timestamp,\r\n                Application: application,\r\n                FileName: fileName,\r\n                Id: id\r\n            });\r\n        }\r\n        return newFileList;\r\n    }\r\n\r\n    var service = {\r\n        getRecentDocumentList: getRecentDocumentList,\r\n\r\n        // Exposed to be called from UTs\r\n        getRecentDocs: getRecentDocs,\r\n        normalizeMruList: normalizeMruList,\r\n    };\r\n\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './mru.service';\r\nimport constants from '../common/constants';\r\n\r\nexport default mruController;\r\n\r\nfunction mruController($scope, $q, $log, storage, mruService) {\r\n    var self = this;\r\n\r\n    // Exposed methods\r\n    self.onLoad = onLoad;\r\n    self.openRecentDocument = openRecentDocument;\r\n\r\n    // Exposed properties\r\n    self.constants = constants;\r\n    self.storage = storage;\r\n    self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LOADING;\r\n    self.recentDocuments = [];\r\n    self.LIST_LENGTH = self.constants.RECENTS.LIST_LENGTH_MSA;\r\n\r\n    function onLoad() {\r\n        $log.debug('Loading MruController');\r\n        // Set to the loading message while we fetch the documents\r\n        self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LOADING;\r\n\r\n        // Pull cached list of recent documents UX info\r\n        self.getRecentDocumentsFromStorage().then(function (docList) {\r\n            if (!Utilities.isUndefinedOrNull(docList) && docList.length > 0) {\r\n                // We got some recents, so show them\r\n                self.recentDocuments = docList;\r\n                self.currentDisplayPanel = self.constants.RECENTS.DISPLAY_PANEL.LIST;\r\n            }\r\n        });\r\n    }\r\n\r\n    $scope.$watch('userType', function (userType) {\r\n        if (userType === self.constants.USER_TYPE.NONE) {\r\n            return;\r\n        }\r\n\r\n        self.LIST_LENGTH = userType === self.constants.USER_TYPE.O365 ? self.constants.RECENTS.LIST_LENGTH_O365 : self.constants.RECENTS.LIST_LENGTH_MSA;\r\n\r\n        // Refresh the list\r\n        self.refreshRecentDocumentsList().then(function () {\r\n            // If there are some documents in the list already (from storage), then display them\r\n            // Otherwise, we didn't find any and just display the no documents message\r\n            self.currentDisplayPanel = (!Utilities.isUndefinedOrNull(self.recentDocuments) && self.recentDocuments.length > 0) ?\r\n                self.constants.RECENTS.DISPLAY_PANEL.LIST : self.constants.RECENTS.DISPLAY_PANEL.NO_DOCS;\r\n        },\r\n            function (error) {\r\n                $log.debug(`MruController $scope.$watch error on refreshRecentDocumentsList: ${error}`);\r\n\r\n                // If we receive an error AND we don't have any cached documents, we'll show an error message\r\n                // This is better than giving the impression the user documents are now gone\r\n                self.currentDisplayPanel = (!Utilities.isUndefinedOrNull(self.recentDocuments) && self.recentDocuments.length > 0) ?\r\n                    self.constants.RECENTS.DISPLAY_PANEL.LIST : self.constants.RECENTS.DISPLAY_PANEL.ERROR;\r\n            });\r\n    });\r\n\r\n    // Open recent document\r\n    function openRecentDocument(doc, clickEvent) {\r\n        $log.trackEvent('PopupOpenRecentDocument', {'application': doc.application});\r\n        Utilities.navigateToUrlWithNewTab(doc.url, Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey);\r\n        window.close();\r\n    }\r\n\r\n    // Gets the most recent document list if signed in and then updates the current list\r\n    this.refreshRecentDocumentsList = function () {\r\n        var deferred = $q.defer();\r\n\r\n        $log.debug('MruController.refreshRecentDocumentsList(): Method start');\r\n\r\n        mruService.getRecentDocumentList().then(function (recentDocumentsList) {\r\n            if (Utilities.isUndefinedOrNull(recentDocumentsList)) {\r\n                // getRecentDocumentsList returned a null array, so set it to empty\r\n                // to clear out the displayed list for the user\r\n                recentDocumentsList = [];\r\n            }\r\n\r\n            // This will be used to store the list returned from the service\r\n            var newRecentDocuments = [];\r\n\r\n            // Keep a separate count from i so we fill the list even if recents has folders\r\n            var listCount = 0;\r\n\r\n            // (re)populate the recentDocuments list\r\n            for (var i = 0; i < recentDocumentsList.length && listCount < self.LIST_LENGTH; i++) {\r\n\r\n                // Skip and warn about any undefined document applications\r\n                if (Utilities.isUndefinedOrNull(recentDocumentsList[i].Application)) {\r\n                    $log.warn(`Undefined document application with document type ${Utilities.getFileExtension(recentDocumentsList[i].FileName)}`);\r\n                    continue;\r\n                }\r\n\r\n                // Ensure the file data from o365 is valid\r\n                if (self.isFileDataValid(recentDocumentsList[i].FileName, recentDocumentsList[i].Application, recentDocumentsList[i].DocumentUrl, recentDocumentsList[i].Timestamp)) {\r\n                    newRecentDocuments.push({\r\n                        appLabel: self.constants.FILE.APPLICATION_LABEL[recentDocumentsList[i].Application.toLowerCase()],\r\n                        application: recentDocumentsList[i].Application,\r\n                        lastAccessed: new Date(recentDocumentsList[i].Timestamp).toLocaleDateString(),\r\n                        imageSource: '../' + self.constants.FILE.APPLICATION_IMAGE_PATH[recentDocumentsList[i].Application.toLowerCase()],\r\n                        name: self.shortenFilename(recentDocumentsList[i].FileName),\r\n                        url: self.createOpenInWebUrl(recentDocumentsList[i].DocumentUrl),\r\n                        id: recentDocumentsList[i].Id\r\n                    });\r\n\r\n                    listCount++;\r\n                }\r\n            }\r\n\r\n            // Only update the list if we found something different\r\n            if (!self.mruListsEqual(self.recentDocuments, newRecentDocuments)) {\r\n                self.recentDocuments = newRecentDocuments;\r\n                self.setRecentDocumentsToStorage(newRecentDocuments);\r\n            }\r\n\r\n            deferred.resolve();\r\n        }, function (error) {\r\n            // rejected promise from mruService.getRecentDocumentList\r\n            deferred.reject(error);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Do a check if we have any updated files\r\n    this.mruListsEqual = function (oldList, newList) {\r\n\r\n        if (Utilities.isUndefinedOrNull(oldList) || Utilities.isUndefinedOrNull(newList) || oldList.length !== newList.length) {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < newList.length; i++) {\r\n            if (newList[i].name !== oldList[i].name ||\r\n                newList[i].url !== oldList[i].url ||\r\n                newList[i].lastAccessed !== oldList[i].lastAccessed) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    // Gets the list of documents for the UX from local storage\r\n    this.getRecentDocumentsFromStorage = function () {\r\n        var deferred = $q.defer();\r\n\r\n        storage.get('localRecentDocuments').then(function (result) {\r\n            deferred.resolve(result.localRecentDocuments);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Puts the documents list for the UX into local storage\r\n    this.setRecentDocumentsToStorage = function (docList) {\r\n        storage.set({\r\n            'localRecentDocuments': docList\r\n        });\r\n    };\r\n\r\n    // Helper function to validate the MRU file data\r\n    this.isFileDataValid = function (name, application, url, lastAccessed) {\r\n\r\n        // Make sure it's a valid application with a label since we use this to get the label and image path\r\n        if (Utilities.isUndefinedOrNull(application) || !self.constants.FILE.APPLICATION_LABEL[application.toLowerCase()]) {\r\n            return false;\r\n        }\r\n\r\n        // Now just make sure the rest of the values are not empty\r\n        return (Utilities.isNotUndefinedOrNull(name) && Utilities.isNotUndefinedOrNull(url) && Utilities.isNotUndefinedOrNull(lastAccessed));\r\n    };\r\n\r\n    // Appends on ?web=1 so the o365 documents open in WAC and are not downloaded\r\n    this.createOpenInWebUrl = function (path) {\r\n        if (self.constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(path)]) {\r\n            return (path + '?web=1');\r\n        }\r\n\r\n        // Return the path if it doesn't and in a known extension. For example, OneNote notebooks\r\n        return path;\r\n    };\r\n\r\n    // Removes file extension (e.g. .docx) if they exist\r\n    this.shortenFilename = function (fileName) {\r\n        var name = fileName.replace(/\\.[^/.]+$/, '');\r\n        return name;\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport mruService from './mru.service';\r\nimport mruController from './mru.controller';\r\n\r\nexport default angular\r\n    .module('app.mru', [])\r\n    .factory('mruService', ['$q', '$log', '$http', 'userService', mruService])\r\n    .controller('MruController', ['$scope', '$q', '$log', 'storage', 'mruService', mruController])\r\n    .name;\r\n","import angular from 'angular';\r\nimport ariaTelemetry from './ariaTelemetry.service';\r\nimport telemetry from './telemetry.service';\r\n\r\nexport default angular\r\n    .module('app.diagnostics', [])\r\n    .service('telemetry', ['$injector', 'ariaTelemetry', telemetry])\r\n    .service('ariaTelemetry', ['$window', ariaTelemetry])\r\n    .name;\r\n\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {AWTLogManager} from '@aria/webjs-sdk';\r\n\r\nexport default function telemetry($injector, ariaTelemetry) {\r\n    var telemetryProviders = [ariaTelemetry];\r\n\r\n    var addCustomProperties = async function (properties) {\r\n        var userService = $injector.get('userService');\r\n\r\n        // Append app specific properties\r\n        if (Utilities.isUndefinedOrNull(properties)) {\r\n            properties = {};\r\n        }\r\n\r\n        properties.pii = [];\r\n        var manifest = Utilities.getManifest();\r\n        if (manifest) {\r\n            properties.appVersion = manifest.version;\r\n        }\r\n\r\n        // Get UI language\r\n        var language = BrowserHandler.i18n.getUILanguage();\r\n        if (Utilities.isNotUndefinedOrNull(language)) {\r\n            properties.language = language;\r\n        }\r\n\r\n        // Add AppInfo.Name for GDPR T3 export\r\n        properties['AppInfo.Name'] = constants.APPINFO_NAME;\r\n        // Add user info properties\r\n        var userType = await userService.getUserType();\r\n        var semanticContext = AWTLogManager.getSemanticContext();\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        var userInfo = await userService.getUserInfo(userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        // userInfo properties - cid from MSA\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.cid)) {\r\n            properties.cid = userInfo.cid;\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.cid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.MSACID;\r\n        }\r\n\r\n        // userInfo properties - features (from ExP treatment assignment)\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.features)) {\r\n            properties.experimentFeatures = userInfo.features;\r\n        }\r\n\r\n        // PII identity properties - puid from O365\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.puid)) {\r\n            properties.pii.push({type: constants.TELEMETRY.PII_TYPE.IDENTITY, name: 'puid', value: userInfo.puid});\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.puid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.ORGIDPUID;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.tid)) {\r\n            properties['UserInfo.OMSTenantId'] = userInfo.tid;\r\n        }\r\n\r\n        return properties;\r\n    };\r\n\r\n    // Parses correctly the value of setting\r\n    // Returns undefined if the value cannot be parsed.\r\n    var readSettingValueOrUndefined = function (settings, settingName) {\r\n        if (!settings[settingName]) {return undefined}\r\n\r\n        var storedSetting = JSON.parse(settings[settingName]);\r\n\r\n        if (storedSetting.value === undefined) {return undefined}\r\n\r\n        return JSON.parse(storedSetting.value);\r\n    };\r\n\r\n    var getEnabledSettingFromStorage = function () {\r\n        var $q = $injector.get('$q');\r\n        var storage = $injector.get('storage');\r\n        var deferred = $q.defer();\r\n\r\n        storage.get(['telemetry_enabled', 'enableTelemetry']).then(function (result) {\r\n            deferred.resolve(\r\n                Utilities.isUndefinedOrNull(result)\r\n                    || readSettingValueOrUndefined(result, 'enableTelemetry') === true\r\n                    || Utilities.isUndefinedOrNull(result.telemetry_enabled)\r\n                    || result.telemetry_enabled === true\r\n                    ? true : false);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var setEnabledSettingInStorage = function (enabled) {\r\n        var storage = $injector.get('storage');\r\n        storage.set({\r\n            'telemetry_enabled': enabled,\r\n            'enableTelemetry': JSON.stringify(\r\n                {\r\n                    value: JSON.stringify(enabled),\r\n                    lastUpdate: Date.now(),\r\n                    manualOverride: false\r\n                }\r\n            ),\r\n        });\r\n    };\r\n\r\n    var service = {\r\n        // Get telemetry setting from storage\r\n        getEnabledSetting: function () {\r\n            return getEnabledSettingFromStorage();\r\n        },\r\n\r\n        // Set telemetry setting from storage\r\n        setEnabledSetting: function (enabled) {\r\n            // App Insights workaround: send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.SET_DISABLED,\r\n                    enabled: enabled\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Cache setting in local storage\r\n            setEnabledSettingInStorage(enabled);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                telemetryProviders[i].setEnabledSetting(enabled);\r\n            }\r\n        },\r\n\r\n        // Use to track custom application events and sends to application insights\r\n        trackEvent: async function (eventName, properties, measurements) {\r\n            if (angular.isUndefined(eventName) || !angular.isString(eventName)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_EVENT,\r\n                    eventName: eventName,\r\n                    properties: properties,\r\n                    measurements: measurements\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackEvent(eventName, propertiesToTrack, measurements);\r\n            }\r\n\r\n        },\r\n\r\n        // Use to track trace messages (ie. logging/diagnostics info) and sends to application insights\r\n        trackTrace: async function (message, properties) {\r\n            if (angular.isUndefined(message) || !angular.isString(message)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_TRACE,\r\n                    message: message,\r\n                    properties: properties\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackTrace(message, propertiesToTrack);\r\n            }\r\n        }\r\n    };\r\n\r\n    // return the local instance when called\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport {AWTEventProperties} from '@aria/webjs-sdk';\r\n\r\nexport default function ariaTelemetry($window) {\r\n    var addEventProperties = function (eventProperties, properties) {\r\n        if (Utilities.isUndefinedOrNull(eventProperties) || Utilities.isUndefinedOrNull(properties)) {\r\n            return;\r\n        }\r\n\r\n        // Obfuscate pii properties out and remove\r\n        if (!Utilities.isUndefinedOrNull(properties.pii)) {\r\n            for (var i = 0; i <= properties.pii.length - 1; ++i) {\r\n                eventProperties.setProperty(properties.pii[i].name, properties.pii[i].value, properties.pii[i].type);\r\n            }\r\n            delete properties.pii;\r\n        }\r\n\r\n        // Add rest of properties\r\n        for (var property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                eventProperties.setProperty(property, properties[property]);\r\n            }\r\n        }\r\n    };\r\n\r\n    var enabledSetting = true;\r\n\r\n    this.setEnabledSetting = function (enabled) {\r\n        enabledSetting = enabled;\r\n    };\r\n\r\n    this.trackEvent = function (eventName, properties, measurements) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        // ARIA: Bug when dots are in event name; replace with underscores\r\n        eventName = eventName.replace(/\\./g, '_');\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + eventName);\r\n        addEventProperties(eventProperties, properties);\r\n        addEventProperties(eventProperties, measurements);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n\r\n    this.trackTrace = function (message, properties) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + message);\r\n        eventProperties.setProperty('severity', message);\r\n        addEventProperties(eventProperties, properties);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport 'angular-route';\r\nimport '../common/browserHandler';\r\nimport {bindDragAndDrop, bindFileChange, bindFileInputContainerClick, PopupController} from './popup.controller';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.popup', ['ngRoute'])\r\n    .controller('PopupController', ['$timeout', '$scope', '$q', '$log', '$document', 'storage', 'userService', 'localize', 'notification', PopupController])\r\n    .directive('bindFileChange', bindFileChange)\r\n    .directive('bindDragAndDrop', ['$log', bindDragAndDrop])\r\n    .directive('bindFileInputContainerClick', ['$log', bindFileInputContainerClick])\r\n    .config(['$routeProvider', ($routeProvider) => {\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: './popup/popup.html',\r\n                controller: 'PopupController',\r\n                controllerAs: 'ctrl'\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/'\r\n            });\r\n    }])\r\n    .name;\r\n","import fabric from 'office-ui-fabric-js/dist/js/fabric.min.js';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// Custom directive since Angular does not support on change event binding with input elements of type 'file'\r\nexport function bindFileChange() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            element.bind('change', function (event) {\r\n                ngModel.$setViewValue(event.target.files);\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function bindDragAndDrop($log) {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            element.bind('dragover', function (event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                event.originalEvent.dataTransfer.dropEffect = 'copy';\r\n            });\r\n\r\n            element.bind('drop', function (event) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                $log.trackEvent('OpenDocument_Local_AppDragAndDrop');\r\n                ngModel.$setViewValue(event.originalEvent.dataTransfer.files);\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function bindFileInputContainerClick($log) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element) {\r\n            element.bind('mousedown keydown keypress', function (event) {\r\n                // Bind with Mousedown and Enter keydown events\r\n                if (\r\n                    event.which === constants.JQUERY.EVENT_ID.MOUSEDOWN.LEFT_BUTTON_CLICK ||\r\n                    event.which === constants.JQUERY.EVENT_ID.KEYPRESS.ENTER\r\n                ) {\r\n                    $log.trackEvent('OpenDocument_Local');\r\n                    event.currentTarget.nextElementSibling.click();\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupController($timeout, $scope, $q, $log, $document, storage, userService, localize, notification) {\r\n    var self = this;\r\n\r\n    self.accountPanelOpened = false;\r\n    self.filesSelected = null;\r\n    self.webRedirectInputChecked = false;\r\n    self.telemetryInputChecked = false;\r\n    self.onLine = true;\r\n    self.username = '';\r\n    self.profilePicture = '';\r\n    self.rtl = Utilities.isRTL();\r\n    self.isChrome = Utilities.isChrome();\r\n    self.useAuthNext = false;\r\n\r\n    // var message = Utilities.getAppDescription(); // the manifest isn't localized so can't show this\r\n    self.appDescriptionMessage = localize.getLocalizedString(\"AppDescription\");\r\n\r\n    // Exposed Methods\r\n    self.onMenuItemClick = onMenuItemClick;\r\n    self.onSignOutClick = onSignOutClick;\r\n    self.onWelcomeSignInClick = onWelcomeSignInClick;\r\n    self.onProfileClick = onProfileClick;\r\n    self.onSignOutLinkClick = onSignOutLinkClick;\r\n    self.onSignupLinkClick = onSignupLinkClick;\r\n    self.onWebRedirectInputChange = onWebRedirectInputChange;\r\n    self.onTelemetryInputChange = onTelemetryInputChange;\r\n    self.onFileInputChange = onFileInputChange;\r\n    self.openDocument = openDocument;\r\n    self.openOfficeHome = openOfficeHome;\r\n    self.openSupportPage = openSupportPage;\r\n    self.openMyAccountPage = openMyAccountPage;\r\n    self.browseToRecents = browseToRecents;\r\n    self.createDocument = createDocument;\r\n    self.handleTableNavigation = handleTableNavigation;\r\n    self.loadFile = loadFile;\r\n    self.constants = constants;\r\n    self.storage = storage;\r\n    self.userService = userService;\r\n    self.localize = localize;\r\n    self.hasSignedIn = constants.SIGNINSTATUS.UNKNOWN;\r\n\r\n    // Default to using OneDrive as storage\r\n    self.currentViewMode = constants.MENU_VIEWMODE.NONE;\r\n    $scope.userType = constants.USER_TYPE.NONE;\r\n\r\n    self.appLaunchers = [\r\n        [\r\n            {\r\n                id: 'Outlook',\r\n                label: 'OutlookAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--outlook',\r\n                url: constants.LINKS.APP.OUTLOOK_DEFAULT,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'OneDrive',\r\n                label: 'OneDriveAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--onedrive',\r\n                url: constants.LINKS.APP.ONEDRIVE,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'WordOnline',\r\n                label: 'WordAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--word',\r\n                url: constants.LINKS.APP.WORD,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'ExcelOnline',\r\n                label: 'ExcelAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--excel',\r\n                url: constants.LINKS.APP.EXCEL,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'PowerPointOnline',\r\n                label: 'PowerPointAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--powerpoint',\r\n                url: constants.LINKS.APP.POWERPOINT,\r\n                isBusinessOnly: false,\r\n            },\r\n            {\r\n                id: 'OneNoteOnline',\r\n                label: 'OneNoteAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--onenote',\r\n                url: constants.LINKS.APP.ONENOTE,\r\n                isBusinessOnly: false,\r\n            },\r\n        ],\r\n        [\r\n            {\r\n                id: 'SharePoint',\r\n                label: 'SharePointSiteAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--sharepoint',\r\n                url: constants.LINKS.APP.SHAREPOINT_DEFAULT,\r\n                isBusinessOnly: true,\r\n            },\r\n            {\r\n                id: 'Teams',\r\n                label: 'TeamsAppName',\r\n                iconClass: 'ms-BrandIcon--icon48 ms-BrandIcon--teams',\r\n                url: constants.LINKS.APP.TEAMS,\r\n                isBusinessOnly: true,\r\n            },\r\n        ],\r\n    ];\r\n\r\n    // Send telemetry asynchronously after DOM content is loaded\r\n    $document.ready(function () {\r\n        $timeout(function () {\r\n            $log.trackEvent('PopupPageLoad');\r\n        });\r\n\r\n        var CheckBoxElements = document.querySelectorAll('.ms-CheckBox');\r\n        for (var j = 0; j < CheckBoxElements.length; j++) {\r\n            new fabric.CheckBox(CheckBoxElements[j]);\r\n        }\r\n    });\r\n\r\n    // Initialize scope variables for view\r\n    function initialize() {\r\n        storage.get(['userType', 'identity']).then(storageResult => {\r\n            var signInStatus = (storageResult && storageResult.identity && storageResult.userType !== constants.USER_TYPE.NONE);\r\n            self.hasSignedIn = signInStatus ? constants.SIGNINSTATUS.SIGNEDIN : constants.SIGNINSTATUS.NONE;\r\n\r\n            // note that we are only checking against SIGNINSTATUS.HASREFRESHTOKEN because getSignInInfo is not supposed to return SIGNINSTATUS.SIGNEDIN since it does not attempt to valid the signin state\r\n            if (self.hasSignedIn > constants.SIGNINSTATUS.NONE) {\r\n                refreshSignInStatus(); // refresh signIn status only if we have signInInfo\r\n            }\r\n\r\n            return self.storage.get('webRedirect_disabled');\r\n        }).then(storageResult => {\r\n            self.webRedirectInputChecked = !(Utilities.isNotUndefinedOrNull(storageResult.webRedirect_disabled) && storageResult.webRedirect_disabled);\r\n\r\n            return $log.getEnabledSetting();\r\n        }).then(enabled => {\r\n            $log.setEnabledSetting(enabled);\r\n            self.telemetryInputChecked = enabled;\r\n\r\n            return userService.useAuthNext();\r\n        }).then(useAuthNext => {\r\n            self.useAuthNext = useAuthNext;\r\n\r\n            return;\r\n        });\r\n    }\r\n\r\n    // Gets the user's profile picture from the user service\r\n    function getUserPhoto() {\r\n        userService.getUserPhoto().then(function (photo) {\r\n            if (photo) {\r\n                self.profilePicture = photo;\r\n            }\r\n        }, function (error) {\r\n            self.profilePicture = '';\r\n            $log.info(`PopupController.getUserPhoto: Profile Picture Error - ${error}`);\r\n        });\r\n    }\r\n\r\n    // Update which menu is displayed\r\n    function onMenuItemClick(viewMode) {\r\n        // If the user clicks on the menu button again, dismiss the menu\r\n        self.currentViewMode = self.currentViewMode === viewMode ? constants.MENU_VIEWMODE.NONE : (self.currentViewMode = viewMode);\r\n    }\r\n\r\n    function refreshSignInStatus() {\r\n        $log.debug('PopupController.refreshSignInStatus(): Method start');\r\n\r\n        self.userService.getUserType().then(async function (userType) {\r\n            $log.debug(`PopupController.getSignInStatus(): hasSignedIn: ${userType}`);\r\n            $log.trackEvent('PopupSignedIn', {'userType': userType});\r\n            $scope.userType = userType;\r\n            self.hasSignedIn = userType === constants.USER_TYPE.NONE ? constants.SIGNINSTATUS.NONE : constants.SIGNINSTATUS.SIGNEDIN;\r\n\r\n            if (self.hasSignedIn !== constants.SIGNINSTATUS.SIGNEDIN) {\r\n                return;\r\n            }\r\n\r\n            var userInfo = await self.userService.waitForUserInfo(userType);\r\n            if (Utilities.isUndefinedOrNull(userInfo)) {\r\n                $log.warn('self.UserService.getUserInfo(): userInfo is undefined or null when hasSignedIn is SIGNINSTATUS.SIGNEDIN');\r\n                return;\r\n            }\r\n\r\n            if (Utilities.isUndefinedOrNull(userInfo.email)) {\r\n                $log.warn('self.UserService.getUserInfo(): userInfo.email is undefined or null when hasSignedIn is SIGNINSTATUS.SIGNEDIN');\r\n                return;\r\n            }\r\n            self.username = userInfo.email;\r\n\r\n            // Get the user's profile picture\r\n            getUserPhoto();\r\n        });\r\n    }\r\n\r\n    //\r\n    // --- Start Account Menu Methods ---\r\n    //\r\n\r\n    // Account menu item Sign-in/Sign-out link - Go back to login page\r\n    // This should only be reachable when signed in though\r\n    function onSignOutClick() {\r\n        self.currentViewMode = constants.MENU_VIEWMODE.NONE;\r\n\r\n        if (self.hasSignedIn === constants.SIGNINSTATUS.SIGNEDIN) {\r\n            onSignOutLinkClick();\r\n        }\r\n    }\r\n\r\n    // Welcome page Sign-in link\r\n    async function onWelcomeSignInClick(userType) {\r\n        $log.trackEvent('PopupSignInLinkClick');\r\n        window.close();\r\n        // eslint-disable-next-line no-async-promise-executor\r\n        return new Promise(async (resolve) => {\r\n\r\n            BrowserHandler.runtime.sendMessage({\r\n                activity: constants.ACTIVITY.AUTHENTICATION.NAME,\r\n                type: userType\r\n            }, result => {\r\n                resolve();\r\n                $log.debug(`onWelcomeSignInClick sendMessage returned ${result}`);\r\n            });\r\n        });\r\n    }\r\n\r\n    // Sign-out link\r\n    function onSignOutLinkClick() {\r\n        $log.trackEvent('PopupSignOutLinkClick');\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: constants.ACTIVITY.LOGOUT.NAME,\r\n            type: $scope.userType\r\n        });\r\n\r\n        self.hasSignedIn = constants.SIGNINSTATUS.NONE;\r\n        $scope.userType = constants.USER_TYPE.NONE;\r\n\r\n        // Clear recents from local storage\r\n        storage.remove('localRecentDocuments');\r\n    }\r\n\r\n    // Sign Up link\r\n    function onSignupLinkClick() {\r\n        $log.trackEvent('PopupSignupLinkClick');\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.SIGNUP, true);\r\n    }\r\n\r\n    function onTelemetryInputChange() {\r\n        self.telemetryInputChecked = !self.telemetryInputChecked;\r\n        $log.setEnabledSetting(self.telemetryInputChecked);\r\n        $log.trackEvent('PopupTelemetryInputChecked', {enabled: self.telemetryInputChecked});\r\n    }\r\n\r\n    function onWebRedirectInputChange() {\r\n        self.webRedirectInputChecked = !self.webRedirectInputChecked;\r\n        self.storage.set({webRedirect_disabled: !self.webRedirectInputChecked});\r\n        $log.trackEvent('PopupWebRedirectChecked', {enabled: self.webRedirectInputChecked});\r\n    }\r\n\r\n    function onProfileClick() {\r\n        self.accountPanelOpened = !self.accountPanelOpened;\r\n    }\r\n\r\n    // Open document\r\n    async function openDocument() {\r\n        $log.trackEvent('PopupOpenDocument', {'userType': $scope.userType});\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            $log.warn('PopupController.openDocument(): invalid userInfo');\r\n            return;\r\n        }\r\n\r\n        if (Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.warn('PopupController.openDocument(): invalid OneDriveUrl');\r\n            return;\r\n        }\r\n\r\n        Utilities.navigateToUrlWithNewTab(userInfo.oneDriveUrl, true);\r\n    }\r\n\r\n    // Open SharePoint site\r\n    async function openSharePointSite() {\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isNotUndefinedOrNull(userInfo) && Utilities.isNotUndefinedOrNull(userInfo.sharePointUrl)) {\r\n            Utilities.navigateToUrlWithNewTab(userInfo.sharePointUrl, true);\r\n            return;\r\n        }\r\n\r\n        $log.warn('PopupController.openDocument(): invalid sharePointUrl');\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.APP.SHAREPOINT_DEFAULT, true);\r\n    }\r\n\r\n    // Open Office.com\r\n    function openOfficeHome() {\r\n        Utilities.navigateToUrlWithNewTab(constants.LINKS.OFFICE_HOME_URL, true);\r\n    }\r\n\r\n    // Open support page\r\n    function openSupportPage() {\r\n        var supportUrl = constants.LINKS.SUPPORT_URL;\r\n        Utilities.navigateToUrlWithNewTab(supportUrl, true);\r\n    }\r\n\r\n    // Open myaccount page\r\n    function openMyAccountPage() {\r\n        var url = signedInWithOrgId() ? constants.LINKS.MYACCOUNT_O365_URL : constants.LINKS.MYACCOUNT_MSA_URL;\r\n        Utilities.navigateToUrlWithNewTab(url, true);\r\n    }\r\n\r\n    // Open Recent Document view in browser tab\r\n    async function browseToRecents() {\r\n        $log.trackEvent('PopupBrowseToRecents', {'userType': $scope.userType});\r\n\r\n        // Can browse directly to mru for OneDrive Consumer with query string param\r\n        var userInfo = await self.userService.getUserInfo($scope.userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            $log.warn('PopupController.browseToRecents(): invalid userInfo');\r\n            return;\r\n        }\r\n\r\n        if (Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.warn('PopupController.browseToRecents(): invalid OneDriveUrl');\r\n            return;\r\n        }\r\n\r\n        var url = new URL(userInfo.oneDriveUrl);\r\n        if (!signedInWithOrgId()) {\r\n            var params = new URLSearchParams(url.search);\r\n            params.append('qt', 'mru');\r\n            url.search = params.toString();\r\n        }\r\n        Utilities.navigateToUrlWithNewTab(url.toString(), true);\r\n    }\r\n\r\n    // Create document\r\n    function createDocument(app, clickEvent) {\r\n        $log.trackEvent('PopupCreateDocument', {'application': app.id});\r\n\r\n        var url;\r\n        if (app.id === 'OneDrive') {\r\n            openDocument();\r\n            return;\r\n        } else if (app.id === 'Outlook') {\r\n            url = signedInWithOrgId() ? constants.LINKS.APP.OUTLOOK_O365 : constants.LINKS.APP.OUTLOOK_DEFAULT;\r\n        } else if (app.id === 'SharePoint') {\r\n            openSharePointSite();\r\n            return;\r\n        } else if (typeof app.url === 'function') {\r\n            // Auth code for WAC: 0-default(hrd), 1-MSA, 2-OrgId\r\n            const authType = (self.hasSignedIn !== constants.SIGNINSTATUS.SIGNEDIN) ? '0' : (signedInWithOrgId() ? '2' : '1');\r\n            url = app.url(authType);\r\n        } else {\r\n            url = app.url;\r\n        }\r\n\r\n        Utilities.navigateToUrlWithNewTab(\r\n            url,\r\n            Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey\r\n        );\r\n    }\r\n\r\n    // File picker\r\n    function onFileInputChange() {\r\n        self.loadFile();\r\n        $log.trackEvent('PopupFileInputChange');\r\n    }\r\n\r\n    // Load the input file from html5, upload and view.\r\n    function loadFile() {\r\n        $log.trackEvent('PopupLoadFile', {filesSelectedCount: self.filesSelected.length});\r\n\r\n        // User can multi-select multiple files and drag/drop\r\n        if (self.filesSelected.length > 1) {\r\n            $log.warn(`loadFile called with ${self.filesSelected.length} files selected`);\r\n        }\r\n\r\n        // Check whether user has chosen an unsupported file type\r\n        if (!constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(self.filesSelected[0].name)]) {\r\n            $log.info(\r\n                `PopupController.loadFile(): User attempted to open an unsupported file type of ${Utilities.getFileExtension(\r\n                    self.filesSelected[0].name\r\n                )} extension`\r\n            );\r\n            notification.show(constants.NOTIFICATION.UNSUPPORTEDFILETYPE);\r\n            return;\r\n        }\r\n\r\n        sendFileUploadMessageToBackground(self.filesSelected[0]);\r\n    }\r\n\r\n    // Check if the user is currently signed in with orgId.\r\n    function signedInWithOrgId() {\r\n        return $scope.userType === constants.USER_TYPE.O365;\r\n    }\r\n\r\n    // Sends post message to background for processing\r\n    function sendFileUploadMessageToBackground(file) {\r\n        BrowserHandler.extension.getBackgroundPage().postMessage(file, window.location);\r\n    }\r\n\r\n    function handleTableNavigation(event) {\r\n        var key = event.which || event.keyCode || 0;\r\n        var supportedKey = [\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWLEFT,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWUP,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWRIGHT,\r\n            constants.JQUERY.EVENT_ID.KEYPRESS.ARROWDOWN\r\n        ];\r\n        if (!supportedKey.includes(key)) {\r\n            return;\r\n        }\r\n        var currentCell = (event.target).closest('.app_table_cell');\r\n        var currentRow = currentCell.closest('.app_table_row');\r\n        if (!currentCell || !currentRow) {\r\n            return;\r\n        }\r\n        var prevCell = currentCell.previousElementSibling;\r\n        var targetCell;\r\n        switch (key) {\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWLEFT:\r\n                {\r\n                    targetCell = currentCell.previousElementSibling;\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWUP:\r\n                {\r\n                    var prevRow = currentRow.previousElementSibling;\r\n                    if (prevRow) {\r\n                        targetCell = prevRow.querySelector('.app_table_cell');\r\n                    }\r\n                    if (prevCell && targetCell) {\r\n                        targetCell = targetCell.nextElementSibling;\r\n                    }\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWRIGHT:\r\n                {\r\n                    targetCell = currentCell.nextElementSibling;\r\n                    break;\r\n                }\r\n            case constants.JQUERY.EVENT_ID.KEYPRESS.ARROWDOWN:\r\n                {\r\n                    var nextRow = currentRow.nextElementSibling;\r\n                    if (nextRow) {\r\n                        targetCell = nextRow.querySelector('.app_table_cell');\r\n                    }\r\n                    if (prevCell && targetCell) {\r\n                        targetCell = targetCell.nextElementSibling;\r\n                    }\r\n                    break;\r\n                }\r\n        }\r\n        if (targetCell) {\r\n            event.preventDefault();\r\n            targetCell.querySelector('button').focus();\r\n        }\r\n    }\r\n\r\n    // Initialize\r\n    initialize();\r\n}\r\n","import angular from 'angular';\r\nimport constants from './experimentConstants';\r\nimport experimentService from './experiment.service';\r\nimport sharingController from './sharing/sharing.controller';\r\nimport sharingService from './sharing/sharing.service';\r\nimport SharingAController from './sharing/sharingA/sharingA.controller';\r\n\r\nexport default angular\r\n    .module('app.experimentation', [])\r\n    .constant('experimentConstants', constants)\r\n    .factory('experimentService', ['$http', '$q', '$log', /* 'constants', */ 'experimentConstants', 'userService', experimentService])\r\n    .controller('SharingController', ['experimentService', sharingController])\r\n    .factory('sharingService', ['$http', '$q', '$log', /* 'constants', */ 'userService', sharingService])\r\n    .controller('SharingAController', ['$log', 'sharingService', 'userService', 'localize', SharingAController])\r\n    .name;\r\n","\r\nexport default {\r\n    DEFAULT_CLIENT_ID: '',\r\n    ENABLED: {\r\n        MSA: true,\r\n        O365: false,\r\n        BROWSERS: ['Chrome', 'Edge']\r\n    },\r\n    // eslint-disable-next-line @microsoft/sdl/no-insecure-url\r\n    ENDPOINT: 'http://officeonlineextension-office365.msedge.net/ab',\r\n    ERROR: {\r\n        BAD_USER_TYPE: 'badUserType',\r\n        NO_CLIENT_ID: 'noClientId',\r\n        NO_FEATURES: 'noFeatures'\r\n    },\r\n    EXPERIMENTS: {\r\n        SHARING: {\r\n            ENABLED: {\r\n                MSA: true,\r\n                O365: false,\r\n                BROWSERS: ['Chrome']\r\n            },\r\n            CONTROL: 'sharingControl/sharingControl.html',\r\n            FLIGHTS: {\r\n                'flighttestaacf': 'sharingControl/sharingControl.html',\r\n                'flighttestaa': 'sharingControl/sharingControl.html',\r\n                'SharingUXCF': 'sharingControl/sharingControl.html',\r\n                'SharingUX': 'sharingA/sharingA.html'\r\n            }\r\n        }\r\n    }\r\n};\r\n","/* global Utilities */\r\nimport '../common/utilities';\r\nimport './experimentConstants';\r\nimport constants from '../common/constants';\r\n\r\nexport default function experimentService($http, $q, $log, experimentConstants, userService) {\r\n    // Private variables\r\n    var flights = null;\r\n    var flightsPromise = null;\r\n\r\n    var userTypeMap = {[constants.USER_TYPE.MSA]: 'MSA', [constants.USER_TYPE.O365]: 'O365'};\r\n\r\n    var currentUserType;\r\n\r\n    // Exposed methods\r\n    var service = {\r\n        getFlight: getFlight,\r\n\r\n        // Exposed to call from UTs\r\n        getFlights: getFlights,\r\n        flightingDisabled: flightingDisabled,\r\n        experimentEnabled: experimentEnabled,\r\n    };\r\n\r\n    return service;\r\n\r\n    // Function declarations\r\n\r\n    // Returns the flight assignment for the experiment with the given name\r\n    async function getFlight(expName) {\r\n        var enabled = await experimentEnabled(expName);\r\n        if (!enabled) {\r\n            return experimentConstants.EXPERIMENTS[expName].CONTROL;\r\n        }\r\n\r\n        var flights = await getFlights();\r\n        return flights[expName];\r\n    }\r\n\r\n    // Returns all flight assignments\r\n    async function getFlights() {\r\n        if (Utilities.isNotUndefinedOrNull(flights)) {\r\n            return flights;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(flightsPromise)) {\r\n            await Promise.all([flightsPromise]);\r\n            return flights;\r\n        }\r\n\r\n        await setFlights();\r\n        return flights;\r\n    }\r\n\r\n    // Resolves with true iff the experiment with the given name is enabled\r\n    async function experimentEnabled(expName) {\r\n        try {\r\n            var userType = await userService.getUserType();\r\n            // if all flighting is disabled, the experiment is disabled (global experiment enabled settings override individual experiment enabled settings)\r\n            if (service.flightingDisabled(userType)) {\r\n                return false;\r\n            }\r\n\r\n            return !disabledCheck(userType, expName);\r\n\r\n        } catch (error) {\r\n            $log.error(`experimentService.experimentEnabled error: ${error}`);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Returns true iff flighting is disabled for the given user type or the current browser\r\n    function flightingDisabled(userType) {\r\n        return disabledCheck(userType);\r\n    }\r\n\r\n    // Sets the private flights variable by getting the user-assigned features from local storage or ExP\r\n    async function setFlights() {\r\n        try {\r\n            var userType = await userService.getUserType();\r\n            currentUserType = userTypeMap[userType];\r\n\r\n            // undefined, null, or wrong userType => default flights\r\n            if (Utilities.isUndefinedOrNull(userType) || userType === constants.USER_TYPE.NONE) {\r\n                throw (experimentConstants.ERROR.BAD_USER_TYPE);\r\n            }\r\n\r\n            // flighting is disabled for the current user => default flights\r\n            if (service.flightingDisabled(userType)) {\r\n                flights = defaultFlights();\r\n                return;\r\n            }\r\n\r\n            var userInfo = await userService.waitForUserInfo(userType);\r\n            // if there are flights in the local userInfo, use those\r\n            if (Utilities.isNotUndefinedOrNull(userInfo) && Utilities.isNotUndefinedOrNull(userInfo.flights)) {\r\n                flights = userInfo.flights;\r\n                return;\r\n            }\r\n\r\n            // get the flight information from the ExP service and save in userInfo\r\n            var clientId = getClientId(userType, userInfo);\r\n            var features = await getFeatures(clientId);\r\n            featuresToFlights(features);\r\n            userInfo.flights = flights;\r\n            userInfo.features = features;\r\n            await userService.saveUserInfo(userType, userInfo);\r\n        } catch (error) {\r\n            // if any error occurs while getting the flight assignments, set the flights to default (all controls) and resolve\r\n            $log.error(`experimentService.setFlights error: ${error}`);\r\n            flights = defaultFlights();\r\n        }\r\n\r\n    }\r\n\r\n    // Returns the clientId from the given userInfo:\r\n    // cid (msa users) or the default specified in experimentConstants\r\n    function getClientId(userType, userInfo) {\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            return experimentConstants.DEFAULT_CLIENT_ID;\r\n        }\r\n\r\n        // TODO: does this still do anything. if so is the id the same as the cid?\r\n        var cid = userInfo.cid || userInfo.id;\r\n        if (cid) {\r\n            return cid;\r\n        }\r\n\r\n        return experimentConstants.DEFAULT_CLIENT_ID;\r\n    }\r\n\r\n    // Gets the user features array from the ExP flighting service, passing in the given clientId\r\n    function getFeatures(clientId) {\r\n        var deferral = $q.defer();\r\n        // bad clientId => no ExP features (reject)\r\n        // var promise = new Promise((resolve, reject) => {\r\n        if (Utilities.isUndefinedOrNull(clientId) || clientId === experimentConstants.DEFAULT_CLIENT_ID) {\r\n            $log.error('experimentService.getFeatures: clientId is undefined, null, or empty');\r\n            return deferral.reject(experimentConstants.ERROR.NO_CLIENT_ID);\r\n        }\r\n\r\n        var id = getTruncatedString(stringToHex(clientId));\r\n        var request = {\r\n            method: 'GET',\r\n            url: experimentConstants.ENDPOINT,\r\n            headers: {\r\n                'X-MSEDGE-CLIENTID': id\r\n            }\r\n        };\r\n\r\n        $http(request).then(\r\n            (response) => {\r\n                var result = response.data;\r\n                if (result.Features) {\r\n                    return deferral.resolve(result.Features);\r\n                } else {\r\n                    return deferral.reject(experimentConstants.ERROR.NO_FEATURES);\r\n                }\r\n            },\r\n            () => {\r\n                return deferral.reject(experimentConstants.ERROR.NO_FEATURES);\r\n            });\r\n        return deferral.promise;\r\n    }\r\n\r\n    // Sets the private flights variable to map each experiment name to the markup for the flight that the user has been assigned to for that experiment\r\n    function featuresToFlights(features) {\r\n        flights = {};\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                setExperimentFlights(features, expKey);\r\n            }\r\n        }\r\n\r\n        // check for any invalid features from the ExP service\r\n        validateFeatures(features);\r\n    }\r\n\r\n    // Helper function: assigns the given experiment key to the appropriate flight for the experiment\r\n    function setExperimentFlights(features, expKey) {\r\n        var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n        flights[expKey] = experiment.CONTROL;\r\n\r\n        if (!experiment.ENABLED[currentUserType]) {\r\n            return;\r\n        }\r\n\r\n        for (var flightKey in experiment.FLIGHTS) {\r\n            if (experiment.FLIGHTS.hasOwnProperty(flightKey)) {\r\n                if (features.indexOf(flightKey) > -1) {\r\n                    flights[expKey] = experiment.FLIGHTS[flightKey];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Sets the private flights variable to map each experiment name to its control\r\n    // Used in case of any error in getting the actual flight assignments.\r\n    function defaultFlights() {\r\n        var flights = {};\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n                flights[expKey] = experiment.CONTROL;\r\n            }\r\n        }\r\n        return flights;\r\n    }\r\n\r\n    // Checks whether any feature in the given features array (obtained from ExP) is invalid, i.e. not part of any experiment feature->flight mapping\r\n    // and logs an error if any invalid features are found\r\n    function validateFeatures(features) {\r\n        var invalid = [];\r\n        for (var i = 0; i < features.length; ++i) {\r\n            var feature = features[i];\r\n            if (isFeatureInvalid(feature)) {\r\n                invalid.push(feature);\r\n            }\r\n        }\r\n\r\n        if (invalid.length > 0) {\r\n            $log.warn(`ExP service returned invalid features: ${JSON.stringify(invalid)}`);\r\n        }\r\n    }\r\n\r\n    // Helper function that returns true iff the given feature is invalid, i.e. is not a key in any experiment FLIGHTS mapping\r\n    function isFeatureInvalid(feature) {\r\n        for (var expKey in experimentConstants.EXPERIMENTS) {\r\n            if (experimentConstants.EXPERIMENTS.hasOwnProperty(expKey)) {\r\n                var experiment = experimentConstants.EXPERIMENTS[expKey];\r\n                if (experiment.FLIGHTS.hasOwnProperty(feature)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Helper function that returns true iff\r\n    //  all flighting is disabled (if given an undefined or invalid expName)\r\n    //  the experiment with the given name is disabled (if given a valid expName)\r\n    function disabledCheck(userType, expName) {\r\n        // no user type => flighting is disabled\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            return true;\r\n        }\r\n\r\n        // determine whether to check the enabled settings for all experiments or for a specific experiment\r\n        var enabledSettings = experimentConstants.EXPERIMENTS.hasOwnProperty(expName) ? experimentConstants.EXPERIMENTS[expName].ENABLED : experimentConstants.ENABLED;\r\n        var logName = expName ? `experiment ${expName} is` : 'all experiments are';\r\n\r\n        // check whether flighting is disabled for the current browser - if so, flighting is disabled no matter the userType\r\n        var browser = Utilities.getBrowserName().toLowerCase();\r\n        var enabledBrowsers = enabledSettings.BROWSERS.toString().toLowerCase();\r\n        if (enabledBrowsers.indexOf(browser) < 0) {\r\n            $log.info(`experimentService: ${logName} disabled for browser ${browser}. Experiment is only enabled for browsers ${enabledBrowsers}`);\r\n            return true;\r\n        }\r\n\r\n        // valid user type and enabled browser => use the setting for the userType\r\n        var enabledForUser = enabledSettings[userTypeMap[userType]];\r\n        if (!enabledForUser) {\r\n            $log.info(`experimentService: ${logName} disabled for userType ${userType}`);\r\n        }\r\n        return !enabledForUser;\r\n    }\r\n\r\n    // Helper function that returns a hex representation of the given string (ExP expects the clientId to be in hex format)\r\n    // Source: http://stackoverflow.com/questions/21647928/javascript-unicode-string-to-hex\r\n    function stringToHex(string) {\r\n        var hex, i;\r\n        var result = '';\r\n\r\n        for (i = 0; i < string.length; i++) {\r\n            hex = string.charCodeAt(i).toString(16);\r\n            result += ('000' + hex).slice(-4);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // Helper function used to ensure that the clientId sent to ExP is <= 100 characters (ExP clientId length limit)\r\n    function getTruncatedString(string) {\r\n        return string.length > 100 ? string.substring(0, 100) : string;\r\n    }\r\n}\r\n","export default function SharingController(experimentService) {\r\n    var self = this;\r\n\r\n    // Private properties\r\n    var path = '/experimentation/sharing/';\r\n    var name = 'SHARING';\r\n\r\n    // Exposed properties\r\n    self.flightView = path + 'sharingControl/sharingControl.html';\r\n\r\n    initialize();\r\n\r\n    function initialize() {\r\n        experimentService.getFlight(name).then(function (flight) {\r\n            self.flightView = path + flight;\r\n        });\r\n    }\r\n\r\n}\r\n","import Utilities from '../../common/utilities';\r\nimport '../experimentConstants';\r\nimport constants from '../../common/constants';\r\n\r\n'use strict';\r\n\r\nexport default function sharingService($http, $q, $log, userService) {\r\n    var service = {\r\n        setShareUrl: setShareUrl,\r\n        setFlagFromPermissions: setFlagFromPermissions\r\n    };\r\n\r\n    return service;\r\n\r\n    // Sets the shareUrl of the given document (currently only supported for MSA users)\r\n    function setShareUrl(doc, userType) {\r\n        if (Utilities.isUndefinedOrNull(doc) || Utilities.isUndefinedOrNull(doc.url)) {\r\n            return;\r\n        }\r\n\r\n        doc.shareUrl = '';\r\n\r\n        if (userType === constants.USER_TYPE.MSA) {\r\n            var docUrl = doc.url;\r\n            var shareUrl = docUrl.replace('&page=view', '&page=self');\r\n            if (shareUrl.indexOf('&page=self') < 0) {\r\n                shareUrl += '&page=self';\r\n            }\r\n            shareUrl += '&action=share';\r\n\r\n            doc.shareUrl = shareUrl;\r\n        }\r\n    }\r\n\r\n    // Sets the canBeShared flag on the given document based on whether the user has permission to share it (for MSA users)\r\n    function setFlagFromPermissions(doc, userType) {\r\n\r\n        // no document => do nothing\r\n        if (Utilities.isUndefinedOrNull(doc)) {\r\n            return $q.resolve();\r\n        }\r\n\r\n        // msa user => based on document permissions\r\n        if (userType === constants.USER_TYPE.MSA) {\r\n            var deferred = $q.defer();\r\n            // in case of error in getting document permissions, assume the document can't be shared\r\n            getMSAPermissions(doc).then(\r\n                function (canShare) {\r\n                    doc.canBeShared = canShare;\r\n                    deferred.resolve();\r\n                },\r\n                function (error) {\r\n                    $log.error(`sharingService.setFlagFromPermissions error: ${error}`);\r\n                    doc.canBeShared = false;\r\n                    deferred.resolve();\r\n                });\r\n\r\n            return deferred.promise;\r\n\r\n        } else {\r\n            // non-msa users can't share documents\r\n            doc.canBeShared = false;\r\n            return $q.resolve();\r\n        }\r\n    }\r\n\r\n    // Resolves with true iff the MSA user has permission to share the given document\r\n    function getMSAPermissions(doc) {\r\n        var deferred = $q.defer();\r\n\r\n        // get the cid (needed to find the userId)\r\n        getCID().then(function (cid) {\r\n            if (Utilities.isUndefinedOrNull(cid)) {\r\n                deferred.reject('null cid');\r\n                return;\r\n            }\r\n\r\n            // get the document id that OneDrive uses\r\n            if (Utilities.isUndefinedOrNull(doc.id)) {\r\n                deferred.reject('no document id');\r\n                return;\r\n            }\r\n            var docSplit = doc.id.split('.');\r\n            var docId = docSplit[docSplit.length - 1];\r\n\r\n            // request to OneDrive api to get the permissions on the document\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.ONEDRIVE_ITEMS_URL + docId + '/permissions',\r\n                headers: {\r\n                    'X-UserType': constants.USER_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            // make http request to get document permissions\r\n            $http(request).then(\r\n                function (response) {\r\n                    var canShare = hasWriteAccess(response.data, cid);\r\n                    deferred.resolve(canShare);\r\n                },\r\n                function (response) {\r\n                    deferred.reject(response.statusText);\r\n                });\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Resolves with the user's cid or null if none exists\r\n    function getCID() {\r\n        var deferred = $q.defer();\r\n\r\n        userService.waitForUserInfo(constants.USER_TYPE.MSA).then(function (userInfo) {\r\n            if (Utilities.isUndefinedOrNull(userInfo)) {\r\n                deferred.resolve(null);\r\n                return;\r\n            }\r\n            deferred.resolve(userInfo.cid);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Returns true iff the user with the given userId has write access in the given permissions object\r\n    function hasWriteAccess(permissions, userId) {\r\n        if (Utilities.isUndefinedOrNull(permissions) || Utilities.isUndefinedOrNull(permissions.value)) {\r\n            return true;\r\n        }\r\n\r\n        var canShare = true;\r\n\r\n        // get the shortened id from the userId - this is the id that the OneDrive api uses for certain accounts\r\n        var shortId = userId.substring(1, userId.length);\r\n\r\n        for (var i = 0; i < permissions.value.length; ++i) {\r\n            var permissionObject = permissions.value[i];\r\n            if (Utilities.isUndefinedOrNull(permissionObject.grantedTo)) {\r\n                continue;\r\n            }\r\n            var grantedToUser = permissionObject.grantedTo.user;\r\n            if (grantedToUser.id === userId || grantedToUser.id === shortId) {\r\n                var roles = permissionObject.roles;\r\n                canShare = roles.toString().toLowerCase().indexOf('write') > -1;\r\n            }\r\n        }\r\n\r\n        return canShare;\r\n    }\r\n}\r\n","import Utilities from '../../../common/utilities';\r\nimport '../../experimentConstants';\r\n\r\n'use strict';\r\n\r\nexport default function SharingAController($log, sharingService, userService, localize) {\r\n    var self = this;\r\n\r\n    // Exposed properties\r\n    self.shareDoc = null;\r\n    self.isChrome = Utilities.isChrome();\r\n    self.localize = localize;\r\n\r\n    // Exposed methods\r\n    self.init = init;\r\n    self.shareDocument = shareDocument;\r\n\r\n    // Function declarations\r\n\r\n    function init(doc) {\r\n        self.shareDoc = doc;\r\n        userService.getUserType().then(function (userType) {\r\n            sharingService.setShareUrl(self.shareDoc, userType);\r\n            sharingService.setFlagFromPermissions(self.shareDoc, userType);\r\n        });\r\n    }\r\n\r\n    function shareDocument(clickEvent) {\r\n        $log.trackEvent('ShareRecentDocument', {'application': self.shareDoc.application});\r\n        var openActive = Utilities.isUndefinedOrNull(clickEvent) || Utilities.isUndefinedOrNull(clickEvent.ctrlKey) ? true : !clickEvent.ctrlKey;\r\n        Utilities.navigateToUrlWithNewTab(self.shareDoc.shareUrl, openActive);\r\n        window.close();\r\n    }\r\n}\r\n","import angular from 'angular';\r\nimport 'angular-aria';\r\nimport 'angular-animate';\r\nimport './common';\r\nimport './user';\r\nimport './mru';\r\nimport './diagnostics';\r\nimport './popup';\r\nimport './experimentation';\r\nimport 'office-ui-fabric-core/dist/css/fabric.min.css';\r\nimport 'office-ui-fabric-js/dist/css/fabric.components.min.css';\r\nimport './css/styles.css';\r\n\r\nexport default angular\r\n    .module('app', ['localization', 'ngAria', 'app.common', 'app.diagnostics', 'app.experimentation', 'app.user', 'app.mru', 'app.popup'])\r\n    .config(['$ariaProvider', '$compileProvider', '$httpProvider', '$provide', function ($ariaProvider, $compileProvider, $routeProvider, $httpProvider, $provide) {\r\n\r\n        'use strict';\r\n\r\n        // Configure Angular accessibility; opt out of tabindex handling\r\n        $ariaProvider.config({\r\n            tabindex: false\r\n        });\r\n\r\n        // Override the default regular expression that is used for whitelisting of safe urls during img[src] sanitization\r\n        // eslint-disable-next-line @microsoft/sdl/no-angularjs-sanitization-whitelist\r\n        $compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|data|chrome-extension|ms-browser-extension):/);\r\n    }])\r\n    .name;\r\n","declare let browser: any;\r\ndeclare let chrome: any;\r\n\r\nvar browserListeners: any[] = [];\r\nvar propertyList = {};\r\n\r\nfunction mergeProperties(target: any, source: any): any {\r\n    for (const [key, value] of Object.entries(source)) {\r\n        if (!target[key]) {\r\n            target[key] = value;\r\n            continue;\r\n        }\r\n\r\n        if (typeof value !== typeof target[key]) {\r\n            console.log(`skipping ${key} due to conflicting types`);\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            target[key] = target[key].concat(value);\r\n            continue;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            target[key] = mergeProperties(target[key], value);\r\n            continue;\r\n        }\r\n        target[key] = value;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default (function (): any {\r\n    var browserHandler = ((): any => {\r\n        if (typeof browser === 'object') {\r\n            var edgeBrowser = Object.create(browser);\r\n\r\n            edgeBrowser.notifications = {\r\n                clear: function (notificationId: string, callback: (wasCleared: boolean) => void): void {\r\n                    // Invoke callback with wasCleared == false\r\n                    callback(false);\r\n                },\r\n                create: function (\r\n                    notificationId: string,\r\n                    options: chrome.notifications.NotificationOptions,\r\n                    callback: (notificationId: string) => void\r\n                ): void {\r\n                    // Use window alert dialog to display notification message\r\n                    if (typeof options !== 'undefined' && options !== null) {\r\n                        // Only show when priority is 1 or 2\r\n                        if (typeof options.priority !== 'undefined' && options.priority !== null && options.priority > 0) {\r\n                            window.alert(options.message);\r\n                        }\r\n                    }\r\n\r\n                    // Invoke callback with notification id\r\n                    callback(notificationId);\r\n                },\r\n                onButtonClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n                onClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n            };\r\n\r\n            edgeBrowser.runtime = {\r\n                getPlatformInfo: function (callback: (platformInfo: chrome.runtime.PlatformInfo) => void): void {\r\n                    // Does not execute the callback function\r\n                    // Not implemented\r\n                },\r\n            };\r\n        } else if (typeof chrome === 'object') {\r\n            return Object.create(chrome);\r\n        }\r\n    })();\r\n\r\n    // when running in tests, provide override the necessary functions\r\n    if ((window as any).jasmine) {\r\n        const browserMock = {\r\n            mock: true,\r\n            browserAction: {\r\n                setIcon: function (icon: string): void {},\r\n            },\r\n            extension: {\r\n                getURL: function (name: any): string {\r\n                    return '';\r\n                },\r\n            },\r\n            i18n: {\r\n                getUILanguage: function (name: any, callback: any): string {\r\n                    return '';\r\n                },\r\n                getMessage: function (): string {\r\n                    return '';\r\n                },\r\n            },\r\n            runtime: {\r\n                onMessage: {\r\n                    addListener: function (listener: any): any {\r\n                        browserListeners.push(listener);\r\n                    },\r\n                    removeListener: function (listener: any): void {\r\n                        browserListeners.splice(browserListeners.indexOf(listener), 1);\r\n                    },\r\n                },\r\n                sendMessage: function (message: any): any {\r\n                    for (let i = 0; i < browserListeners.length; ++i) {\r\n                        browserListeners[i](message);\r\n                    }\r\n                },\r\n                id: 'ndjpnladcallmjemlbaebfadecfhkepb',\r\n            },\r\n            storage: {\r\n                local: {\r\n                    get: function (name: string, callback: (arg0: { [x: number]: any }) => void): any {\r\n                        callback({\r\n                            [name]: (propertyList as any)[name],\r\n                        });\r\n                    },\r\n\r\n                    set: function (data: { [x: string]: any; hasOwnProperty: (arg0: string) => any }): void {\r\n                        for (const key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                (propertyList as any)[key] = /*JSON.stringify*/ data[key];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    remove: function (name: string | number, callback: (arg0: any) => void): void {\r\n                        delete (propertyList as any)[name];\r\n                        callback(propertyList);\r\n                    },\r\n\r\n                    clear: function (name: any, callback: any): void {\r\n                        propertyList = {};\r\n                    },\r\n                },\r\n            },\r\n            tabs: {\r\n                create: function (createProperties: any, callback: (arg0: {}) => void): void {\r\n                    if (callback) callback({});\r\n                },\r\n            },\r\n        };\r\n        browserHandler = mergeProperties(browserHandler || {}, browserMock);\r\n        if (!(window as any).chrome) {\r\n            (window as any).chrome = browserHandler;\r\n        }\r\n    }\r\n\r\n    if (!(window as any).BrowserHandler) {\r\n        (window as any).BrowserHandler = browserHandler;\r\n    }\r\n\r\n    return browserHandler;\r\n})();\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\nif (!(window as any).Utilities) {\r\n    (window as any).Utilities = {\r\n        // Deserialize query string to an object\r\n        deserializeQuery: function (query: string): any {\r\n            var match: RegExpExecArray,\r\n                pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n                search = /([^&=]+)=?([^&]*)/g,\r\n                decode = function (s: string): string {\r\n                    return decodeURIComponent(s.replace(pl, ' '));\r\n                },\r\n                obj: any = {};\r\n            match = search.exec(query);\r\n            while (match) {\r\n                obj[decode(match[1])] = decode(match[2]);\r\n                match = search.exec(query);\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Gets the file extension\r\n        getFileExtension: function (fileName: string): string {\r\n            var docExt = '';\r\n            if (fileName) {\r\n                var splitDoc = fileName.match(/(?:\\.)(\\w+)$/);\r\n                if (splitDoc && splitDoc.length > 1) {\r\n                    docExt = splitDoc[splitDoc.length - 1].toLowerCase();\r\n                }\r\n            }\r\n\r\n            return docExt;\r\n        },\r\n\r\n        // Navigate to url\r\n        navigateToUrlWithNewTab: function (url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.tabs.create({\r\n                url: url,\r\n                active: this.isUndefinedOrNull(openActive) ? true : openActive,\r\n            }, onSuccess);\r\n        },\r\n\r\n        // Waiting for a BrowserHandler window to be created if there is no current window existing.\r\n        // This is to avoid opening a browser instance if the extension is installed silently.\r\n        safeOpenNewTab: function(url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.windows.getAll(function (windows: any) {\r\n                if (windows.length === 0) {\r\n                    BrowserHandler.windows.onCreated.addListener(() =>\r\n                        this.navigateToUrlWithNewTab(\r\n                            url,\r\n                            openActive,\r\n                            onSuccess\r\n                        )\r\n                    );\r\n                } else {\r\n                    this.navigateToUrlWithNewTab(\r\n                        url,\r\n                        openActive,\r\n                        onSuccess\r\n                    );\r\n                }\r\n            });\r\n        },\r\n\r\n        // Simple check for not undefined or null\r\n        isNotUndefinedOrNull: function (obj: any): boolean {\r\n            return !this.isUndefinedOrNull(obj);\r\n        },\r\n\r\n        // Simple check for undefined or null\r\n        isUndefinedOrNull: function (obj: any): boolean {\r\n            return typeof obj === 'undefined' || obj === null;\r\n        },\r\n\r\n        // Determines whether the extension is running in testing mode (running jasmine unit tests)\r\n        isExtensionInTestingMode: function (): boolean {\r\n            return this.isNotUndefinedOrNull((window as any).jasmine);\r\n        },\r\n\r\n        // Determines whether extension is running in developer mode; defaults to true if inconclusive\r\n        isExtensionInDevelopmentMode: function (): boolean {\r\n            // testing mode is not development mode\r\n            if (this.isExtensionInTestingMode()) {\r\n                return false;\r\n            }\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                var url = BrowserHandler.runtime.getURL('');\r\n\r\n                if (typeof url !== 'undefined' && url !== null) {\r\n                    if (/_microsoftofficeonline_/i.test(url)) {\r\n                        return false; // from store\r\n                    }\r\n                }\r\n            }\r\n            if ((window as any).chrome && (window as any).chrome.extension) {\r\n                // Make sure chrome manifest exists\r\n                var manifest = this.getManifest();\r\n                if (manifest === undefined || manifest === null) {\r\n                    return false;\r\n                }\r\n\r\n                // Google Web Store adds key and update_url keys to the manifest\r\n                if (manifest.key !== undefined || manifest.update_url !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        // Returns the message id to use.\r\n        // This should work only in chrome.\r\n        getAppDescription: function (): string {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return undefined;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            return manifest.description;\r\n        },\r\n\r\n        // Gets the Chrome runtime manifest object\r\n        getManifest: function (): any {\r\n            // Make sure the BrowserHandler.runtime.getManifest() function exists\r\n            if (typeof BrowserHandler.runtime !== 'object' || typeof BrowserHandler.runtime.getManifest !== 'function') {\r\n                return null;\r\n            }\r\n\r\n            // Make sure manifest exists\r\n            var manifest = BrowserHandler.runtime.getManifest();\r\n            if (manifest === undefined || manifest === null) {\r\n                return null;\r\n            }\r\n\r\n            return manifest;\r\n        },\r\n\r\n        // Returns whether the current context is running in the extension background\r\n        isBackgroundContext: function (): boolean {\r\n            var loc = window.location.href;\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                if (/^ms-browser-extension/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Modern chrome does define window.browser so we need to re-check\r\n            if (window.chrome && window.chrome.extension) {\r\n                if (/^chrome/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Gets the current time\r\n        getCurrentTime: function (): number {\r\n            return Math.round(new Date().getTime() / 1000.0);\r\n        },\r\n\r\n        // Returns true if we are running on Chrome, false otherwise\r\n        isChrome: function (): boolean {\r\n            // Ref: http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618\r\n            return this.getBrowserName() === 'Chrome' && window.navigator.vendor.indexOf('Google') > -1;\r\n        },\r\n\r\n        // browserVersion: undefined,\r\n        getBrowserAndVersion: function () {\r\n            if (!this.browserVersion) {\r\n                const checkUserAgentForBrowser = (browser: string) => {\r\n                    // userAgent provides better version but may be limited in future so fallback to userAgentData if userAgent fails\r\n                    const regex = new RegExp(`(?<browser>${browser})/(?<version>[0-9.]+)`, 'i');\r\n                    const browserMatch = window.navigator.userAgent.match(regex);\r\n                    if (browserMatch && browserMatch.groups) {\r\n                        return browserMatch.groups;\r\n                    }\r\n\r\n                    if ((window.navigator as any).userAgentData) {\r\n                        const brands: Array<{ brand: string; version: string }> = (window.navigator as any).userAgentData.brands;\r\n                        const match = brands.find((entry) => entry.brand.match(new RegExp(browser, 'i')));\r\n                        if (match) {\r\n                            return { browser: match.brand, version: match.version };\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // order matters here as some browsers may include others to appear as another browser, such as Chrome with Safari\r\n                // or Edge based on Chromium including Chrome so more specific  needs to be checked first\r\n                const orderedBrowserMatches = ['OPe?R', 'Edge?', 'Chrome', 'Safari', 'Firefox'];\r\n                for (const browser of orderedBrowserMatches) {\r\n                    const browserVersion = checkUserAgentForBrowser(browser);\r\n                    if (browserVersion) {\r\n                        this.browserVersion = browserVersion;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.browserVersion;\r\n        },\r\n\r\n        // Returns the name of the current browser (Chrome or Edge)\r\n        getBrowserName: function (): string {\r\n            const browserVersion = this.getBrowserAndVersion();\r\n            return browserVersion ? browserVersion.browser : 'Chrome';\r\n        },\r\n\r\n        // Following code is required since Edge doesn't support \"__MSG_@@bidi_dir__\" in RS1\r\n        isRTL: function (): boolean {\r\n            var uiLang = BrowserHandler.i18n.getUILanguage();\r\n            return /^ar/i.test(uiLang) || /^fa/i.test(uiLang) || /^he/i.test(uiLang) ? true : false;\r\n        },\r\n\r\n        // Set the pop up icon\r\n        setIcon: function (iconPath: any): void {\r\n            BrowserHandler.browserAction.setIcon({\r\n                path: iconPath,\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport default (window as any).Utilities;\r\n","﻿/* global BrowserHandler angular chrome browser */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    /*\r\n     * An AngularJS Localization Service\r\n     *\r\n     * Written by Jim Lavin\r\n     * http://codingsmackdown.tv\r\n     *\r\n     * Modified to integrate with chrome.i18n infrastructure\r\n     */\r\n    var BrowserHandler = window.BrowserHandler;\r\n\r\n    if (!BrowserHandler) {\r\n        BrowserHandler = chrome || browser;\r\n    }\r\n\r\n    angular\r\n        .module('localization', [])\r\n        // localization service responsible for retrieving resource files from chrome.i18n\r\n        .factory('localize', ['$filter', function ($filter) {\r\n            var localize = {\r\n                // checks the dictionary for a localized resource string\r\n                getLocalizedString: function (value) {\r\n                    // default the result to an empty string\r\n                    var result = '';\r\n\r\n                    // pull localized resource using Chrome API\r\n                    result = BrowserHandler.i18n.getMessage(value);\r\n\r\n                    // return the value to the call\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            // return the local instance when called\r\n            return localize;\r\n        }])\r\n\r\n        // simple translation filter\r\n        // usage {{ TOKEN | i18n }}\r\n        .filter('i18n', ['localize', function (localize) {\r\n            return function (input) {\r\n                return localize.getLocalizedString(input);\r\n            };\r\n        }])\r\n\r\n        // translation directive that can handle dynamic strings\r\n        // updates the text value of the attached element\r\n        // usage <span data-i18n=\"TOKEN\" ></span>\r\n        // or\r\n        // <span data-i18n=\"TOKEN|VALUE1|VALUE2\" ></span>\r\n        .directive('i18n', ['localize', function (localize) {\r\n            var i18nDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length <= 1) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    // update the element\r\n                    for (var index = 1; index < values.length; index++) {\r\n                        var target = '{' + (index - 1) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.text(tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18n', function (value) {\r\n                        i18nDirective.updateText(elm, attrs.i18n);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18nDirective;\r\n        }])\r\n        // translation directive that can handle dynamic strings\r\n        // updates the attribute value of the attached element\r\n        // usage <span data-i18n-attr=\"TOKEN|ATTRIBUTE\" ></span>\r\n        // or\r\n        // <span data-i18n-attr=\"TOKEN|ATTRIBUTE|VALUE1|VALUE2\" ></span>\r\n        .directive('i18nAttr', ['localize', function (localize) {\r\n            var i18NAttrDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length < 2) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    for (var index = 2; index < values.length; index++) {\r\n                        var target = '{' + (index - 2) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.attr(values[1], tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18nAttr', function (value) {\r\n                        i18NAttrDirective.updateText(elm, value);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18NAttrDirective;\r\n        }]);\r\n})();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t213: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkofficechromeextension\"] = self[\"webpackChunkofficechromeextension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5939)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}