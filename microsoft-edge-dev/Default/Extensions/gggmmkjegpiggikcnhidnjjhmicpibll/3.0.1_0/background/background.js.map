{"version":3,"sources":["webpack://officechromeextension/webpack/runtime/chunk loaded","webpack://officechromeextension/./app/common/constants.js","webpack://officechromeextension/./app/diagnostics/index.js","webpack://officechromeextension/./app/diagnostics/telemetry.service.js","webpack://officechromeextension/./app/diagnostics/ariaTelemetry.service.js","webpack://officechromeextension/./app/common/httpInterceptor.js","webpack://officechromeextension/./app/common/logDecorator.js","webpack://officechromeextension/./app/common/storage.service.js","webpack://officechromeextension/./app/common/index.js","webpack://officechromeextension/./app/common/notification.service.js","webpack://officechromeextension/./app/user/index.js","webpack://officechromeextension/./app/user/protectedResourceInterceptor.js","webpack://officechromeextension/./app/user/msaUser.service.js","webpack://officechromeextension/./app/user/o365User.service.js","webpack://officechromeextension/./app/user/msidUser.service.js","webpack://officechromeextension/./app/user/user.service.js","webpack://officechromeextension/./app/background/background.controller.js","webpack://officechromeextension/./app/copypaste/index.js","webpack://officechromeextension/./app/file/index.js","webpack://officechromeextension/./app/file/file.service.js","webpack://officechromeextension/./app/file/fileLoader.service.js","webpack://officechromeextension/./app/file/oneDriveFile.service.js","webpack://officechromeextension/./app/file/sharePointFile.service.js","webpack://officechromeextension/./app/background/background.js","webpack://officechromeextension/./app/common/browserHandler.ts","webpack://officechromeextension/./app/common/permissions.ts","webpack://officechromeextension/./app/common/utilities.ts","webpack://officechromeextension/./app/diagnostics/aria.ts","webpack://officechromeextension/./third_party/angularjs-localizationservice.1.0.1/localize.js","webpack://officechromeextension/webpack/bootstrap","webpack://officechromeextension/webpack/runtime/compat get default export","webpack://officechromeextension/webpack/runtime/define property getters","webpack://officechromeextension/webpack/runtime/hasOwnProperty shorthand","webpack://officechromeextension/webpack/runtime/jsonp chunk loading","webpack://officechromeextension/webpack/startup"],"names":["deferred","IDTYPE","MSACID","ORGIDPUID","ACTIVITY","AUTHENTICATION","NAME","AUTHORIZATION","NOTIFICATION","TELEMETRY","USERINFO_AVAILABLE","SSO","LOGOUT","REQUEST_TOKEN","LOG","APPINFO_NAME","FILE","APPLICATION_IMAGE_PATH","APPLICATION_LABEL","ERROR","MAX_SIZE_BYTE_LIMIT","OFFICE_APP_FILE_ASSOCIATIONS","EXCEL","ONENOTE","POWERPOINT","WORD","OFFICE_MIME_TYPES","ORIGIN","HTML5","LOCAL_PATH","SUPPORTED_APPLICATIONS","SUPPORTED_FILE_TYPES","JQUERY","EVENT_ID","KEYPRESS","ENTER","ARROWLEFT","ARROWUP","ARROWRIGHT","ARROWDOWN","MOUSEDOWN","LEFT_BUTTON_CLICK","LINKS","OFFICE_URL","PROGRESSPAGE_URL","SETTINGS_URL","SIGNUP","UNINSTALL","OFFICE_HOME_URL","OFFICE_HOME_DEV_URL","SUPPORT_URL","MYACCOUNT_MSA_URL","MYACCOUNT_O365_URL","APP","arguments","SWAY","SWAY_DEFAULT","ONEDRIVE","TEAMS","SHAREPOINT_DEFAULT","OUTLOOK_DEFAULT","OUTLOOK_O365","MENU_VIEWMODE","NONE","NEW","OPEN","ACCOUNT","SETTINGS","OAUTH","ACCESS_TOKEN","AUTH_CODE","CODE","EXPIRES_ON","REFRESH_TOKEN","SERVICE_ENDPOINT","SERVICE_ID","O365CONFIG","CLIENT_ID","CLIENT_SECRET","GRAPH_RESOURCE","ENDPOINTS","INSTANCE","LOGOUT_URI","MRU_URL","PHOTO_URL","ONEDRIVE_URL","SHAREPOINT_URL","REDIRECT_URI","UPLOAD_URL","FEDERATED_URL","MSACONFIG","ONEDRIVE_ITEMS_URL","SCOPE","URL","USERINFO_URL","FILEACCESS","id","priority","type","message","FILE_MAX_SIZE_BYTE_LIMIT_REACHED","FILE_UPLOAD_FAILURE_GENERIC","FILE_UPLOAD_FAILURE_SERVER","FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA","FILE_UPLOAD_IN_PROGRESS","SETDEFAULT","AUTOSAVE","buttons","title","AUTOSAVETOONEDRIVE","AUTOSAVETOSHAREPOINT","NOTSIGNEDIN","UNSUPPORTEDFILETYPE","INVALIDSUBSCRIPTION","WEBDOCREDIRECT","DISPLAY_URL","QUERY_OPTION","RECENTS","LIST_LENGTH_MSA","LIST_LENGTH_O365","FILTER","ONEDRIVE_ENDPOINT","DISPLAY_PANEL","LIST","LOADING","NO_DOCS","CANCELLED","GENERIC","NO_DOCS_FOUND","UNSUPPORTED_USER_TYPE","SIGNINSTATUS","UNKNOWN","HASREFRESHTOKEN","SIGNEDIN","COMMAND","SET_DISABLED","TRACK_TRACE","TRACK_EVENT","ENABLED_SETTING_STORAGE_KEY","EVENT_PREFIX","PII_TYPE","IDENTITY","USER_TYPE","MSA","O365","USER_SERVICE_TYPE","MSID","TIMEOUT","DEFAULT_REQUEST","USER_INFO_LOOKUP","USER_INFO_LOOKUP_TEST","COPY_PASTE","TEST","PASTE","GET_CLIPBOARD_DATA","GET_AVAILABLE_COMMANDS","ERROR_RETRIES","HTTP_REQUEST","BROWSER_ICON","DEFAULT","INACTIVE","MESSAGE_CHANNEL","RESPONSE_STATUS_SUCCESS","RESPONSE_STATUS_FAIL","RESPONSE_CODE_NO_SUPPORT","RESPONSE_CODE_INVALID","service","$injector","ariaTelemetry","telemetryProviders","addCustomProperties","async","properties","userService","get","pii","manifest","appVersion","version","language","constants","userType","getUserType","semanticContext","AWTLogManager","setUserId","userInfo","getUserInfo","cid","features","experimentFeatures","puid","push","name","value","tid","getEnabledSettingFromStorage","$q","storage","defer","then","result","resolve","settings","settingName","storedSetting","JSON","parse","undefined","readSettingValueOrUndefined","telemetry_enabled","promise","getEnabledSetting","setEnabledSetting","enabled","set","stringify","lastUpdate","Date","now","manualOverride","setEnabledSettingInStorage","i","length","activity","command","trackEvent","eventName","measurements","propertiesToTrack","trackTrace","$window","addEventProperties","eventProperties","setProperty","property","hasOwnProperty","enabledSetting","this","replace","AWTEventProperties","setName","ariaLogger","logEvent","$log","$timeout","retries","request","config","timeout","responseError","response","status","debug","url","info","data","error_codes","$http","startsWith","error","reject","logDecorator","$delegate","telemetry","getTruncatedString","string","substring","logToBackground","severity","stack","filename","source","log","toLocaleString","month","day","hour","minute","second","extensionOrigin","location","href","origin","toString","trimExtensionOrigin","console","toLowerCase","messageString","prepareLog","originalFunction","severityLevel","args","slice","call","logParams","fullStack","Error","Promise","split","mapStackTrace","mappedStack","match","shift","caller","matched","pop","timeStamp","apply","warn","window","dumpStorage","chrome","local","$httpProvider","$provide","decorator","interceptors","factory","keys","items","remove","clear","localize","show","notification","index","getLocalizedString","iconUrl","wasCleared","imageUrl","progress","notificationId","httpInterceptor","headers","resource","acquireToken","token","Authorization","clearToken","getConfig","lookupUserInfo","oneDriveUrl","method","email","emails","account","getResourceForEndpoint","endpoint","configEndpoint","indexOf","tokenData","idToken","user","parsedJson","encodedIdToken","decodedToken","jwtToken","matches","exec","header","JWSPayload","JWSSig","decodeJwt","base64Decoded","base64IdToken","atob","decodeURIComponent","escape","base64DecodeStringUrlSafe","_logstatus","err","extractIdToken","aud","upn","getUserProfile","id_token","httpRequest","webUrl","reason","getOneDriveUrl","sharePointUrl","getSharePointUrl","scopes","userInfoUrl","aadV2Url","redirectUri","logoutUrl","authorizeUrl","loginUrl","search","createParams","prompt","getUserService","additionalParams","defaultParams","URLSearchParams","Object","assign","fetchUserInfo","object","prop","deleteMetaDataTags","fetchOneDriveUrl","fetchOneDriveQuota","quota","parseInt","total","Math","round","endpointResources","paths","urlPath","pathname","reduce","previous","current","warning","infoFuncs","all","requestAccessToken","scope","response_type","params","navigateToAuthEndpoint","access_token","msaUserService","o365UserService","msidUserService","userOrServiceType","getServiceProvider","getAccessToken","isTokenExpired","expires_on","refreshToken","getIdentityProperty","getRefreshToken","refresh_token","grant_type","tokenUrl","refreshAccessToken","saveTokens","statusText","authorize","serviceType","code","accessToken","acquireTokenFromCode","setUserType","login","error_description","typeOrToken","values","includes","tenantInfo","tenants","payload","parseJwtToken","tenant","resolveTypeAndTenant","tenantEntry","identity","getStoredIdentity","mergeProperties","unpackStateParam","state","appid","inIFrame","searchParams","param","createGuid","frameId","cleanup","listener","iframe","document","getElementById","parentNode","removeChild","sender","clearTimeout","has","iframeAuthDelay","setTimeout","createElement","setAttribute","style","visibility","position","width","height","border","body","appendChild","src","handleLogin","logout","handleLogout","useAuthNext","toggle","override","checkAuthFlighting","noLogout","options","checkedTime","toUTCString","storageData","elapsed","authNext","lastCheck","flighted","force","accept","contentType","deviceId","getDeviceId","AppId","FeatureFlags","userServiceProvider","getServiceForUserType","target","key","sourceValue","entries","Array","isArray","forEach","getEndpointBase","expires_in","Number","item","tokenEntry","supportsScopes","required","granted","resourceScope","allTokens","saveUserInfo","expiresOn","userPrincipalName","getPhotoFromServer","photoUrl","photoRequest","responseType","photo","reader","FileReader","onload","readAsDataURL","char","timestamp","performance","rand","random","floor","close","tab","checkTransitionAuth","setInterval","initCheckTransition","isLoggedIn","getEndpointUrlForCurrentUser","getUserPhoto","waitForUserInfo","userInfoListener","giveUpDelay","giveUp","cleanUp","getUserLicenseInfo","controller","fileService","copyPasteService","webRedirectDisabled","sessionInfo","documentTabId","webRedirect_disabled","windowId","currentTime","startTime","duration","LastSession","isInteger","start_time","logDay","today","setHours","minutes","updateSessionInfo","changes","areaName","newValue","requestHeaders","tabId","urls","responseHeaders","isResponseHeaderPrivate","displayWebDocRedirectNotification","redirectUrl","activeTabId","upload","fileUrl","openFileUrlInTab","details","platformInfo","os","supportUrl","e","previousVersion","localStorage","getItem","profile","displayAutoSaveNotification","sendResponse","eventId","localeCompare","sensitivity","RespondWithError","CreateInvalidMethodResponse","description","setUninstallUrl","checkPermission","msg","callback","handleTestCommand","handlePasteCommand","handleGetClipboardDataCommand","handleGetAvailableCommands","addEventListener","onPasteEvent","changeInfo","NameSpaceType","DomainName","currentUrl","uploadFile","file","startUrl","getDisplayTabId","ext","IsInvalidMethod","invalidResponse","fileEntries","uploadFiles","event","RegExp","prototype","imageReader","fileReader","fileLoader","sharePointFileService","oneDriveFileService","currentUserType","doUpload","fileServiceProvider","getFileServiceProvider","handleFileUploadError","fileInfo","fileOrigin","loadFile","autoSaveNotification","handleFileLoadError","size","FILE_SIZE_MAX_EXCEEDED","UNSUPPORTED_FILE_TYPE","encodeURI","content","Int8Array","readAsArrayBuffer","loadFileFromHTML5","filePath","xhr","XMLHttpRequest","open","onreadystatechange","readyState","LOAD_FROM_PATH","send","loadFileFromPath","byteLength","encodeURIComponent","transformRequest","fileName","toISOString","etag","eTag","documentElement","browserListeners","propertyList","browserHandler","browser","edgeBrowser","create","notifications","alert","onButtonClicked","addListener","onClicked","runtime","getPlatformInfo","jasmine","concat","mock","browserAction","setIcon","icon","extension","getURL","i18n","getUILanguage","getMessage","onMessage","removeListener","splice","sendMessage","tabs","createProperties","BrowserHandler","promised","proc","results","requested","permissions","getAll","filter","permission","filterNeeded","contains","eventProps","lastError","optional","getManifest","optional_permissions","Utilities","deserializeQuery","query","pl","decode","s","obj","getFileExtension","docExt","splitDoc","navigateToUrlWithNewTab","openActive","onSuccess","active","isUndefinedOrNull","safeOpenNewTab","windows","onCreated","isNotUndefinedOrNull","isExtensionInTestingMode","isExtensionInDevelopmentMode","test","update_url","getAppDescription","isBackgroundContext","loc","getBackgroundPage","getCurrentTime","getTime","isChrome","getBrowserName","navigator","vendor","getBrowserAndVersion","browserVersion","checkUserAgentForBrowser","regex","browserMatch","userAgent","groups","userAgentData","brands","find","entry","brand","orderedBrowserMatches","isRTL","uiLang","iconPath","path","tenantId","initialize","setContext","getLogger","angular","module","$filter","input","directive","i18nDirective","restrict","updateText","elm","tag","text","link","attrs","$observe","i18NAttrDirective","attr","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","installedChunks","965","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"\\background\\background.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { CopyPasteService } from '@1js/office-online-ccp';\r\n\r\nexport default {\r\n    IDTYPE: {\r\n        MSACID: 'MSACID',\r\n        ORGIDPUID: 'OrgIdPUID'\r\n    },\r\n    ACTIVITY: {\r\n        AUTHENTICATION: {\r\n            NAME: 'authentication'\r\n        },\r\n        AUTHORIZATION: {\r\n            NAME: 'authorization'\r\n        },\r\n        NOTIFICATION: {\r\n            NAME: 'notification'\r\n        },\r\n        TELEMETRY: {\r\n            NAME: 'telemetry'\r\n        },\r\n        USERINFO_AVAILABLE: {\r\n            NAME: 'userInfoAvailable'\r\n        },\r\n        SSO: {\r\n            NAME: 'sso'\r\n        },\r\n        LOGOUT: {\r\n            NAME: 'logout'\r\n        },\r\n        REQUEST_TOKEN: {\r\n            NAME: 'requestToken'\r\n        },\r\n        LOG: {\r\n            NAME: 'log'\r\n        },\r\n    },\r\n    APPINFO_NAME: 'OfficeOnlineExtension',\r\n    FILE: {\r\n        APPLICATION_IMAGE_PATH: {\r\n            'excel': 'assets/excel_doc.png',\r\n            'onenote': 'assets/onenote_doc.png',\r\n            'powerpoint': 'assets/powerpoint_doc.png',\r\n            'unknown': 'assets/generic_doc.png',\r\n            'word': 'assets/word_doc.png'\r\n        },\r\n        APPLICATION_LABEL: {\r\n            'excel': 'ExcelOnlineAppName',\r\n            'onenote': 'OneNoteOnlineAppName',\r\n            'powerpoint': 'PowerPointOnlineAppName',\r\n            'unknown': 'OfficeOnlineAppName',\r\n            'word': 'WordOnlineAppName'\r\n        },\r\n        ERROR: {\r\n            'FILE_SIZE_MAX_EXCEEDED': 'fileSizeMaxExceeded',\r\n            'LOAD_FROM_PATH': 'loadFromPath',\r\n            'UNSUPPORTED_FILE_TYPE': 'unsupportedFileType'\r\n        },\r\n        MAX_SIZE_BYTE_LIMIT: 1024 * 1024 * 4,\r\n        OFFICE_APP_FILE_ASSOCIATIONS: {\r\n            EXCEL: 'excel',\r\n            ONENOTE: 'onenote',\r\n            POWERPOINT: 'powerpoint',\r\n            WORD: 'word'\r\n        },\r\n        OFFICE_MIME_TYPES: {\r\n            'application/msword': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'word',\r\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.template': 'word',\r\n            'application/vnd.oasis.opendocument.text': 'word',\r\n            'application/vnd.ms-powerpoint': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'powerpoint',\r\n            'application/vnd.openxmlformats-officedocument.presentationml.slideshow': 'powerpoint',\r\n            'application/vnd.oasis.opendocument.presentation': 'powerpoint',\r\n            'application/vnd.ms-excel': 'excel',\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'excel',\r\n            'application/vnd.ms-excel.sheet.binary.macroEnabled.12': 'excel',\r\n            'application/vnd.ms-excel.sheet.macroEnabled.12': 'excel',\r\n            'application/vnd.oasis.opendocument.spreadsheet': 'excel'\r\n        },\r\n        ORIGIN: {\r\n            HTML5: 'html5',\r\n            LOCAL_PATH: 'local_path'\r\n        },\r\n        SUPPORTED_APPLICATIONS: [\r\n            'Word',\r\n            'Excel',\r\n            'PowerPoint',\r\n            'OneNote'\r\n        ],\r\n        SUPPORTED_FILE_TYPES: {\r\n            'doc': 'word',\r\n            'dot': 'word',\r\n            'docx': 'word',\r\n            'dotx': 'word',\r\n            'odt': 'word',\r\n            'ppt': 'powerpoint',\r\n            'pot': 'powerpoint',\r\n            'pps': 'powerpoint',\r\n            // BUG: 214522: 'ppa': 'powerpoint',\r\n            'pptx': 'powerpoint',\r\n            'ppsx': 'powerpoint',\r\n            'odp': 'powerpoint',\r\n            // BUG: 214522: 'xls': 'excel',\r\n            // BUG: 214522: 'xlt': 'excel',\r\n            // BUG: 214522: 'xla': 'excel',\r\n            'xlsx': 'excel',\r\n            'xlsm': 'excel',\r\n            'xlsb': 'excel',\r\n            'ods': 'excel',\r\n            'notebook': 'onenote'\r\n        }\r\n    },\r\n    JQUERY: {\r\n        EVENT_ID: {\r\n            // Reference: http://api.jquery.com/keypress/\r\n            KEYPRESS: {\r\n                ENTER: 13,\r\n                ARROWLEFT: 37,\r\n                ARROWUP: 38,\r\n                ARROWRIGHT: 39,\r\n                ARROWDOWN: 40\r\n            },\r\n            // Reference: http://api.jquery.com/mousedown/\r\n            MOUSEDOWN: {\r\n                LEFT_BUTTON_CLICK: 1\r\n            }\r\n        }\r\n    },\r\n    LINKS: {\r\n        OFFICE_URL: 'https://portal.office.com/home',\r\n        PROGRESSPAGE_URL: 'https://onedrive.live.com',\r\n        SETTINGS_URL: 'chrome://extensions',\r\n        SIGNUP: 'https://onedrive.live.com/about',\r\n        UNINSTALL: 'https://contentstorage.osi.office.net/officeonlineextensionuninstall/uninstall.html',\r\n        OFFICE_HOME_URL: 'https://go.microsoft.com/fwlink/?linkid=859986',\r\n        OFFICE_HOME_DEV_URL: 'https://go.microsoft.com/fwlink/?linkid=860665',\r\n        SUPPORT_URL: 'https://aka.ms/officeextsignin',\r\n        MYACCOUNT_MSA_URL: 'https://go.microsoft.com/fwlink/?LinkId=823747',\r\n        MYACCOUNT_O365_URL: 'https://go.microsoft.com/fwlink/?LinkId=824642',\r\n        APP: {\r\n            WORD: function () {return `https://office.live.com/start/word.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            EXCEL: function () {return `https://office.live.com/start/excel.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            POWERPOINT: function () {return `https://office.live.com/start/powerpoint.aspx?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            ONENOTE: function () {return `https://www.onenote.com/notebooks?auth=${arguments[0]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY: function () {return `https://www.sway.com/?auth_pvr=${arguments[0]}&auth_upn=${arguments[1]}&WT.mc_id=Chrome_OfficeApp`},\r\n            SWAY_DEFAULT: 'https://www.sway.com/?WT.mc_id=Chrome_OfficeApp',\r\n            ONEDRIVE: 'https://onedrive.live.com',\r\n            TEAMS: 'https://teams.microsoft.com',\r\n            SHAREPOINT_DEFAULT: 'https://products.office.com/sharepoint',\r\n            OUTLOOK_DEFAULT: 'https://outlook.com',\r\n            OUTLOOK_O365: 'https://outlook.office365.com'\r\n        }\r\n    },\r\n    MENU_VIEWMODE: {\r\n        NONE: 0,\r\n        NEW: 1,\r\n        OPEN: 2,\r\n        ACCOUNT: 3,\r\n        SETTINGS: 4\r\n    },\r\n    OAUTH: {\r\n        ACCESS_TOKEN: 'access_token',\r\n        AUTH_CODE: 'authorization_code',\r\n        CODE: 'code',\r\n        EXPIRES_ON: 'expires_on',\r\n        REFRESH_TOKEN: 'refresh_token',\r\n        SERVICE_ENDPOINT: 'service_endpoint',\r\n        SERVICE_ID: 'service_id'\r\n    },\r\n    O365CONFIG: {\r\n        CLIENT_ID: 'd08f258a-c5dd-4a8f-8afc-9321d67c767a',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579837]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        GRAPH_RESOURCE: 'https://graph.microsoft.com',\r\n        ENDPOINTS: {\r\n            'officeapps.live.com': 'https://officeapps.live.com',\r\n            'graph.microsoft.com': 'https://graph.microsoft.com'\r\n        },\r\n        INSTANCE: 'https://login.windows.net/common/oauth2/',\r\n        LOGOUT_URI: 'https://login.microsoftonline.com/logout.srf',\r\n        MRU_URL: 'https://ocws.officeapps.live.com/ocs/docs/recent/',\r\n        PHOTO_URL: 'https://graph.microsoft.com/v1.0/me/photo/$value',\r\n        ONEDRIVE_URL: 'https://graph.microsoft.com/v1.0/me/drive/root',\r\n        SHAREPOINT_URL: 'https://graph.microsoft.com/v1.0/sites/root',\r\n        REDIRECT_URI: 'https://login.microsoftonline.com/login.srf',\r\n        UPLOAD_URL: 'https://graph.microsoft.com/v1.0/me/drive/root:/',\r\n        FEDERATED_URL: 'https://login.microsoftonline.com/getuserrealm.srf'\r\n    },\r\n    MSACONFIG: {\r\n        CLIENT_ID: '000000004016DA34',\r\n        // [SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"[Bug Id: 3579838]: Fake secret that cannot access resources\")]\r\n        CLIENT_SECRET: '00000000000000000000000000000000',\r\n        INSTANCE: 'https://login.live.com/oauth20_authorize.srf',\r\n        LOGOUT_URI: 'https://login.live.com/oauth20_logout.srf',\r\n        ONEDRIVE_ITEMS_URL: 'https://api.onedrive.com/v1.0/drive/items/',\r\n        PHOTO_URL: 'https://apis.live.net/v5.0/me/picture',\r\n        REDIRECT_URI: 'https://login.live.com/oauth20_desktop.srf',\r\n        SCOPE: 'wl.basic+wl.emails+wl.signin+wl.offline_access+onedrive.readwrite+wl.skydrive',\r\n        URL: 'https://login.live.com/oauth20_token.srf',\r\n        USERINFO_URL: 'https://apis.live.net/v5.0/me'\r\n    },\r\n    /* Notification priorities:\r\n       -2, -1: Do not use; deprecated\r\n       0 - Lowest priority; will not display in Edge\r\n       1 - Medium priority\r\n       2 - Highest priority\r\n    */\r\n    NOTIFICATION: {\r\n        FILEACCESS: {\r\n            id: 'fileAccess',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileAccess'\r\n        },\r\n        FILE_MAX_SIZE_BYTE_LIMIT_REACHED: {\r\n            id: 'fileMaxSizeByteLimitReached',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileMaxSizeByteLimitReached'\r\n        },\r\n        FILE_UPLOAD_FAILURE_GENERIC: {\r\n            id: 'fileUploadFailureGeneric',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureGeneric'\r\n        },\r\n        FILE_UPLOAD_FAILURE_SERVER: {\r\n            id: 'fileUploadFailureServer',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureServer'\r\n        },\r\n        FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA: {\r\n            id: 'fileUploadFailureUnsupportedMedia',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadFailureUnsupportedMedia'\r\n        },\r\n        FILE_UPLOAD_IN_PROGRESS: {\r\n            id: 'fileUploadInProgress',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationFileUploadInProgress'\r\n        },\r\n        SETDEFAULT: {\r\n            id: 'setDefault',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationSetDefault'\r\n        },\r\n        AUTOSAVE: {\r\n            id: 'autoSave',\r\n            priority: 0,\r\n            type: 'basic',\r\n            buttons: [\r\n                {title: 'NotificationAutoSaveButton'}\r\n            ]\r\n        },\r\n        AUTOSAVETOONEDRIVE: 'NotificationAutoSaveToOneDrive',\r\n        AUTOSAVETOSHAREPOINT: 'NotificationAutoSaveToSharePoint',\r\n        NOTSIGNEDIN: {\r\n            id: 'notSignedIn',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationNotSignedIn'\r\n        },\r\n        UNSUPPORTEDFILETYPE: {\r\n            id: 'unsupportedFileType',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationUnsupportedFileType'\r\n        },\r\n        INVALIDSUBSCRIPTION: {\r\n            id: 'invalidSubscription',\r\n            priority: 2,\r\n            type: 'basic',\r\n            message: 'NotificationInvalidSubscription'\r\n        },\r\n        WEBDOCREDIRECT: {\r\n            id: 'webDocRedirect',\r\n            priority: 0,\r\n            type: 'basic',\r\n            message: 'NotificationWebDocRedirect',\r\n            buttons: [\r\n                {title: 'NotificationWebDocRedirectButton'}\r\n            ]\r\n        }\r\n    },\r\n    ONEDRIVE: {\r\n        DISPLAY_URL: 'https://onedrive.live.com/view.aspx?cid=',\r\n        INSTANCE: 'https://api.onedrive.com/v1.0',\r\n        QUERY_OPTION: '?@name.conflictBehavior=rename'\r\n    },\r\n    RECENTS: {\r\n        LIST_LENGTH_MSA: 3,\r\n        LIST_LENGTH_O365: 3,\r\n        FILTER: '?apps=powerpoint,word,excel,onenote&sort=date',\r\n        ONEDRIVE_ENDPOINT: 'https://api.onedrive.com/v2.1/drive/recent',\r\n        DISPLAY_PANEL: {\r\n            ERROR: 0,\r\n            LIST: 1,\r\n            LOADING: 2,\r\n            NO_DOCS: 3,\r\n            NONE: 4\r\n        },\r\n        ERROR: {\r\n            CANCELLED: 0,\r\n            GENERIC: 1,\r\n            NO_DOCS_FOUND: 2,\r\n            UNSUPPORTED_USER_TYPE: 3\r\n        }\r\n    },\r\n    SIGNINSTATUS: {\r\n        UNKNOWN: -1,\r\n        NONE: 0,\r\n        HASREFRESHTOKEN: 1,\r\n        SIGNEDIN: 2\r\n    },\r\n    TELEMETRY: {\r\n        COMMAND: {\r\n            SET_DISABLED: 'setDisabledTelemetry',\r\n            TRACK_TRACE: 'trackTrace',\r\n            TRACK_EVENT: 'trackEvent'\r\n        },\r\n        ENABLED_SETTING_STORAGE_KEY: 'telemetry_enabled',\r\n        EVENT_PREFIX: 'OO_CHROME_',\r\n        PII_TYPE: {\r\n            IDENTITY: 10\r\n        }\r\n    },\r\n    USER_TYPE: {\r\n        MSA: 'msa',\r\n        O365: 'aad',\r\n        NONE: 'none'\r\n    },\r\n    USER_SERVICE_TYPE: {\r\n        MSA: 'msaUserService',\r\n        O365: 'o365UserService',\r\n        MSID: 'msidUserService',\r\n        NONE: 'noneUserService'\r\n    },\r\n    TIMEOUT: {\r\n        DEFAULT_REQUEST: 10000,\r\n        USER_INFO_LOOKUP: 5000,\r\n        USER_INFO_LOOKUP_TEST: 50\r\n    },\r\n    COPY_PASTE: {\r\n        TEST: CopyPasteService.testCommand,\r\n        PASTE: CopyPasteService.pasteCommand,\r\n        GET_CLIPBOARD_DATA: CopyPasteService.getClipboardDataCommand,\r\n        GET_AVAILABLE_COMMANDS: CopyPasteService.getAvailableCommandsCommand\r\n    },\r\n    ERROR_RETRIES: {\r\n        HTTP_REQUEST: 3\r\n    },\r\n    BROWSER_ICON: {\r\n        DEFAULT: '../assets/icon_20.png',\r\n        INACTIVE: '../assets/icon_inactive_20.png'\r\n    },\r\n    SSO: {\r\n        MESSAGE_CHANNEL: 'com.microsoft.browsercore',\r\n        RESPONSE_STATUS_SUCCESS: 'Success',\r\n        RESPONSE_STATUS_FAIL: 'Fail',\r\n        RESPONSE_CODE_NO_SUPPORT: 'NoSupport',\r\n        RESPONSE_CODE_INVALID: -2147186943\r\n    },\r\n};\r\n","import angular from 'angular';\r\nimport ariaTelemetry from './ariaTelemetry.service';\r\nimport telemetry from './telemetry.service';\r\n\r\nexport default angular\r\n    .module('app.diagnostics', [])\r\n    .service('telemetry', ['$injector', 'ariaTelemetry', telemetry])\r\n    .service('ariaTelemetry', ['$window', ariaTelemetry])\r\n    .name;\r\n\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {AWTLogManager} from '@aria/webjs-sdk';\r\n\r\nexport default function telemetry($injector, ariaTelemetry) {\r\n    var telemetryProviders = [ariaTelemetry];\r\n\r\n    var addCustomProperties = async function (properties) {\r\n        var userService = $injector.get('userService');\r\n\r\n        // Append app specific properties\r\n        if (Utilities.isUndefinedOrNull(properties)) {\r\n            properties = {};\r\n        }\r\n\r\n        properties.pii = [];\r\n        var manifest = Utilities.getManifest();\r\n        if (manifest) {\r\n            properties.appVersion = manifest.version;\r\n        }\r\n\r\n        // Get UI language\r\n        var language = BrowserHandler.i18n.getUILanguage();\r\n        if (Utilities.isNotUndefinedOrNull(language)) {\r\n            properties.language = language;\r\n        }\r\n\r\n        // Add AppInfo.Name for GDPR T3 export\r\n        properties['AppInfo.Name'] = constants.APPINFO_NAME;\r\n        // Add user info properties\r\n        var userType = await userService.getUserType();\r\n        var semanticContext = AWTLogManager.getSemanticContext();\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        var userInfo = await userService.getUserInfo(userType);\r\n        if (Utilities.isUndefinedOrNull(userInfo)) {\r\n            // Clear UserInfo.Id and UserInfo.IdType context\r\n            semanticContext.setUserId('', '', '');\r\n            return properties;\r\n        }\r\n\r\n        // userInfo properties - cid from MSA\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.cid)) {\r\n            properties.cid = userInfo.cid;\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.cid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.MSACID;\r\n        }\r\n\r\n        // userInfo properties - features (from ExP treatment assignment)\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.features)) {\r\n            properties.experimentFeatures = userInfo.features;\r\n        }\r\n\r\n        // PII identity properties - puid from O365\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.puid)) {\r\n            properties.pii.push({type: constants.TELEMETRY.PII_TYPE.IDENTITY, name: 'puid', value: userInfo.puid});\r\n            // Instrument AWT about UserInfo.Id and UserInfo.IdType for GDPR requirements\r\n            semanticContext.setUserId(userInfo.puid);\r\n            properties['UserInfo.IdType'] = constants.IDTYPE.ORGIDPUID;\r\n        }\r\n\r\n        if (Utilities.isNotUndefinedOrNull(userInfo.tid)) {\r\n            properties['UserInfo.OMSTenantId'] = userInfo.tid;\r\n        }\r\n\r\n        return properties;\r\n    };\r\n\r\n    // Parses correctly the value of setting\r\n    // Returns undefined if the value cannot be parsed.\r\n    var readSettingValueOrUndefined = function (settings, settingName) {\r\n        if (!settings[settingName]) {return undefined}\r\n\r\n        var storedSetting = JSON.parse(settings[settingName]);\r\n\r\n        if (storedSetting.value === undefined) {return undefined}\r\n\r\n        return JSON.parse(storedSetting.value);\r\n    };\r\n\r\n    var getEnabledSettingFromStorage = function () {\r\n        var $q = $injector.get('$q');\r\n        var storage = $injector.get('storage');\r\n        var deferred = $q.defer();\r\n\r\n        storage.get(['telemetry_enabled', 'enableTelemetry']).then(function (result) {\r\n            deferred.resolve(\r\n                Utilities.isUndefinedOrNull(result)\r\n                    || readSettingValueOrUndefined(result, 'enableTelemetry') === true\r\n                    || Utilities.isUndefinedOrNull(result.telemetry_enabled)\r\n                    || result.telemetry_enabled === true\r\n                    ? true : false);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    var setEnabledSettingInStorage = function (enabled) {\r\n        var storage = $injector.get('storage');\r\n        storage.set({\r\n            'telemetry_enabled': enabled,\r\n            'enableTelemetry': JSON.stringify(\r\n                {\r\n                    value: JSON.stringify(enabled),\r\n                    lastUpdate: Date.now(),\r\n                    manualOverride: false\r\n                }\r\n            ),\r\n        });\r\n    };\r\n\r\n    var service = {\r\n        // Get telemetry setting from storage\r\n        getEnabledSetting: function () {\r\n            return getEnabledSettingFromStorage();\r\n        },\r\n\r\n        // Set telemetry setting from storage\r\n        setEnabledSetting: function (enabled) {\r\n            // App Insights workaround: send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.SET_DISABLED,\r\n                    enabled: enabled\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            // Cache setting in local storage\r\n            setEnabledSettingInStorage(enabled);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                telemetryProviders[i].setEnabledSetting(enabled);\r\n            }\r\n        },\r\n\r\n        // Use to track custom application events and sends to application insights\r\n        trackEvent: async function (eventName, properties, measurements) {\r\n            if (angular.isUndefined(eventName) || !angular.isString(eventName)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_EVENT,\r\n                    eventName: eventName,\r\n                    properties: properties,\r\n                    measurements: measurements\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackEvent(eventName, propertiesToTrack, measurements);\r\n            }\r\n\r\n        },\r\n\r\n        // Use to track trace messages (ie. logging/diagnostics info) and sends to application insights\r\n        trackTrace: async function (message, properties) {\r\n            if (angular.isUndefined(message) || !angular.isString(message)) {\r\n                return;\r\n            }\r\n\r\n            // Send message to background instance to handle sending telemetry data\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.TELEMETRY.NAME,\r\n                    command: constants.TELEMETRY.COMMAND.TRACK_TRACE,\r\n                    message: message,\r\n                    properties: properties\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            properties = await addCustomProperties(properties);\r\n            for (var i = 0; i < telemetryProviders.length; ++i) {\r\n                var propertiesToTrack = angular.extend({}, properties);\r\n                telemetryProviders[i].trackTrace(message, propertiesToTrack);\r\n            }\r\n        }\r\n    };\r\n\r\n    // return the local instance when called\r\n    return service;\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './telemetry.service';\r\nimport constants from '../common/constants';\r\nimport {AWTEventProperties} from '@aria/webjs-sdk';\r\n\r\nexport default function ariaTelemetry($window) {\r\n    var addEventProperties = function (eventProperties, properties) {\r\n        if (Utilities.isUndefinedOrNull(eventProperties) || Utilities.isUndefinedOrNull(properties)) {\r\n            return;\r\n        }\r\n\r\n        // Obfuscate pii properties out and remove\r\n        if (!Utilities.isUndefinedOrNull(properties.pii)) {\r\n            for (var i = 0; i <= properties.pii.length - 1; ++i) {\r\n                eventProperties.setProperty(properties.pii[i].name, properties.pii[i].value, properties.pii[i].type);\r\n            }\r\n            delete properties.pii;\r\n        }\r\n\r\n        // Add rest of properties\r\n        for (var property in properties) {\r\n            if (properties.hasOwnProperty(property)) {\r\n                eventProperties.setProperty(property, properties[property]);\r\n            }\r\n        }\r\n    };\r\n\r\n    var enabledSetting = true;\r\n\r\n    this.setEnabledSetting = function (enabled) {\r\n        enabledSetting = enabled;\r\n    };\r\n\r\n    this.trackEvent = function (eventName, properties, measurements) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        // ARIA: Bug when dots are in event name; replace with underscores\r\n        eventName = eventName.replace(/\\./g, '_');\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + eventName);\r\n        addEventProperties(eventProperties, properties);\r\n        addEventProperties(eventProperties, measurements);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n\r\n    this.trackTrace = function (message, properties) {\r\n        if (!enabledSetting) {\r\n            return;\r\n        }\r\n\r\n        var eventProperties = new AWTEventProperties();\r\n        eventProperties.setName(constants.TELEMETRY.EVENT_PREFIX + message);\r\n        eventProperties.setProperty('severity', message);\r\n        addEventProperties(eventProperties, properties);\r\n\r\n        $window.ariaLogger.logEvent(eventProperties);\r\n    };\r\n}\r\n","import constants from './constants';\r\nimport Utilities from './utilities';\r\nimport 'angular';\r\n\r\nexport default httpInterceptor;\r\n\r\nfunction httpInterceptor($q, $log, $timeout, $injector) {\r\n    var retries = 0;\r\n    return {\r\n        request: function (config) {\r\n            if (Utilities.isUndefinedOrNull(config.timeout)) {\r\n                config.timeout = constants.TIMEOUT.DEFAULT_REQUEST;\r\n            }\r\n            return config;\r\n        },\r\n        responseError: function (response) {\r\n            if (response) {\r\n                switch (response.status) {\r\n                    case 0:\r\n                        $log.debug(`httpErrorResponseInterceptor - Request cancelled - ${response.config.url}`);\r\n                        break;\r\n                    case 401:\r\n                        $log.info(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                        break;\r\n                    case 400:\r\n                        // Error of invalid AADService. Log the info trace.\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50001\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Invalid AADSerivce - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            break;\r\n                        }\r\n\r\n                        // Interaction required. Retry the request with the same resource for 3 times.\r\n                        // https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-oauth-code\r\n                        if (\r\n                            Utilities.isNotUndefinedOrNull(response.data) &&\r\n                            Utilities.isNotUndefinedOrNull(response.data.error_codes) &&\r\n                            response.data.error_codes[0] === 50079\r\n                        ) {\r\n                            $log.info(`httpErrorResponseInterceptor -  Interaction required - ${response.status} - ${JSON.stringify(response.data)}`);\r\n                            if (retries < constants.ERROR_RETRIES.HTTP_REQUEST) {\r\n                                retries++;\r\n                                return $timeout(function () {\r\n                                    var $http = $injector.get('$http');\r\n                                    return $http(response.config);\r\n                                }, constants.TIMEOUT.USER_INFO_LOOKUP);\r\n                            }\r\n\r\n                            retries = 0;\r\n                        }\r\n                        break;\r\n                    case 404:\r\n                        // don't throw exceptions when graph returns something not found\r\n                        if (response.config.url.startsWith('https://graph.microsoft.com/v1.0/me/drive')) {\r\n                            return $q.resolve(response);\r\n                        }\r\n                    // eslint-disable-next-line no-fallthrough\r\n                    default:\r\n                        $log.error(`httpErrorResponseInterceptor - ${response.status} - ${response.config.url} - ${JSON.stringify(response.data)}`);\r\n                }\r\n            }\r\n\r\n            return $q.reject(response);\r\n        },\r\n    };\r\n}\r\n","import BrowserHandler from './browserHandler';\r\nimport Utilities from '../common/utilities';\r\nimport {mapStackTrace} from 'sourcemapped-stacktrace';\r\n\r\nexport default function logDecorator($delegate, telemetry) {\r\n    // App Insights custom property values have a max length of 8192\r\n    // Limit to 8000 to stay under the App Insights limit\r\n    function getTruncatedString(string) {\r\n        return string.length > 8000 ? string.substring(0, 8000) : string;\r\n    }\r\n\r\n    // Wrapper functions for telemetry in order to handle any errors from the telemetry service //\r\n\r\n    // Gets the enabled setting from storage\r\n    function getEnabledSetting() {\r\n        return telemetry.getEnabledSetting();\r\n    }\r\n\r\n    // Sets the enabled setting\r\n    function setEnabledSetting(enabled) {\r\n        try {\r\n            telemetry.setEnabledSetting(enabled);\r\n        } catch (error) {\r\n            $delegate.error(`setEnabledSetting error: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom event\r\n    function trackEvent(eventName, properties, measurements) {\r\n        try {\r\n            telemetry.trackEvent(eventName, properties, measurements);\r\n        } catch (error) {\r\n            $delegate.error(`trackEvent error with eventName ${eventName}: ${error}`);\r\n        }\r\n    }\r\n\r\n    // Tracks a custom trace (logging/diagnostics info)\r\n    function trackTrace(message, properties) {\r\n        try {\r\n            telemetry.trackTrace(message, properties);\r\n        } catch (error) {\r\n            // empty - if trackTrace fails, then error, info, warn, and debug statements can't be logged\r\n        }\r\n    }\r\n\r\n    function trimExtensionOrigin(url) {\r\n        try {\r\n            const extensionOrigin = (new URL(location.href)).origin + '/';\r\n            url = url.toString().replace(extensionOrigin, '');\r\n        }\r\n        // eslint-disable-next-line no-empty\r\n        catch {}\r\n\r\n        return url;\r\n    }\r\n\r\n    // Sends the log in a message where the background script will handle it and log\r\n    // the message to the console. Only useful in cases like the popup where an event\r\n    // may get logged before you can open the debugger window\r\n    function logToBackground(message, severity, stack, filename, source) {\r\n        if (Utilities.isBackgroundContext()) {\r\n            try {\r\n                const now = new Date();\r\n                var timeStamp = now.toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n                var log = `[${timeStamp}] (${trimExtensionOrigin(source)}) ${filename ? filename + ' ' : ''} ${message}`;\r\n                console[severity.toLowerCase()](log);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n            catch {}\r\n            return;\r\n        }\r\n\r\n        BrowserHandler.runtime.sendMessage({\r\n            activity: 'log',\r\n            severity: severity,\r\n            log: message,\r\n            filename: filename,\r\n            stack: stack\r\n        });\r\n    }\r\n\r\n    function messageString(message) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        }\r\n        return JSON.stringify(message);\r\n    }\r\n\r\n    // Returns a new logging function (error, info, etc.) that extends the original logging function\r\n    var prepareLog = function (originalFunction, severityLevel) {\r\n        return function () {\r\n            var args = [].slice.call(arguments);\r\n            var logParams = args[0];\r\n            var fullStack = undefined;\r\n\r\n            if (Utilities.isExtensionInDevelopmentMode()) {\r\n                fullStack = Error().stack;\r\n            }\r\n\r\n            var message = getTruncatedString(messageString(logParams.message ? logParams.message : logParams));\r\n\r\n            new Promise((resolve) => {\r\n                if (logParams.stack) {\r\n                    resolve(typeof logParams.stack === 'string' ? getTruncatedString(logParams.stack).split('\\n') : logParams.stack);\r\n                } else if (fullStack) {\r\n                    mapStackTrace(fullStack, mappedStack => {\r\n                        // remove this file from the top of the stack\r\n                        while (mappedStack[0].match('logDecorator.js')) {\r\n                            mappedStack.shift();\r\n                        }\r\n\r\n                        resolve(mappedStack);\r\n                    }, {/*cacheGlobally: true*/});\r\n                } else {\r\n                    resolve([]);\r\n                }\r\n            }).then((stack) => {\r\n                var filename = '';\r\n                var source = logParams.source || location;\r\n                if (logParams.filename) {\r\n                    filename = logParams.filename;\r\n                } else {\r\n                    for (var caller of stack) {\r\n                        var matched = caller.match(/\\b[\\w.]+\\b:\\d+/g);\r\n                        if (!matched) {\r\n                            continue;\r\n                        }\r\n                        filename = matched.pop();\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                logToBackground(message, severityLevel, stack, filename, source);\r\n                var timeStamp = new Date().toLocaleString(undefined, {month: 'numeric', day: 'numeric', hour: \"numeric\", minute: \"numeric\", second: \"numeric\"});\r\n\r\n                args[0] = `[${timeStamp}] ${filename ? filename + ' ' : ''}${severityLevel}: ${message}`;\r\n\r\n                // Only output logs in development mode\r\n                if (Utilities.isExtensionInDevelopmentMode()) {\r\n                    originalFunction.apply(null, args);\r\n                }\r\n\r\n                // Do not track debug trace messages to telemetry\r\n                if (severityLevel === 'DEBUG') {\r\n                    return;\r\n                }\r\n\r\n                trackTrace(severityLevel, {\r\n                    message: message,\r\n                    stack: severityLevel === 'ERROR' ? stack : '',\r\n                });\r\n            });\r\n        };\r\n    };\r\n\r\n    // Extend the original $delegate logging functions\r\n    $delegate.debug = prepareLog($delegate.debug, 'DEBUG');\r\n    $delegate.info = prepareLog($delegate.info, 'INFO');\r\n    $delegate.warn = prepareLog($delegate.warn, 'WARN');\r\n    $delegate.error = prepareLog($delegate.error, 'ERROR');\r\n\r\n    // Attach telemetry functions to the $delegate so that $log can replace the telemetry service throughout the application\r\n    $delegate.getEnabledSetting = getEnabledSetting;\r\n    $delegate.setEnabledSetting = setEnabledSetting;\r\n    $delegate.trackEvent = trackEvent;\r\n    $delegate.trackTrace = trackTrace;\r\n\r\n    return $delegate;\r\n}\r\n","import BrowserHandler from './browserHandler';\r\n\r\nwindow.dumpStorage = () => {\r\n    if (!window.chrome) {\r\n        return;\r\n    }\r\n\r\n    window.chrome.storage.local.get(null, result => {\r\n        console.log(`result '${JSON.stringify(result, '\\t')}'`);\r\n    });\r\n};\r\n\r\nexport default function ($q, $log) {\r\n    return {\r\n        get: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.get(keys, function (result) {\r\n                $log.debug(`storage: get '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        set: function (items) {\r\n            $log.debug(`storage: set items '${JSON.stringify(items)}'`);\r\n            BrowserHandler.storage.local.set(items);\r\n        },\r\n\r\n        remove: function (keys) {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.remove(keys, function (result) {\r\n                $log.debug(`storage: remove '${JSON.stringify(keys)}', result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n\r\n        clear: function () {\r\n            var deferred = $q.defer();\r\n\r\n            BrowserHandler.storage.local.clear(function (result) {\r\n                $log.debug(`storage: clear result '${JSON.stringify(result)}'`);\r\n                deferred.resolve(result);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport './browserHandler'; /* eslint-disable-line sort-imports */\r\nimport 'angularjs-localizationservice.1.0.1/localize';\r\nimport httpInterceptor from './httpInterceptor';\r\nimport logDecorator from './logDecorator';\r\nimport notification from './notification.service';\r\nimport storage from './storage.service';\r\n\r\nvar commonModule = angular\r\n    .module('app.common', [])\r\n    .config(['$httpProvider', '$provide', appCommon])\r\n    .factory('storage', ['$q', '$log', storage])\r\n    .factory('notification', ['$log', 'localize', notification])\r\n    .factory('httpInterceptor', ['$q', '$log', '$timeout', '$injector', httpInterceptor]);\r\n\r\nexport default commonModule.name;\r\n\r\nfunction appCommon($httpProvider, $provide) {\r\n    $provide.decorator('$log', ['$delegate', 'telemetry', logDecorator]);\r\n\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('httpInterceptor');\r\n}\r\n","import Utilities from './utilities';\r\nimport BrowserHandler from './browserHandler';\r\nimport constants from './constants';\r\n\r\nexport default function ($log, localize) {\r\n    return {\r\n        show: function (notification) {\r\n            // Send message to background instance to handle show notification.\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({\r\n                    activity: constants.ACTIVITY.NOTIFICATION.NAME,\r\n                    notification: notification,\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            var buttons;\r\n            if (notification.buttons !== undefined && notification.buttons !== null) {\r\n                buttons = [];\r\n                for (var index = 0; index < notification.buttons.length; ++index) {\r\n                    buttons[index] = {};\r\n                    buttons[index].title = localize.getLocalizedString(notification.buttons[index].title);\r\n                    buttons[index].iconUrl = notification.buttons[index].iconUrl;\r\n                }\r\n            }\r\n\r\n            BrowserHandler.notifications.clear(notification.id, function (wasCleared) {\r\n                BrowserHandler.notifications.create(\r\n                    notification.id,\r\n                    {\r\n                        iconUrl: '../assets/icon.png',\r\n                        imageUrl: notification.imageUrl,\r\n                        message: localize.getLocalizedString(notification.message),\r\n                        priority: notification.priority,\r\n                        progress: notification.progress,\r\n                        title: '',\r\n                        type: notification.type,\r\n                        buttons: buttons,\r\n                    },\r\n                    function (notificationId) {\r\n                        if (notificationId === undefined || notificationId === null) {\r\n                            $log.error('CreateNotificationError');\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport protectedResourceInterceptor from './protectedResourceInterceptor';\r\nimport userService from './user.service';\r\nimport msidUserService from './msidUser.service';\r\nimport msaUserService from './msaUser.service';\r\nimport o365UserService from './o365User.service';\r\nimport '../common';\r\n\r\nexport default angular\r\n    .module('app.user', [])\r\n    .config(['$httpProvider', '$provide', appUser])\r\n    .factory('protectedResourceInterceptor', ['$q', '$log', '$injector', protectedResourceInterceptor])\r\n    .service('msaUserService', ['$log', '$injector', msaUserService])\r\n    .service('o365UserService', ['$log', '$injector', 'notification', o365UserService])\r\n    .service('msidUserService', ['$log', '$injector', 'notification', msidUserService])\r\n    .factory('userService', ['$q', '$log', '$injector', 'storage', 'notification', 'msaUserService', 'o365UserService', 'msidUserService', userService])\r\n    .name;\r\n\r\nfunction appUser($httpProvider, $provide) {\r\n    // Register http interceptors\r\n    $httpProvider.interceptors.push('protectedResourceInterceptor');\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport './user.service';\r\nimport constants from '../common/constants';\r\n\r\n\r\nexport default function protectedResourceInterceptor($q, $log, $injector) {\r\n    var userService = $injector.get('userService');\r\n\r\n    return {\r\n        request: function (config) {\r\n            var deferred = $q.defer();\r\n\r\n            if (Utilities.isUndefinedOrNull(config) || Utilities.isUndefinedOrNull(config.headers)) {\r\n                $log.error('protectedResourceInterceptor.request: http request config is null or undefined');\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var userType = config.headers['X-UserType'];\r\n\r\n            // Only apply http config changes to requests that have custom header\r\n            if (Utilities.isUndefinedOrNull(userType)) {\r\n                deferred.resolve(config);\r\n                return deferred.promise;\r\n            }\r\n\r\n            var resource = config.headers['X-Resource'];\r\n\r\n            // Remove the custom header; no longer needed\r\n            delete config.headers['X-Resource'];\r\n            delete config.headers['X-UserType'];\r\n            userService.acquireToken(userType, config.url, resource).then(token => {\r\n                // Validate userType within acquireToken method\r\n                if (!Utilities.isUndefinedOrNull(token)) {\r\n                    config.headers.Authorization = 'Bearer ' + token;\r\n                }\r\n                else {\r\n                    $log.warn(`failed to get auth token for type:${userType} url: ${config.url}, resource ${resource}`);\r\n                }\r\n                deferred.resolve(config);\r\n            });\r\n\r\n            return deferred.promise;\r\n        },\r\n        responseError: function (response) {\r\n            if (response && response.status === 401) {\r\n                if (Utilities.isNotUndefinedOrNull(response.config) &&\r\n                    (response.config.url === constants.O365CONFIG.SHAREPOINT_URL || response.config.url === constants.O365CONFIG.PHOTO_URL)) {\r\n                    // Don't clear the token if the request is made to get the sharepoint site url or the user photo.\r\n                    return $q.reject(response);\r\n                }\r\n\r\n                userService.clearToken();\r\n            }\r\n\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msaUserService($log, $injector) {\r\n    this.type = constants.USER_TYPE.MSA;\r\n    this.type = constants.USER_SERVICE_TYPE.MSA;\r\n    this.userType = constants.USER_TYPE.MSA;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.MSACONFIG.URL,\r\n            'params': {\r\n                'client_id': constants.MSACONFIG.CLIENT_ID,\r\n                'client_secret': constants.MSACONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.MSACONFIG.REDIRECT_URI\r\n            },\r\n            'resource': constants.ONEDRIVE.INSTANCE,\r\n            'loginUrl': constants.MSACONFIG.INSTANCE + '?response_type=code&client_id=' + constants.MSACONFIG.CLIENT_ID + '&redirect_uri=' + constants.MSACONFIG.REDIRECT_URI + '&scope=' + constants.MSACONFIG.SCOPE,\r\n            'logoutUrl': constants.MSACONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.MSACONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.RECENTS.ONEDRIVE_ENDPOINT\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (data) {\r\n        return new Promise((resolve, reject) => {\r\n            var userInfo = {\r\n                oneDriveUrl: constants.LINKS.APP.ONEDRIVE\r\n            };\r\n\r\n            var $http = $injector.get('$http');\r\n            var request = {\r\n                method: 'GET',\r\n                url: constants.MSACONFIG.USERINFO_URL,\r\n                headers: {\r\n                    'X-UserType': constants.USER_SERVICE_TYPE.MSA\r\n                }\r\n            };\r\n\r\n            $http(request).then(\r\n                function (response) {\r\n                    var data = response.data;\r\n                    userInfo.email = data.emails.account;\r\n                    userInfo.cid = data.id;\r\n                    resolve(userInfo);\r\n                },\r\n                function () {\r\n                    reject(`msaUser.Service.lookupUserInfo http request failed`);\r\n                });\r\n        });\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        return constants.MSACONFIG.SCOPE;\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function o365UserService($log, $injector, notification) {\r\n    this.type = constants.USER_SERVICE_TYPE.O365;\r\n    this.userType = constants.USER_TYPE.O365;\r\n    this.getConfig = function () {\r\n        var config = {\r\n            'tokenUrl': constants.O365CONFIG.INSTANCE + 'token',\r\n            'params': {\r\n                'client_id': constants.O365CONFIG.CLIENT_ID,\r\n                'client_secret': constants.O365CONFIG.CLIENT_SECRET,\r\n                'redirect_uri': constants.O365CONFIG.REDIRECT_URI,\r\n                'resource': constants.O365CONFIG.GRAPH_RESOURCE\r\n            },\r\n            'resource': constants.O365CONFIG.GRAPH_RESOURCE,\r\n            'loginUrl': constants.O365CONFIG.INSTANCE + 'authorize?response_type=code&client_id=' + constants.O365CONFIG.CLIENT_ID + '&redirect_uri=' + constants.O365CONFIG.REDIRECT_URI + '&response_mode=query',\r\n            'logoutUrl': constants.O365CONFIG.LOGOUT_URI,\r\n            'photoUrl': constants.O365CONFIG.PHOTO_URL,\r\n            'documentsUrl': constants.O365CONFIG.MRU_URL + constants.RECENTS.FILTER\r\n        };\r\n\r\n        return config;\r\n    };\r\n\r\n    this.getResourceForEndpoint = function (endpoint) {\r\n        var resource = this.getConfig().resource;\r\n        if (Utilities.isUndefinedOrNull(endpoint)) {\r\n            return resource;\r\n        }\r\n\r\n        // Return resource from config data.\r\n        for (var configEndpoint in constants.O365CONFIG.ENDPOINTS) {\r\n            if (constants.O365CONFIG.ENDPOINTS.hasOwnProperty(configEndpoint) && endpoint.indexOf(configEndpoint) > -1) {\r\n                resource = constants.O365CONFIG.ENDPOINTS[configEndpoint];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return resource;\r\n    };\r\n\r\n    this.lookupUserInfo = async function (tokenData) {\r\n        var userInfo = getUserProfile(tokenData.id_token);\r\n        const oneDriveUrl = await getOneDriveUrl();\r\n        userInfo.oneDriveUrl = oneDriveUrl;\r\n\r\n        const sharePointUrl = await getSharePointUrl();\r\n        userInfo.sharePointUrl = sharePointUrl || constants.LINKS.APP.SHAREPOINT_DEFAULT;\r\n        return userInfo;\r\n    };\r\n\r\n    async function getOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            clearToken();\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error('0365User.getOneDriveUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getSharePointUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.SHAREPOINT_URL,\r\n            headers: {\r\n                'X-UserType': constants.USER_SERVICE_TYPE.O365\r\n            }\r\n        };\r\n\r\n        var userService = $injector.get('userService');\r\n        try {\r\n            var data = await userService.httpRequest(request);\r\n            if (data.webUrl) {\r\n                return data.webUrl;\r\n            }\r\n            return Promise.reject('No SharePoint info for user');\r\n        }\r\n        catch (reason) {\r\n            $log.error('0365User.getSharePointUrl failed: %s', reason);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function clearToken() {\r\n        var userService = $injector.get('userService');\r\n        userService.clearToken();\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function getUserProfile(idToken) {\r\n        var user = {};\r\n        var parsedJson = extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === constants.O365CONFIG.CLIENT_ID.toLowerCase()) {\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.email = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.email = parsedJson.email;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('puid')) {\r\n                    user.puid = parsedJson.puid;\r\n                }\r\n\r\n                if (parsedJson.hasOwnProperty('tid')) {\r\n                    user.tid = parsedJson.tid;\r\n                }\r\n            } else {\r\n                $log.error('IdToken has invalid aud field');\r\n            }\r\n        }\r\n\r\n        return user;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function extractIdToken(encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = base64DecodeStringUrlSafe(base64IdToken);\r\n            if (!base64Decoded) {\r\n                this._logstatus('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            $log.error('The returned id_token could not be decoded: ' + err.stack);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Method from ADAL to extract user profile from idtoken\r\n    // Reference: https://github.com/AzureAD/azure-activedirectory-library-for-js/blob/master/lib/adal.js\r\n    function decodeJwt(jwtToken) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3],\r\n        };\r\n\r\n        return crackedToken;\r\n    }\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function msidUserService($log, $injector, notification) {\r\n    const type = constants.USER_SERVICE_TYPE.MSID;\r\n    var userService = undefined;\r\n    // previous app registration also included (are they still needed?)\r\n    // Graph:\r\n    // offline_access, Directory.AccessAsUser.All, User.Read.All\r\n    // SharePoint:\r\n    // MyFiles.Read, MyFiles.Write\r\n    const scopes = 'email openid profile user.read';\r\n    const userInfoUrl = 'https://graph.microsoft.com/v1.0/me/';\r\n    const aadV2Url = new URL('https://login.microsoftonline.com/common/oauth2/').toString();\r\n    const msaOAuthUrl = new URL('https://login.live.com/oauth20_authorize.srf').toString();\r\n    const redirectUri = new URL('nativeclient', aadV2Url).toString();\r\n    const logoutUrl = new URL('v2.0/logoutsession', aadV2Url).toString();\r\n    const authorizeUrl = new URL('v2.0/authorize', aadV2Url).toString();\r\n    const aadClientId = 'e28ff72c-58a5-49ba-8125-42ec264d7cd0'; // newest clientId\r\n    const loginUrl = (() => {\r\n        var loginUrl = new URL(authorizeUrl);\r\n        loginUrl.search = createParams({prompt: 'select_account'});\r\n        return loginUrl.toString();\r\n    })();\r\n\r\n    function getUserService() {\r\n        if (!userService) {\r\n            userService = $injector.get('userService');\r\n        }\r\n\r\n        return userService;\r\n    }\r\n\r\n    function createParams(additionalParams) {\r\n        const defaultParams = {\r\n            'client_id': aadClientId,\r\n            'response_type': 'id_token token',\r\n            'redirect_uri': redirectUri,\r\n            'scope': scopes,\r\n            'response_mode': 'fragment',\r\n        };\r\n        const params = new URLSearchParams(Object.assign({}, defaultParams, additionalParams));\r\n        return params.toString();\r\n    }\r\n\r\n    // Could we use chrome.identity.launchWebAuthFlow()\r\n    // with redirect url https://ndjpnladcallmjemlbaebfadecfhkepb.chromiumapp.org/response?\r\n    // see https://developer.chrome.com/extensions/identity#method-launchWebAuthFlow\r\n    function getConfig() {\r\n        return {\r\n            'loginUrl': loginUrl,\r\n            'logoutUrl': logoutUrl,\r\n            'photoUrl': 'https://graph.microsoft.com/beta/me/photo/$value',\r\n            'userInfoUrl': userInfoUrl,\r\n            'documentsUrl': 'https://graph.microsoft.com/v1.0/me/drive/recent'\r\n        };\r\n    }\r\n\r\n    async function handleLogin() {\r\n        const msaParams = {\r\n            'url': msaOAuthUrl,\r\n            'aadredir': 1,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        const aadParams = {\r\n            'url': authorizeUrl,\r\n            'prompt': 'select_account'\r\n        };\r\n\r\n        // TODO: Not sure if aadv2 requires dual stack approach where we try one endpoint and then another but if\r\n        // so we then need to determine if we should start with AAD or MSA but default to MSA since it can\r\n        // handle sign up in case they want to create a new account for overview on how to handle dual stack\r\n        // select_account see https://identitydocs.azurewebsites.net/static/overview/user_discovery.html\r\n        const authEndpointParams = [];\r\n        // authEndpointParams.push(msaParams); // not adding until app configuration is updated to support msa\r\n        authEndpointParams.push(aadParams);\r\n\r\n        var accountId = undefined;\r\n        for (var endpointParams of authEndpointParams) {\r\n            var loginUrl = new URL(endpointParams.url);\r\n            delete endpointParams.url;\r\n\r\n            if (accountId) {\r\n                endpointParams.set('login_hint', accountId);\r\n            }\r\n            loginUrl.search = createParams(endpointParams);\r\n            var response = await getUserService().navigateToAuthEndpoint(loginUrl.toString(), type);\r\n            if (!response.error || response.error === 'aad_auth') {\r\n                return;\r\n            }\r\n\r\n            if (response.username) {\r\n                accountId = response.username;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function lookupUserInfo(token) {\r\n        const infoFuncs = [\r\n            fetchUserInfo(),\r\n            fetchOneDriveUrl(),\r\n            fetchOneDriveQuota()\r\n        ];\r\n        var results = await Promise.all(infoFuncs);\r\n\r\n        return results.reduce((previous, current) => {\r\n            return Object.assign(previous, current);\r\n        });\r\n    }\r\n\r\n    function deleteMetaDataTags(object) {\r\n        for (const prop in object) {\r\n            if (object.hasOwnProperty(prop)) {\r\n                if (prop.match(/^@odata/i)) {\r\n                    delete object[prop];\r\n                }\r\n            }\r\n        }\r\n        return object;\r\n    }\r\n\r\n    async function fetchUserInfo() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: userInfoUrl,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        var userInfo = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            userInfo = deleteMetaDataTags(response);\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchUserInfo failed: ${reason}`);\r\n        }\r\n\r\n        return userInfo;\r\n    }\r\n\r\n    async function fetchOneDriveUrl() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: constants.O365CONFIG.ONEDRIVE_URL,\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var data = await getUserService().httpRequest(request);\r\n            if (data.webUrl) {\r\n                return {'oneDriveUrl': data.webUrl};\r\n            }\r\n\r\n            // There is no service info for OD4B\r\n            return Promise.reject('o365UserService.DiscoverServiceEndpoint - Invalid resource');\r\n        }\r\n        catch (reason) {\r\n            notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n            $log.error(`msidUser.fetchOneDriveUrl failed: ${JSON.stringify(reason)}`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // accounts.microsoft.com makes a call to\r\n    // https://account.microsoft.com/services/api/subscriptions?X-Requested-With=XMLHttpRequest&excludeWindowsStoreInstallOptions=false&_=1571422283464\r\n    // which seems to get consumer subscriptions, maybe another option?\r\n    async function fetchSubscriptionInfo(userType) {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/licenseDetails',\r\n            headers: {\r\n                'X-UserType': userType\r\n            }\r\n        };\r\n\r\n        var licenses = {};\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n\r\n            for (const license of response.value.values()) {\r\n                const sku = license.skuPartNumber.toLowerCase();\r\n                var plans = license.servicePlans.filter(plan => plan.provisioningStatus === 'Success').map(plan => plan.servicePlanName.toLowerCase());\r\n                licenses[sku] = plans;\r\n            }\r\n            return {'licenses': licenses};\r\n        }\r\n        catch (reason) {\r\n            $log.error(`msidUser.fetchSubscriptionInfo failed: ${JSON.stringify(reason)}`);\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function fetchOneDriveQuota() {\r\n        var request = {\r\n            method: 'GET',\r\n            url: 'https://graph.microsoft.com/v1.0/me/drive',\r\n            headers: {\r\n                'X-UserType': type\r\n            }\r\n        };\r\n\r\n        try {\r\n            var response = await getUserService().httpRequest(request);\r\n            var quota = parseInt(response.quota.total) / (1024 * 1024 * 1024);\r\n            quota = Math.round(quota * 100) / 100;\r\n            $log.info(`OneDrive quota: ${JSON.stringify(response.quota, null, '\\t')} capacity: ${quota}GB`);\r\n            return {'driveQuota': response.quota.total, 'driveQuotaString': `${quota}GB`};\r\n        }\r\n        catch (reason) {\r\n            return Promise.reject(`msidUser.fetchOneDriveQuota failed: ${reason}`);\r\n        }\r\n    }\r\n\r\n    function getResourceForEndpoint(endpoint) {\r\n        if (!endpoint) {\r\n            return scopes;\r\n        }\r\n\r\n        const endpointResources = {\r\n            'https://graph.microsoft.com': {\r\n                '/v1.0/me/': scopes,\r\n                '/v1.0/me/drive/recent': 'Files.ReadWrite.All' //'https://graph.microsoft.com/Files.ReadWrite.All'\r\n            },\r\n            'https://nleditor.osi.office.net':\r\n            {\r\n                '/NlEditor/': 'https://nleditor.osi.office.net/NlEditor/instrumentation.write'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const url = new URL(endpoint);\r\n            if (!endpointResources.hasOwnProperty(url.origin)) {\r\n                return scopes;\r\n            }\r\n            const paths = endpointResources[url.origin];\r\n            const urlPath = url.pathname;\r\n\r\n            var match = Object.keys(paths).reduce((previous, current) => {\r\n                if (urlPath.startsWith(current) && current.length > previous.length) {\r\n                    return current;\r\n                } else {\r\n                    return previous;\r\n                }\r\n            });\r\n\r\n            return paths[match];\r\n        }\r\n        catch (reason) {\r\n            $log.warning(`msidUser.Service threw an exception: ${reason}`);\r\n            return scopes;\r\n        }\r\n    }\r\n\r\n    async function requestAccessToken(resource, userInfo) {\r\n        var additionalParams = {scope: resource, response_type: 'token'};\r\n        if (userInfo && userInfo.email) {\r\n            // additionalParams['domain_hint'] = organizations;\r\n            additionalParams['login_hint'] = userInfo.email;\r\n        }\r\n        var params = createParams(additionalParams);\r\n        var url = new URL(authorizeUrl);\r\n\r\n        url.search = params.toString();\r\n        var result = await getUserService().navigateToAuthEndpoint(url.href, type, true);\r\n\r\n        if (!result || !result.access_token) {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.info(`failed to get token from iframe for resource ${resource}`);\r\n            return Promise.reject(`unable to retrieve result from ${url.href}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        getConfig: getConfig,\r\n        getResourceForEndpoint: getResourceForEndpoint,\r\n        // handleLogin: handleLogin,\r\n        lookupUserInfo: lookupUserInfo,\r\n        requestAccessToken: requestAccessToken\r\n    };\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\nimport constants from '../common/constants';\r\nimport Utilities from '../common/utilities';\r\n\r\n// ppe = 'https://nleditor.osi.officeppe.net/NLEditor/BrowserExtension/V1'\r\nconst FlightingUrl = 'https://nleditor.osi.office.net/NLEditor/api/V1/BrowserExtension';\r\n\r\nexport default function userService($q, $log, $injector, storage, notification, msaUserService, o365UserService, msidUserService) {\r\n    function authMessageListener(message, sender, response) {\r\n        switch (message.activity) {\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n                logout().then(() => {\r\n                    response();\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n                login(message.type).then(result => {\r\n                    response(result);\r\n                });\r\n\r\n                return true;\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n                {\r\n                    // This handler can probably go away if it's determined that we don't\r\n                    // need to call authenticate for any responses that aren't our own\r\n                    if (sender.id === BrowserHandler.runtime.id && message.close) {\r\n                        if (sender.tab && sender.tab.id) {\r\n                            BrowserHandler.tabs.remove(sender.tab.id);\r\n                        }\r\n                        delete message.close;\r\n                    }\r\n\r\n                    authorize(unpackStateParam(message)).then(() => {\r\n                        response();\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                {\r\n                    navigateToAuthEndpoint(message.data.url, message.data.type, message.data.inIFrame).then(token => {\r\n                        response(token);\r\n                    });\r\n                    return true;\r\n                }\r\n            default:\r\n                {\r\n                    return;\r\n                }\r\n        }\r\n    }\r\n\r\n    // This module can be loaded by pages other than the background page so only\r\n    // handle these messages on the background page\r\n    if (Utilities.isBackgroundContext()) {\r\n        BrowserHandler.runtime.onMessage.addListener(authMessageListener);\r\n    }\r\n\r\n    async function acquireToken(userOrServiceType, endpoint, resource) {\r\n        var userService = {};\r\n        userService = await getServiceProvider(userOrServiceType);\r\n\r\n        if (!userService) {\r\n            $log.error('userService.acquireToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        if (!resource && userService.getResourceForEndpoint) {\r\n            resource = userService.getResourceForEndpoint(endpoint);\r\n        }\r\n\r\n        var token = {};\r\n        try {\r\n            token = await getAccessToken(endpoint, resource);\r\n\r\n            // if found cached token for resource/scope and not expired, return it\r\n            if (token && token.access_token && !isTokenExpired(token.expires_on)) {\r\n                $log.debug(`Using cached token with resource:'${resource}'${endpoint ? ' for ' + endpoint : ''} `);\r\n                return token.access_token;\r\n            }\r\n\r\n            token = await requestAccessToken(userService, resource);\r\n\r\n            if (token) {\r\n                saveTokens(userService, endpoint, token);\r\n            } else {\r\n                return Promise.reject('No tokens available');\r\n            }\r\n        }\r\n        catch (reason) {\r\n            $log.error(`userService.acquireToken - failed. reason: ${reason}, userType: ${userOrServiceType}, endpoint: ${endpoint}, resource: ${resource}`);\r\n        }\r\n\r\n        if (!token || !token.access_token || !token.expires_on || isTokenExpired(token.expires_on)) {\r\n            return null;\r\n        }\r\n\r\n        return token.access_token;\r\n    }\r\n\r\n    function getFunctionName() {\r\n        var stack = Error().stack;\r\n        if (stack.length < 3) {\r\n            return;\r\n        }\r\n        var caller = stack.split('\\n')[2];\r\n        var match = caller.match(/^\\s*at\\s*(\\w*)/);\r\n        if (!match || match.length < 2) {\r\n            return;\r\n        }\r\n\r\n        return match[1];\r\n    }\r\n\r\n    async function httpRequest(request) {\r\n        if (!request) {\r\n            return Promise.reject('Invalid Request');\r\n        }\r\n\r\n        var stack = new Error().stack;\r\n        var result = new Promise((resolve, reject) => {\r\n            const $http = $injector.get('$http');\r\n\r\n            $http(request).then(\r\n                (response) => {\r\n                    resolve(response.data);\r\n                },\r\n                (response) => {\r\n                    reject(`httpRequest failed for url: ${request.url} reason: ${response.statusText} stack:\\n ${stack}`);\r\n                });\r\n\r\n        });\r\n\r\n        return (await result);\r\n    }\r\n\r\n    async function acquireTokenFromCode(userService, code) {\r\n        if (!userService) {\r\n            $log.error('userService.acquireTokenFromCode - Invalid type');\r\n            Promise.reject('Invalid userService type');\r\n            return;\r\n        }\r\n\r\n        var config = userService.getConfig();\r\n        config.params.grant_type = constants.OAUTH.AUTH_CODE;\r\n        config.params.code = code;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        const accessToken = await httpRequest(request);\r\n        await saveTokens(userService, userService.getConfig().resource, accessToken);\r\n        // is all the above needed or would protectedResourceInterceptor call into acquireToken\r\n        // if the userType was just added to the header here?\r\n        await lookupUserInfo(userService, accessToken);\r\n        return accessToken.access_token;\r\n    }\r\n\r\n    async function getRefreshToken() {\r\n        return getIdentityProperty('refresh_token');\r\n    }\r\n\r\n    async function refreshAccessToken(userService, resource, refresh_token) {\r\n        if (!userService) {\r\n            $log.error('userService.refreshAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        var token = {};\r\n        var config = userService.getConfig();\r\n\r\n        config.params.grant_type = constants.OAUTH.REFRESH_TOKEN;\r\n        config.params.resource = resource;\r\n        config.params.refresh_token = refresh_token;\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: config.tokenUrl,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n            },\r\n            data: (new URLSearchParams(config.params)).toString()\r\n        };\r\n\r\n        token = await httpRequest(request);\r\n        return token;\r\n    }\r\n\r\n    async function requestAccessToken(userService, resource) {\r\n        if (!userService) {\r\n            $log.error('userService.requestAccessToken - Invalid type');\r\n            return Promise.reject('Invalid userType');\r\n        }\r\n\r\n        // if there's a refresh token available (code grant only) attempt to renew it\r\n        // if there is no refresh token then it's an implicit flow which just attempts\r\n        // to get a new access token\r\n        const refreshToken = await getRefreshToken();\r\n        if (refreshToken) {\r\n            return refreshAccessToken(userService, resource, refreshToken);\r\n        }\r\n\r\n        const userType = await getUserType();\r\n        var userInfo = await getUserInfo(userType);\r\n        if (userService.requestAccessToken) {\r\n            var result = await userService.requestAccessToken(resource, userInfo);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    async function authorize(request) {\r\n        const serviceType = request.type;\r\n        var userType = undefined;\r\n        var userService = await getServiceProvider(serviceType);\r\n        var result = false;\r\n        if (!userService) {\r\n            $log.error('userService.authenticate - Invalid type');\r\n            return;\r\n        }\r\n\r\n        if (request.code) {\r\n            userType = serviceType.userType;\r\n            try {\r\n                var token = await acquireTokenFromCode(userService, request.code);\r\n                result = !!token;\r\n\r\n            }\r\n            catch (reason) {\r\n                if (userType === constants.USER_TYPE.O365) {\r\n                    notification.show(constants.NOTIFICATION.INVALIDSUBSCRIPTION);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            if (request.id_token) {\r\n                userType = await setUserType(request.id_token);\r\n            }\r\n            if (request.access_token) {\r\n                await saveTokens(userService, userService.getConfig().userInfoUrl, request);\r\n                if (!userType) {\r\n                    userType = await getUserType();\r\n                }\r\n                await lookupUserInfo(userService, request.id_token);\r\n            }\r\n            result = userType !== constants.USER_TYPE.NONE;\r\n        }\r\n        if (request.error) {\r\n            if (request.error === 'interaction_required') {\r\n                login(await getUserType(), false);\r\n            } else {\r\n                $log.error(`userService.authenticate - authentication returned error: ${request.error} description: ${request.error_description} request: ${JSON.stringify(request)}`);\r\n            }\r\n        }\r\n\r\n        $log.trackEvent('Authorization', {'userType': userType, 'serviceType': serviceType, 'succeeded': result});\r\n        return result ? Promise.resolve() : Promise.reject();\r\n    }\r\n\r\n    async function clearToken() {\r\n        return Promise.all([\r\n            storage.remove('accessToken'),\r\n            storage.remove('refreshToken'),\r\n            storage.remove('userInfo'),\r\n            storage.remove('userType'),\r\n            storage.remove('identity'),\r\n        ]);\r\n    }\r\n\r\n    async function getLoginStatus() {\r\n        var result = await storage.get('userType');\r\n\r\n        if (!result.userType) {\r\n            return false;\r\n        }\r\n        try {\r\n            var accessToken = await acquireToken(result.userType);\r\n            return !!accessToken;\r\n        }\r\n        catch (reason) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isLoggedIn() {\r\n        var storageData = await storage.get(['userType', 'identity']);\r\n        return (storageData.identity && storageData.userType && storageData.userType !== constants.USER_TYPE.NONE /*&& result.accessToken*/);\r\n    }\r\n\r\n    async function getUserType() {\r\n        // Does this still need to be here? every telemetry call\r\n        // calls this which causes us to log back in again\r\n        /*\r\n        var status = await getLoginStatus();\r\n        if (!status) {\r\n            deferred.resolve(constants.USER_TYPE.NONE);\r\n            return deferred.promise;\r\n        }\r\n        */\r\n\r\n        var result = await storage.get('userType');\r\n        return result.userType || constants.USER_TYPE.NONE;\r\n    }\r\n\r\n    async function setUserType(typeOrToken) {\r\n        var userType = '';\r\n        if (Object.values(constants.USER_TYPE).includes(typeOrToken)) {\r\n            userType = typeOrToken;\r\n        } else {\r\n            var tenantInfo = resolveTypeAndTenant(typeOrToken);\r\n            userType = tenantInfo.type;\r\n            delete tenantInfo.type;\r\n\r\n            var tenantEntry = {\r\n                [userType]: tenantInfo\r\n            };\r\n\r\n            var identity = await getStoredIdentity();\r\n\r\n            mergeProperties(identity, tenantEntry);\r\n            await storage.set({identity});\r\n        }\r\n\r\n        if (userType !== constants.USER_TYPE.NONE) {\r\n            await storage.set({'userType': userType});\r\n        }\r\n\r\n        return userType;\r\n    }\r\n\r\n    function unpackStateParam(message) {\r\n        // separate the type from the state param\r\n        if (message.state) {\r\n            message.state = decodeURIComponent(message.state);\r\n        }\r\n        var [state, type, appid] = message.state.split('|');\r\n        if (type) {\r\n            message.type = type;\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    async function navigateToAuthEndpoint(url, type, inIFrame) {\r\n        return new Promise(async (resolve, reject) => {\r\n            if (!Utilities.isBackgroundContext()) {\r\n                BrowserHandler.runtime.sendMessage({activity: 'requestToken', data: {url: url, type: type, inIFrame: inIFrame}}, token => {\r\n                    resolve(token);\r\n                });\r\n            } else {\r\n                url = new URL(url);\r\n                const params = url.searchParams;\r\n                for (const param of ['state', 'nonce']) {\r\n                    var value = params.get(param);\r\n                    if (!value) {\r\n                        value = createGuid();\r\n                    }\r\n                    // append the type to ensure the same is used to handle the response\r\n                    if (param === 'state' && type) {\r\n                        value += '|' + type + '|' + constants.APPINFO_NAME;\r\n                    }\r\n\r\n                    params.set(param, value);\r\n                }\r\n\r\n                var frameId = undefined;\r\n                var timeout = undefined;\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function cleanup() {\r\n                    BrowserHandler.runtime.onMessage.removeListener(listener);\r\n                    if (frameId) {\r\n                        var iframe = document.getElementById(frameId);\r\n                        if (iframe) {\r\n                            iframe.parentNode.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // remember the state parameter to unsure the response has the same state\r\n                const state = params.get('state');\r\n                const scope = params.get('scope');\r\n\r\n                $log.info(`loading auth url:${url.href} ${inIFrame ? 'in iframe' : ''}`);\r\n                var info = await getUserInfo();\r\n                if (info && info.email && !params.has('login_hint')) {\r\n                    params.set('login_hint', info.email);\r\n                }\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function listener(message, sender, response) {\r\n                    if (sender.id !== BrowserHandler.runtime.id) {\r\n                        $log.debug(`auth listener rejected invalid id: ${sender.id}`);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.activity === constants.ACTIVITY.AUTHORIZATION.NAME) {\r\n                        var result = unpackStateParam(message);\r\n\r\n                        if (!result) {\r\n                            $log.error(`userService.listener - auth url:${url} returned null response `);\r\n                            reject(result);\r\n                        }\r\n\r\n                        if (result.state !== state) {\r\n                            $log.warn(`userService.listener - auth url:${url} mismatched state:${result.state}`);\r\n                        }\r\n\r\n                        $log[result.error ? 'error' : 'debug'](`userService.listener - auth response:${JSON.stringify(result)} received from url:${url}`);\r\n\r\n                        if (timeout) {\r\n                            clearTimeout(timeout);\r\n                        }\r\n\r\n                        delete result.activity;\r\n                        cleanup();\r\n                        resolve(result);\r\n                    }\r\n                }\r\n                BrowserHandler.runtime.onMessage.addListener(listener);\r\n\r\n                if (!inIFrame) {\r\n                    BrowserHandler.tabs.create({url: url.toString()});\r\n                } else {\r\n                    params.set('prompt', 'none');\r\n                    frameId = 'authFrame!' + scope;\r\n\r\n                    const iframeAuthDelay = 60000;\r\n                    timeout = setTimeout(() => {\r\n                        $log.warn(`userService.authInFrame timed out waiting for ${url.toString()} after ${iframeAuthDelay} ms`);\r\n                        cleanup();\r\n                        reject('Timed out waiting for response from iFrame');\r\n                    }, iframeAuthDelay);\r\n\r\n                    var iframe = document.getElementById(frameId);\r\n                    if (!iframe) {\r\n                        iframe = document.createElement('iframe');\r\n                        iframe.setAttribute('id', frameId);\r\n                        iframe.style.visibility = \"hidden\";\r\n                        iframe.style.position = \"absolute\";\r\n                        iframe.style.width = iframe.style.height = \"0\";\r\n                        iframe.style.border = \"0\";\r\n                        iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n\r\n                        document.body.appendChild(iframe);\r\n                        iframe.src = url.toString();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async function login(userType, clear = true) {\r\n        if (clear === true) {\r\n            clearToken();\r\n        }\r\n\r\n        var userService = await getServiceProvider(userType);\r\n        if (userService.handleLogin) {\r\n            return userService.handleLogin();\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        var loginUrl = config['loginUrl'];\r\n        if (!loginUrl) {\r\n            $log.error('userService.login - Invalid type');\r\n            return;\r\n        }\r\n\r\n        return navigateToAuthEndpoint(loginUrl, userService.type);\r\n    }\r\n\r\n    async function logout() {\r\n        const userType = await getUserType();\r\n        var userService = await getServiceProvider(userType);\r\n        clearToken();\r\n        if (userService.handleLogout) {\r\n            await userService.handleLogout();\r\n        } else {\r\n            const config = userService.getConfig();\r\n            var logoutUrl = config['logoutUrl'];\r\n            if (!logoutUrl) {\r\n                $log.error('userService.logout - Invalid type');\r\n                return;\r\n            }\r\n\r\n            var request = {\r\n                method: 'GET',\r\n                url: logoutUrl\r\n            };\r\n\r\n            await httpRequest(request);\r\n        }\r\n\r\n        $log.debug(`userService.logout - ${userType}`);\r\n    }\r\n\r\n    async function getDeviceId() {\r\n        var result = await storage.get('deviceId');\r\n        if (result.deviceId) {\r\n            return result.deviceId;\r\n        }\r\n\r\n        var id = createGuid();\r\n        await storage.set({'deviceId': id});\r\n        return id;\r\n    }\r\n\r\n    async function useAuthNext(toggle) {\r\n        if (typeof toggle !== 'undefined') {\r\n            storage.set({'authNext': {override: toggle}});\r\n        }\r\n\r\n        return checkAuthFlighting({noLogout: true});\r\n    }\r\n\r\n    window.useAuthNext = useAuthNext;\r\n    window.checkTransitionAuth = checkAuthFlighting;\r\n\r\n    // only check once a day\r\n    const transitionAuthInterval = 24 /*hours*/ * 3600 /*seconds per hour*/ * 1000/* millseconds per second*/;\r\n\r\n    async function initCheckTransition() {\r\n        $log.debug('initCheckTransition');\r\n        //check now before setting interval\r\n        await checkAuthFlighting();\r\n        // set the recurring interval to perform the check\r\n        setInterval(checkAuthFlighting, transitionAuthInterval);\r\n    }\r\n\r\n    if (Utilities.isBackgroundContext()) {\r\n        initCheckTransition();\r\n    }\r\n\r\n    async function checkAuthFlighting(options) {\r\n        var now = new Date();\r\n        const checkedTime = now.toUTCString();\r\n        var storageData = await storage.get('authNext');\r\n        now = Math.round(now / 1000);\r\n        var elapsed = 0;\r\n        if (storageData.authNext && storageData.authNext.lastCheck && Utilities.isNotUndefinedOrNull(storageData.authNext.flighted)) {\r\n            elapsed = now - storageData.authNext.lastCheck;\r\n\r\n            if (!(options && options.force === true) && elapsed < transitionAuthInterval && storageData.authNext.flighted) {\r\n                return storageData.authNext.flighted;\r\n            }\r\n        }\r\n\r\n        $log.info(`checkTransitionAuth time:${checkedTime}`);\r\n\r\n        var authNext = await (async () => {\r\n            // Guidance from service is to use deviceId as userId since the userId isn't\r\n            // always available, and would change if they login with a different account.\r\n            // X_UserId needs to be consistent so they don't jump flights but\r\n            // X_CorrelationId isn't required\r\n            const editorService = FlightingUrl;\r\n            var deviceId = await getDeviceId();\r\n            var request = {\r\n                url: editorService,\r\n                method: 'POST',\r\n                accept: 'application/json',\r\n                contentType: 'application/json',\r\n                headers: {\r\n                    // 'X-CorrelationId': deviceId,\r\n                    'X-UserId': deviceId // CodeQL [js/insecure-randomness] False-positive: Device Id for flighting doesn't need to be be cryptographically secure.\r\n                },\r\n                data: {\r\n                    AppId: \"OfficeBX_Online\"\r\n                }\r\n            };\r\n\r\n            var result = {};\r\n            try {\r\n                result = await httpRequest(request);\r\n            } catch (error) {\r\n                // eslint-disable-next-line no-debugger\r\n                debugger;\r\n                $log.error(`userService.checkAuthFlighting - Call to editor service failed. error:${JSON.stringify(error)}`);\r\n            }\r\n\r\n            var enabled = false;\r\n            if (result && result.FeatureFlags && result.FeatureFlags.authNext) {\r\n                var authNext = result.FeatureFlags.authNext;\r\n                enabled = typeof authNext === 'string' ? authNext.toLowerCase() === 'true' : !!authNext;\r\n            }\r\n\r\n            $log.info(`editor featureFlags.authNext returned:${enabled}`);\r\n            return enabled;\r\n        })();\r\n\r\n        await storage.set({'authNext': {flighted: authNext, 'lastCheck': now}});\r\n\r\n        // check the override last so the flighting service will still get called as usual\r\n        if (storageData.authNext && Utilities.isNotUndefinedOrNull(storageData.authNext.override)) {\r\n            $log.info(`using authNext override from local storage.`);\r\n            return storageData.authNext.override;\r\n        }\r\n\r\n        var serviceType = await getIdentityProperty('service');\r\n        if (authNext === (serviceType === constants.USER_SERVICE_TYPE.MSID)) {\r\n            // current serviceType and authNext match so return with no change\r\n            return;\r\n        }\r\n\r\n        $log.trackEvent('AuthNext', {elapsed, authNext, serviceType});\r\n\r\n        // logout to force user to login with correct flighted auth\r\n        if (options && !options.noLogout) {\r\n            await logout();\r\n        }\r\n    }\r\n\r\n    async function getLastAuthCheck() {\r\n        if (!window.lastAuthFlightCheck) {\r\n            var result = await storage.get('authNext');\r\n            if (result.lastCheck) {\r\n                window.lastAuthFlightCheck = result.lastCheck;\r\n            }\r\n        }\r\n        return window.lastAuthFlightCheck;\r\n    }\r\n\r\n\r\n    async function getServiceForUserType(userType) {\r\n        // if one serviceType was responsible for logged in identity return it\r\n        var serviceType = await getIdentityProperty('service', userType);\r\n        if (serviceType) {\r\n            return serviceType;\r\n        }\r\n\r\n        // otherwise determine which to use\r\n        serviceType = constants.USER_SERVICE_TYPE.NONE;\r\n        if (await useAuthNext()) {\r\n            return constants.USER_SERVICE_TYPE.MSID;\r\n        }\r\n\r\n        switch (userType) {\r\n            case constants.USER_TYPE.MSA:\r\n                serviceType = constants.USER_SERVICE_TYPE.MSA;\r\n                break;\r\n            case constants.USER_TYPE.O365:\r\n                serviceType = constants.USER_SERVICE_TYPE.O365;\r\n                break;\r\n        }\r\n        return serviceType;\r\n    }\r\n\r\n    async function getServiceProvider(type) {\r\n        var userServiceProvider = null;\r\n        if (!Object.values(constants.USER_SERVICE_TYPE).includes(type)) {\r\n            type = await getServiceForUserType(type);\r\n        }\r\n        // Determine which user service to use and inject\r\n        if (type.indexOf(constants.USER_SERVICE_TYPE.MSA) !== -1) {\r\n            userServiceProvider = msaUserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.O365) !== -1) {\r\n            userServiceProvider = o365UserService;\r\n        } else if (type.indexOf(constants.USER_SERVICE_TYPE.MSID) !== -1) {\r\n            userServiceProvider = msidUserService;\r\n        } else {\r\n            // eslint-disable-next-line no-debugger\r\n            debugger;\r\n            $log.error(`userService.getServiceProvider - Invalid type - ${type}`);\r\n        }\r\n\r\n        return userServiceProvider;\r\n    }\r\n\r\n    async function getStoredIdentity() {\r\n        var result = await storage.get('identity');\r\n        return (result && result.identity) ? result.identity : {};\r\n    }\r\n\r\n    function mergeProperties(target, source) {\r\n        for (var [key, sourceValue] of Object.entries(source)) {\r\n            if (!sourceValue) {\r\n                continue;\r\n            }\r\n\r\n            if (!target[key] || target[key] === \"none\" || sourceValue === \"none\") {\r\n                target[key] = sourceValue;\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue !== typeof target[key]) {\r\n                $log.warn(`skipping ${key} due to conflicting types`);\r\n                continue;\r\n            }\r\n\r\n            if (Array.isArray(sourceValue)) {\r\n                sourceValue.forEach((value) => {\r\n                    var index = target[key].indexOf(value);\r\n                    if (index < 0) {\r\n                        target[key].push(value);\r\n                    }\r\n                });\r\n\r\n                continue;\r\n            }\r\n\r\n            if (typeof sourceValue === 'object') {\r\n\r\n                mergeProperties(target[key], sourceValue);\r\n                continue;\r\n            }\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n\r\n    function resolveTypeAndTenant(tokenData) {\r\n        var scopes = tokenData.scopes || tokenData.scope;\r\n        if (scopes && scopes.includes('wl.')) {\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n        var idToken = tokenData.id_token || tokenData;\r\n        if (!idToken) {\r\n            return {type: constants.USER_TYPE.NONE};\r\n        }\r\n\r\n        const tenants = {\r\n            '9188040d-6c67-4c5b-b112-36a304b66dad': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'prod'\r\n            },\r\n            '4925308c-f164-4d2d-bc7e-0631132e9375': {\r\n                'type': constants.USER_TYPE.MSA, 'audience': 'ppe'\r\n            },\r\n            '72f988bf-86f1-41af-91ab-2d7cd011db47': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'prod', 'domain': 'microsoft.com'\r\n            },\r\n            'f686d426-8d16-42db-81b7-ab578e110ccd': {\r\n                'type': constants.USER_TYPE.O365, 'audience': 'ppe', 'domain': 'microsoft.com'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const {header, payload} = parseJwtToken(idToken);\r\n            var result = {['tenant']: payload.tid};\r\n            if (tenants.hasOwnProperty(result.tenant)) {\r\n                var tenantInfo = tenants[result.tenant];\r\n                result = Object.assign(result, tenantInfo);\r\n            } else {\r\n                // everything not included in tenants would be AAD\r\n                result.type = constants.USER_TYPE.O365;\r\n            }\r\n\r\n            return result;\r\n        }\r\n        catch (error) {\r\n            // If it wasn't parsable then it must be an MSA\r\n            return {type: constants.USER_TYPE.MSA};\r\n        }\r\n    }\r\n\r\n    function getEndpointBase(endpoint) {\r\n        const url = new URL(endpoint);\r\n        return url.origin;\r\n    }\r\n\r\n    async function saveTokens(userService, endpoint, tokenData) {\r\n        if (tokenData.expires_in && !tokenData.expires_on) {\r\n            tokenData.expires_on = Utilities.getCurrentTime() + Number(tokenData.expires_in);\r\n        }\r\n\r\n        if (!endpoint) {\r\n            $log.error('userService.saveTokens - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        var userType = await getUserType();\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            userType = await setUserType(tokenData);\r\n        }\r\n\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.error('userService.saveTokens - unable to resolve userType');\r\n            return;\r\n        }\r\n\r\n        var scope = decodeURIComponent(tokenData.scope).toLowerCase().split(/[ +]/);\r\n\r\n        // if one of the scopes contains a url, then it is the actual endpoint\r\n        for (const item of scope) {\r\n            var result = item.match(/(^https:\\/\\/[.\\w]*(?:\\S+\\/))/i);\r\n            if (result) {\r\n                endpoint = result[result.index];\r\n                break;\r\n            }\r\n        }\r\n        endpoint = getEndpointBase(endpoint);\r\n        if (tokenData.resource && tokenData.resource !== endpoint) {\r\n            $log.info(`saveTokens ${endpoint} does not match ${tokenData.resource}`);\r\n            endpoint = tokenData.resource;\r\n        }\r\n\r\n        var tokenEntry = {\r\n            [userType]: {\r\n                \"id_token\": tokenData.id_token,\r\n                \"refresh_token\": tokenData.refresh_token,\r\n                \"service\": userService.type,\r\n                \"resources\": {\r\n                    [endpoint]: {\r\n                        \"access_token\": tokenData.access_token,\r\n                        \"expires_in\": tokenData.expires_in,\r\n                        \"expires_on\": tokenData.expires_on,\r\n                        \"scope\": scope\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        mergeProperties(identity, tokenEntry);\r\n        await storage.set({identity});\r\n    }\r\n\r\n    function supportsScopes(required, granted) {\r\n        if (!required) {\r\n            return true;\r\n        }\r\n\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n\r\n        if (!Array.isArray(required)) {\r\n            required = required.toLowerCase().split(/[ +]/);\r\n        }\r\n\r\n        for (const scope of required) {\r\n            if (!granted.includes(scope)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async function getAccessToken(endpoint, resourceScope) {\r\n        if (!endpoint) {\r\n            $log.error('userService.getAccessToken - endpoint not provided');\r\n            return;\r\n        }\r\n\r\n        endpoint = getEndpointBase(endpoint);\r\n\r\n        try {\r\n            var allTokens = await getIdentityProperty('resources');\r\n\r\n            // either specifically by name or the first one if there is no entry for the endpoint\r\n            if (allTokens[endpoint]) {\r\n\r\n                var tokenData = allTokens[endpoint];\r\n                // if the resource is the same as the endpoint as in the case of legacy auth,\r\n                // no reason to validate the scopes. just return it\r\n                if (endpoint === resourceScope) {\r\n                    return tokenData;\r\n                }\r\n\r\n                if (tokenData && supportsScopes(resourceScope, tokenData.scope)) {\r\n                    return tokenData;\r\n                }\r\n\r\n                // remove it from the array so it's not checked again below\r\n                delete allTokens[endpoint];\r\n            }\r\n\r\n            // in case the token data was stored under a different endpoint, try to find the appropriate\r\n            // scopes stored under other scopes\r\n            for (const token in allTokens) {\r\n                if (supportsScopes(resourceScope, token.scope)) {\r\n                    return token;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function getUserInfo(userType) {\r\n        return getIdentityProperty('userInfo', userType);\r\n    }\r\n\r\n    async function getIdentityProperty(property, userType) {\r\n        if (!userType) {\r\n            userType = await getUserType();\r\n        }\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        if (!identity[userType] || !identity[userType][property]) {\r\n            return null;\r\n        }\r\n\r\n        return identity[userType][property];\r\n    }\r\n\r\n    // Waits for the userInfo to be available (non-null) before resolving\r\n    async function waitForUserInfo(userType) {\r\n        return new Promise(async (resolve) => {\r\n            var userInfo = await getUserInfo(userType);\r\n            // userInfo is available => resolve\r\n            if (Utilities.isNotUndefinedOrNull(userInfo)) {\r\n                return resolve(userInfo);\r\n            }\r\n\r\n            BrowserHandler.runtime.onMessage.addListener(userInfoListener);\r\n\r\n            // in testing mode, only wait for a short time before giving up on getting the userInfo so as not to slow down unit tests too much\r\n            var giveUpDelay = Utilities.isExtensionInTestingMode() ? constants.TIMEOUT.USER_INFO_LOOKUP_TEST : constants.TIMEOUT.USER_INFO_LOOKUP;\r\n\r\n            // if looking up the userInfo takes too long, resolve with the current userInfo (undefined or null)\r\n            var giveUp = setTimeout(() => {\r\n                $log.warn(`userService.waitForUserInfo timed out after ${constants.TIMEOUT.USER_INFO_LOOKUP} ms - ${userType}`);\r\n                cleanUp();\r\n                resolve(userInfo);\r\n            }, giveUpDelay);\r\n\r\n            // listen for a runtime message that is sent when the userInfo is available from lookupUserInfo\r\n            function userInfoListener(request) {\r\n                if (request.activity === constants.ACTIVITY.USERINFO_AVAILABLE.NAME) {\r\n                    cleanUp();\r\n                    clearTimeout(giveUp);\r\n                    resolve(request.data);\r\n                }\r\n            }\r\n\r\n            function cleanUp() {\r\n                BrowserHandler.runtime.onMessage.removeListener(userInfoListener);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function saveUserInfo(userType, data, replace) {\r\n\r\n        var identity = await getStoredIdentity();\r\n\r\n        var userInfo = {};\r\n        if (identity[userType] && identity[userType].userInfo && !replace) {\r\n            userInfo = identity[userType].userInfo;\r\n        }\r\n\r\n        mergeProperties(userInfo, data);\r\n\r\n        if (identity[userType]) {\r\n            identity[userType].userInfo = userInfo;\r\n            await storage.set({identity});\r\n        }\r\n    }\r\n\r\n    function isTokenExpired(expiresOn) {\r\n        var now = Utilities.getCurrentTime();\r\n        var offset = 120;\r\n        return expiresOn && expiresOn > now + offset ? false : true;\r\n    }\r\n\r\n    async function lookupUserInfo(userService, tokenData) {\r\n        var userType = await getUserType();\r\n\r\n        var userInfo = await userService.lookupUserInfo(tokenData);\r\n        // send a message (listened to in waitForUserInfo) with the newly available userInfo\r\n        BrowserHandler.runtime.sendMessage({activity: constants.ACTIVITY.USERINFO_AVAILABLE.NAME, data: userInfo});\r\n        // save the userInfo to local storage\r\n        if (!userInfo.email && userInfo.userPrincipalName) {\r\n            userInfo.email = userInfo.userPrincipalName;\r\n        }\r\n\r\n        await saveUserInfo(userType, userInfo, true);\r\n\r\n        // get user's profile photo\r\n        await getPhotoFromServer(userService);\r\n    }\r\n\r\n    // TODO: consolidate with o365User once we have WebPack\r\n    function parseJwtToken(token) {\r\n        var idTokenPartsRegex = /^([^.\\s]*)\\.([^.\\s]+)\\.([^.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(token);\r\n        if (!matches || matches.length < 4) {\r\n            $log.error('userService.parseJwtToken - The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var header = JSON.parse(base64DecodeStringUrlSafe(matches[1]));\r\n        var payload = JSON.parse(base64DecodeStringUrlSafe(matches[2]));\r\n        return {header, payload};\r\n    }\r\n\r\n    function base64DecodeStringUrlSafe(base64IdToken) {\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n        return decodeURIComponent(escape(window.atob(base64IdToken)));\r\n    }\r\n\r\n    // Gets the user's photo (profile picture) from either local storage or an http call\r\n    // Calls the helper functions attached to the service (getUserType, getUserInfo, getPhotoFromServer) to allow for mocking in UTs\r\n    async function getUserPhoto() {\r\n        var userType = await getUserType();\r\n        // Invalid user type - no photo\r\n        if (userType === constants.USER_TYPE.NONE) {\r\n            $log.warn('UserService.getUserPhoto: no signed-in user');\r\n            return Promise.reject(constants.RECENTS.ERROR.UNSUPPORTED_USER_TYPE);\r\n        }\r\n\r\n        var userInfo = await getUserInfo(userType);\r\n        // If there is a photo in local storage, use that\r\n        if (userInfo && userInfo.photo) {\r\n            $log.trackEvent('UserService_GotLocalPhoto', {'userType': userType});\r\n            return userInfo.photo;\r\n        }\r\n\r\n        // No local photo - Do not retry to fetch the photo from server, use the default photo instead.\r\n        return Promise.reject('No photo in local storage');\r\n    }\r\n\r\n    // Gets the user's photo from the appropriate endpoint based on the given userType\r\n    async function getPhotoFromServer(userService) {\r\n        const serviceType = userService.type;\r\n        const userType = await getUserType();\r\n        const config = userService.getConfig();\r\n        var photoUrl = config['photoUrl'];\r\n        if (!photoUrl) {\r\n            return;\r\n        }\r\n\r\n        // Request to get photo\r\n        var photoRequest = {\r\n            method: 'GET',\r\n            url: photoUrl,\r\n            responseType: 'blob',\r\n            headers: {\r\n                'X-UserType': serviceType\r\n            }\r\n        };\r\n\r\n        // Send photo request\r\n        try {\r\n            const photo = await httpRequest(photoRequest);\r\n            $log.trackEvent('UserService_GotServerPhoto', {'userType': userType});\r\n\r\n            // Convert the photo response into a displayable string source\r\n            var reader = new FileReader();\r\n            reader.onload = async () => {\r\n\r\n                // Save the photo in the userInfo in local storage\r\n                saveUserInfo(userType, {photo: reader.result});\r\n\r\n                return reader.result;\r\n            };\r\n            reader.readAsDataURL(photo);\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async function getEndpointUrlForCurrentUser(endpoint) {\r\n        const userType = await getUserType();\r\n        if (!userType || userType === constants.USER_TYPE.NONE) {\r\n            return null;\r\n        }\r\n        var userService = await getServiceProvider(userType);\r\n        if (!userService) {\r\n            return null;\r\n        }\r\n\r\n        const config = userService.getConfig();\r\n        return config[endpoint];\r\n    }\r\n\r\n    function createGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (char) {\r\n            let timestamp = performance.now();\r\n            const rand = (timestamp + Math.random() * 16) % 16 | 0;\r\n            timestamp = Math.floor(timestamp / 16);\r\n            return (char === 'x' ? rand : (rand & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    async function getUserLicenseInfo() {\r\n        var userInfo = await getUserInfo();\r\n        const licenseProps = ['driveQuota', 'licenses'];\r\n        return licenseProps.reduce((previous, current) => {\r\n            if (userInfo[current]) {\r\n                previous[current] = userInfo[current];\r\n            }\r\n            return previous;\r\n        }, {});\r\n    }\r\n\r\n    // all exports are async\r\n    return {\r\n        acquireToken,\r\n        clearToken,\r\n        isLoggedIn,\r\n        getEndpointUrlForCurrentUser,\r\n        getUserType,\r\n        getUserInfo,\r\n        getUserPhoto,\r\n        httpRequest,\r\n        navigateToAuthEndpoint,\r\n        saveUserInfo,\r\n        waitForUserInfo,\r\n        getUserLicenseInfo,\r\n        useAuthNext,\r\n        // Exposed to be called from UTs\r\n        authorize,\r\n        getAccessToken,\r\n        getPhotoFromServer,\r\n        login,\r\n        logout,\r\n        lookupUserInfo,\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport BrowserHandler from '../common/browserHandler';\r\nimport angular from 'angular';\r\nimport constants from '../common/constants';\r\nimport {checkPermission} from '../common/permissions';\r\n\r\nexport default angular\r\n    .module('app.background', [])\r\n    .controller('BackgroundController', [\r\n        '$window',\r\n        '$http',\r\n        '$q',\r\n        '$log',\r\n        'notification',\r\n        'storage',\r\n        'userService',\r\n        'fileService',\r\n        'copyPasteService',\r\n        backgroundController,\r\n    ]);\r\n\r\nfunction backgroundController($window, $http, $q, $log, notification, storage, userService, fileService, copyPasteService) {\r\n    userService.isLoggedIn().then(status => {\r\n        status ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n    });\r\n\r\n    var webRedirectDisabled;\r\n    storage.get('webRedirect_disabled').then(function (result) {\r\n        webRedirectDisabled = Utilities.isNotUndefinedOrNull(result.webRedirect_disabled) && result.webRedirect_disabled;\r\n    });\r\n\r\n    BrowserHandler.windows.onFocusChanged.addListener(function (windowId) {\r\n        updateSessionInfo();\r\n    });\r\n\r\n    var sessionInfo;\r\n\r\n    async function updateSessionInfo(force) {\r\n        var currentTime = new Date();\r\n\r\n        if (sessionInfo) {\r\n            var startSession = new Date(sessionInfo.startTime);\r\n            // update the elapsed time\r\n            var elapsed = currentTime - startSession;\r\n            sessionInfo.duration += elapsed;\r\n        } else {\r\n            var result = await storage.get('LastSession');\r\n            if (result && result.LastSession && Number.isInteger(result.LastSession.duration) && Date.parse(result.LastSession.startTime)) {\r\n                sessionInfo = result.LastSession;\r\n\r\n                // remap old start_time to new startTime\r\n                if (sessionInfo.hasOwnProperty('start_time')) {\r\n                    sessionInfo.startTime = sessionInfo.start_time;\r\n                    delete sessionInfo.start_time;\r\n                }\r\n            } else {\r\n                sessionInfo = {\r\n                    startTime: currentTime,\r\n                    duration: 0,\r\n                };\r\n            }\r\n        }\r\n\r\n        // if the currentTime is not the same day as the last update,\r\n        // log the telemetry and reset the start time\r\n        var logDay = new Date(sessionInfo.startTime);\r\n        var today = new Date(currentTime);\r\n        today.setHours(0, 0, 0, 0);\r\n        logDay.setHours(0, 0, 0, 0);\r\n\r\n        if (force || today - logDay) {\r\n            $log.trackEvent('Session', {startTime: sessionInfo.startTime, duration: sessionInfo.duration, minutes: Math.floor(sessionInfo.duration / 60000)});\r\n            sessionInfo.duration = 0;\r\n        }\r\n\r\n        sessionInfo.startTime = currentTime.toString();\r\n\r\n        storage.set({\r\n            LastSession: sessionInfo,\r\n        });\r\n    }\r\n\r\n    BrowserHandler.storage.onChanged.addListener(\r\n        function (changes, areaName) {\r\n            if (Utilities.isNotUndefinedOrNull(changes.webRedirect_disabled)) {\r\n                webRedirectDisabled = changes.webRedirect_disabled.newValue;\r\n            }\r\n            else if (changes.identity) {\r\n                var identity = changes.identity.newValue;\r\n                identity ? Utilities.setIcon(constants.BROWSER_ICON.DEFAULT) : Utilities.setIcon(constants.BROWSER_ICON.INACTIVE);\r\n            }\r\n        });\r\n\r\n    // Begin documents from the web\r\n    var documentTabId;\r\n\r\n    BrowserHandler.webRequest.onSendHeaders.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            // Examine Referer header to determine whether to redirect to Office for the web or not.\r\n            for (var i = 0; i < data.requestHeaders.length; ++i) {\r\n                if (data.requestHeaders[i].name === 'Referer') {\r\n                    if (data.requestHeaders[i].value.indexOf('officeapps.live.com') >= 0) {\r\n                        // If user is viewing document in Office on the web, set the tabId to null to stop redirecting.\r\n                        documentTabId = null;\r\n                    } else {\r\n                        documentTabId = data.tabId;\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['requestHeaders']\r\n    );\r\n\r\n    BrowserHandler.webRequest.onHeadersReceived.addListener(\r\n        function (data) {\r\n            // If web document redirecting settings has been disabled by the user, stop redirecting.\r\n            if (webRedirectDisabled) {\r\n                return;\r\n            }\r\n\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n\r\n            // Continue processing this request iff we are able to inspect the response headers, the referrer was not Office for the web (ie documentTabId === null)\r\n            if (\r\n                Utilities.isUndefinedOrNull(data.responseHeaders) ||\r\n                Utilities.isUndefinedOrNull(documentTabId) ||\r\n                Utilities.isUndefinedOrNull(data.tabId) ||\r\n                documentTabId !== data.tabId\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Examine Cache-Control and Content-Type in response header.\r\n            // Redirect valid online document to be viewed in Office on the web.\r\n            var response = {};\r\n            for (var i = 0; i < data.responseHeaders.length; ++i) {\r\n                response[data.responseHeaders[i].name] = data.responseHeaders[i].value;\r\n            }\r\n\r\n            if (isResponseHeaderPrivate(response, 'Cache-Control') || isResponseHeaderPrivate(response, 'Pragma')) {\r\n                // If the web linked document is a private content, stop redirecting.\r\n                return;\r\n            } else if (response['Content-Type']) {\r\n                if (constants.FILE.OFFICE_MIME_TYPES[response['Content-Type'].toLowerCase()]) {\r\n                    // Check if the web linked document is a valid Office document\r\n                    $log.trackEvent('OpenDocument_BrowserWebDocument');\r\n\r\n                    storage.get('displayWebDocRedirectNotification').then(function (result) {\r\n                        if (\r\n                            Utilities.isUndefinedOrNull(result.displayWebDocRedirectNotification) ||\r\n                            result.displayWebDocRedirectNotification === true\r\n                        ) {\r\n                            notification.show(constants.NOTIFICATION.WEBDOCREDIRECT);\r\n                        }\r\n                    });\r\n\r\n                    return {redirectUrl: 'https://view.officeapps.live.com/op/view.aspx?src=' + data.url};\r\n                } else {\r\n                    $log.trackEvent('WebRequest_Header', {'contentType': response['Content-Type']});\r\n                    return;\r\n                }\r\n            }\r\n            return;\r\n        },\r\n        {\r\n            urls: [\r\n                '*://*/*.doc',\r\n                '*://*/*.doct',\r\n                '*://*/*.docx',\r\n                '*://*/*.dotx',\r\n                '*://*/*.odt',\r\n                '*://*/*.ppt',\r\n                '*://*/*.pot',\r\n                '*://*/*.pps',\r\n                '*://*/*.pptx',\r\n                '*://*/*.ppsx',\r\n                '*://*/*.odp',\r\n                '*://*/*.xls',\r\n                '*://*/*.xlsx',\r\n                '*://*/*.xlsm',\r\n                '*://*/*.xlsb',\r\n                '*://*/*.ods',\r\n            ],\r\n        },\r\n        ['responseHeaders', 'blocking']\r\n    );\r\n\r\n    // End documents from the web\r\n\r\n    // Begin documents from local storage\r\n\r\n    // Add a listener for local file web requests\r\n    // Fires when dragging a file into the browser or using the file picker\r\n    BrowserHandler.webRequest.onBeforeRequest.addListener(\r\n        function (data) {\r\n            // Only evaluate web requests where the resource is the document of a tab content window\r\n            if (data.type !== 'main_frame') {\r\n                return;\r\n            }\r\n            $log.trackEvent('OpenDocument_BrowserDragAndDrop');\r\n            var activeTabId = data.tabId;\r\n            fileService.upload(data.url, constants.FILE.ORIGIN.LOCAL_PATH, function (fileUrl) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    // File upload failed; return\r\n                    return;\r\n                }\r\n\r\n                openFileUrlInTab(fileUrl, activeTabId);\r\n            });\r\n\r\n            return {redirectUrl: constants.LINKS.PROGRESSPAGE_URL};\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        },\r\n        ['blocking']\r\n    );\r\n\r\n    // Listening for errors in local file web requests.\r\n    BrowserHandler.webRequest.onErrorOccurred.addListener(\r\n        function (details) {\r\n            // Record the error\r\n            $log.error(`BackgroundWebRequestOnErrorOccured - ${details.error}`);\r\n        },\r\n        {\r\n            urls: [\r\n                'file:///*.doc',\r\n                'file:///*.doct',\r\n                'file:///*.docx',\r\n                'file:///*.dotx',\r\n                'file:///*.odt',\r\n                'file:///*.ppt',\r\n                'file:///*.pot',\r\n                'file:///*.pps',\r\n                'file:///*.pptx',\r\n                'file:///*.ppsx',\r\n                'file:///*.odp',\r\n                'file:///*.xlsx',\r\n                'file:///*.xlsm',\r\n                'file:///*.xlsb',\r\n                'file:///*.ods',\r\n            ],\r\n        }\r\n    );\r\n\r\n    // End documents from local storage\r\n\r\n    // Display log install or update and clear old data\r\n    BrowserHandler.runtime.onInstalled.addListener(async function (details) {\r\n        var manifest = Utilities.getManifest();\r\n        var appVersion = manifest ? manifest.version : -1;\r\n\r\n        if (details.reason === 'install') {\r\n            $log.trackEvent('AppInstalled', {'appVersion': appVersion});\r\n\r\n            // I don't think this is a thing anymore, I don't see it in the extension settings\r\n            // and the manifest supports permissions now\r\n            // Prompt allow access to file urls notification when first time installing the app\r\n            // notification.show(constants.NOTIFICATION.FILEACCESS);\r\n\r\n            BrowserHandler.runtime.getPlatformInfo(platformInfo => {\r\n                if (platformInfo.os === 'cros') {\r\n                    // Prompt double click to open notification when first time installing the app on ChromeOS\r\n                    notification.show(constants.NOTIFICATION.SETDEFAULT);\r\n                }\r\n            });\r\n\r\n            // Show support page when when first time installing the app\r\n            var supportUrl = constants.LINKS.SUPPORT_URL;\r\n\r\n            // There have been complaints of this showing after updating so look for some residual\r\n            // data in local storage to see if this is really a first install before opening the supportUrl\r\n            try {\r\n                const result = await storage.get(['deviceId', 'LastSession']);\r\n                // if there are any values (keys) then it's not really a first install\r\n                if (Object.keys(result).length) {\r\n                    return;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // if an exception was thrown trying to retrieve any settings then assume\r\n                // this is first run\r\n            }\r\n            openFileUrlInTab(supportUrl, null);\r\n\r\n        }\r\n        else if (details.reason === 'update') {\r\n            $log.trackEvent('AppUpdated', {'appVersion': appVersion, previousVersion: details.previousVersion});\r\n\r\n            if (Utilities.isNotUndefinedOrNull(window.localStorage.getItem(constants.OAUTH.SERVICE_ID))) {\r\n                // If the serviceInfo is stored in window.localStorage, reset the storage data.\r\n                storage.clear();\r\n                window.localStorage.clear();\r\n            }\r\n\r\n            storage.get('userInfo').then(function (result) {\r\n                if (\r\n                    Utilities.isNotUndefinedOrNull(result) &&\r\n                    Utilities.isNotUndefinedOrNull(result.userInfo) &&\r\n                    (Utilities.isNotUndefinedOrNull(result.userInfo.id) || Utilities.isNotUndefinedOrNull(result.userInfo.profile))\r\n                ) {\r\n                    // If the userInfo is in old data form, reset the storage data.\r\n                    storage.clear();\r\n                    window.localStorage.clear();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onButtonClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.AUTOSAVE.id:\r\n                storage.set({displayAutoSaveNotification: false});\r\n                break;\r\n            case constants.NOTIFICATION.WEBDOCREDIRECT.id:\r\n                storage.set({displayWebDocRedirectNotification: false});\r\n                break;\r\n        }\r\n    });\r\n\r\n    BrowserHandler.notifications.onClicked.addListener(function (notificationId) {\r\n        switch (notificationId) {\r\n            case constants.NOTIFICATION.FILEACCESS.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.SETTINGS_URL});\r\n                break;\r\n            case constants.NOTIFICATION.INVALIDSUBSCRIPTION.id:\r\n                BrowserHandler.tabs.create({url: constants.LINKS.OFFICE_URL});\r\n                break;\r\n        }\r\n    });\r\n\r\n    // Listen to incoming messages from foreground pages process requests\r\n    BrowserHandler.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n        switch (request.eventId) {\r\n            // ignoring messages from editor telemetry with known eventIds\r\n            case \"telemetryEvent\":\r\n            case \"newActivityTelemetryEvent\":\r\n                return;\r\n        }\r\n\r\n        // ignore messages that don't have activity as they aren't ours\r\n        if (!request.activity) {\r\n            return;\r\n        }\r\n\r\n        switch (request.activity) {\r\n            case constants.ACTIVITY.LOG.NAME:\r\n                {\r\n                    var source = undefined;\r\n                    if (sender.url) {\r\n                        var url = new URL(sender.url);\r\n                        source = url.origin + url.pathname;\r\n                    }\r\n\r\n                    $log[request.severity.toLowerCase()]({message: request.log, stack: request.stack, filename: request.filename, source});\r\n                    // no need to log (below switch block) that we've logged so just return\r\n                    return;\r\n                }\r\n            case constants.ACTIVITY.SSO.NAME:\r\n                {\r\n                    // Handle SSO for AAD users by sending messages to native client\r\n                    try {\r\n                        // Pass the sender into the native host to validate that the page is able to call this method.\r\n                        request.body.sender = sender.origin;\r\n\r\n                        if ('GetSupportedUrls'.localeCompare(request.body.method, undefined, { sensitivity: 'base' }) == 0) {\r\n                            RespondWithError(CreateInvalidMethodResponse(), sendResponse);\r\n                            return true;\r\n                        }\r\n\r\n                        BrowserHandler.runtime.sendNativeMessage(\r\n                            constants.SSO.MESSAGE_CHANNEL,\r\n                            request.body,\r\n                            function (result) {\r\n                                var response = {};\r\n                                $log.debug(`BrowserCore response: ${JSON.stringify(result)}`);\r\n                                if (result) {\r\n                                    if (result.status === constants.SSO.RESPONSE_STATUS_FAIL) {\r\n                                        RespondWithError(result, sendResponse);\r\n                                    } else {\r\n                                        response = Object.assign({status: constants.SSO.RESPONSE_STATUS_SUCCESS, result});\r\n                                        $log.trackEvent('SSO_SUCCESS');\r\n                                        sendResponse(response);\r\n                                    }\r\n                                } else {\r\n                                    RespondWithError({\r\n                                        status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                                        code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                                        description: BrowserHandler.runtime.lastError.message,\r\n                                    }, sendResponse);\r\n                                }\r\n                            });\r\n                    }\r\n                    catch (e) {\r\n                        RespondWithError({\r\n                            status: constants.SSO.RESPONSE_STATUS_FAIL,\r\n                            code: constants.SSO.RESPONSE_CODE_NO_SUPPORT,\r\n                            description: e.toString(),\r\n                        }, sendResponse);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            case constants.ACTIVITY.TELEMETRY.NAME:\r\n                switch (request.command) {\r\n                    case constants.TELEMETRY.COMMAND.SET_DISABLED:\r\n                        $log.setEnabledSetting(request.enabled);\r\n                        setUninstallUrl(request.enabled);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_EVENT:\r\n                        $log.trackEvent(request.eventName, request.properties, request.measurements);\r\n                        break;\r\n                    case constants.TELEMETRY.COMMAND.TRACK_TRACE:\r\n                        $log.trackTrace(request.message, request.properties);\r\n                        break;\r\n                }\r\n                break;\r\n            case constants.ACTIVITY.NOTIFICATION.NAME:\r\n                notification.show(request.notification);\r\n                break;\r\n            case constants.ACTIVITY.AUTHENTICATION.NAME:\r\n            case constants.ACTIVITY.AUTHORIZATION.NAME:\r\n            case constants.ACTIVITY.LOGOUT.NAME:\r\n            case constants.ACTIVITY.REQUEST_TOKEN.NAME:\r\n                // Ignore these that are explicitly handled elsewhere\r\n                return;\r\n            default: {\r\n                $log.warn(`Unhandled activity:${JSON.stringify(request)}`);\r\n                return;\r\n            }\r\n        }\r\n\r\n        $log.debug(`BackgroundController.onMessage: Processed activity ${request.activity}`);\r\n    });\r\n\r\n    // We only support copy&paste in Chrome, so check browser and register listeners if we are running on Chrome.\r\n    if (Utilities.isChrome()) {\r\n        checkPermission(['clipboardRead'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n            BrowserHandler.runtime.onMessageExternal.addListener(function (msg, sender, callback) {\r\n                switch (msg.command) {\r\n                    case constants.COPY_PASTE.TEST:\r\n                        return copyPasteService.handleTestCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.PASTE:\r\n                        return copyPasteService.handlePasteCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_CLIPBOARD_DATA:\r\n                        return copyPasteService.handleGetClipboardDataCommand(msg, sender, callback);\r\n                    case constants.COPY_PASTE.GET_AVAILABLE_COMMANDS:\r\n                        return copyPasteService.handleGetAvailableCommands(msg, sender, callback);\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        });\r\n        $window.addEventListener('paste', copyPasteService.onPasteEvent);\r\n\r\n        // SSO for gsuite account federated with AAD on Chrome OS\r\n        checkPermission(['identity', 'identity.email'], $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\r\n                if (\r\n                    !changeInfo.url ||\r\n                    !isLogInUrl(changeInfo.url) ||\r\n                    changeInfo.url.indexOf('login_hint') !== -1 ||\r\n                    changeInfo.url.indexOf('username') !== -1\r\n                ) {\r\n                    return;\r\n                }\r\n\r\n                BrowserHandler.identity.getProfileUserInfo(function (userInfo) {\r\n                    if (!userInfo || !userInfo.email) {\r\n                        return;\r\n                    }\r\n                    var email = userInfo.email;\r\n\r\n                    var request = {\r\n                        method: 'GET',\r\n                        url: constants.O365CONFIG.FEDERATED_URL + '?login=' + email,\r\n                    };\r\n\r\n                    $http(request).then(\r\n                        function (response) {\r\n                            var data = response.data;\r\n                            if (data && data.NameSpaceType === 'Federated' && data.DomainName !== 'live.com') {\r\n                                var param = changeInfo.url.indexOf('https://login.live.com/login.srf') === -1 ? 'login_hint' : 'username';\r\n                                var currentUrl = changeInfo.url;\r\n                                if (currentUrl.indexOf('?') !== -1) {\r\n                                    currentUrl += '&' + param + '=' + email;\r\n                                } else {\r\n                                    currentUrl += '?' + param + '=' + email;\r\n                                }\r\n                                BrowserHandler.tabs.update(tabId, {url: currentUrl});\r\n                            }\r\n                        },\r\n                        function () {\r\n                            return;\r\n                        });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    BrowserHandler.runtime.getPlatformInfo(function (platformInfo) {\r\n        if (platformInfo.os !== 'cros') {\r\n            return;\r\n        }\r\n\r\n        checkPermission('fileBrowserHandler', $log).then(granted => {\r\n            if (!granted) {\r\n                return;\r\n            }\r\n\r\n            // Listen to incoming messages from file browser handler for Chrome OS.\r\n            BrowserHandler.fileBrowserHandler.onExecute.addListener(function (id, details) {\r\n                var fileEntries = details.entries;\r\n                uploadFiles(fileEntries, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        // File upload failed; return\r\n                        return;\r\n                    }\r\n\r\n                    openFileUrlInTab(fileUrl, null);\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    function isLogInUrl(url) {\r\n        return (\r\n            url.search(/^https:\\/\\/login\\.microsoftonline\\.com\\/(common|.{8}-.{4}-.{4}-.{4}-.{12})\\/oauth2\\/authorize/) != -1 ||\r\n            url.indexOf('https://login.live.com/login.srf') !== -1\r\n        );\r\n    }\r\n\r\n    function receiveMessage(event) {\r\n        if (BrowserHandler.runtime.getURL('').search(new RegExp(event.origin, 'i')) !== 0) {\r\n            $log.error(`BackgroundController.receiveMessage: Error processing message with unrecognized origin ${event.origin}`);\r\n            return;\r\n        }\r\n\r\n        if (Object.prototype.toString.call(event.data) !== '[object File]') {\r\n            $log.error(\r\n                `BackgroundController.receiveMessage: Error processing message with event.data type ${Object.prototype.toString.call(event.data)}`\r\n            );\r\n            return;\r\n        }\r\n\r\n        uploadFile(event.data, function (fileUrl) {\r\n            if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                // File upload failed; return\r\n                return;\r\n            }\r\n\r\n            openFileUrlInTab(fileUrl, null);\r\n        });\r\n    }\r\n    window.addEventListener('message', receiveMessage, false);\r\n\r\n    // Creates a new browser tab with progresspage url and returns its' tab id\r\n    function getDisplayTabId(startUrl) {\r\n        if (Utilities.isUndefinedOrNull(startUrl)) {\r\n            startUrl = constants.LINKS.PROGRESSPAGE_URL;\r\n        }\r\n\r\n        var deferred = $q.defer();\r\n        Utilities.safeOpenNewTab(startUrl, true, function(tab) {\r\n            deferred.resolve(tab.id);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    // Helper method that takes an array of HTML5 file entries and uploads each file; executes callback after each upload\r\n    function uploadFiles(fileEntries, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileEntries)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < fileEntries.length; ++i) {\r\n            fileEntries[i].file(function (file) {\r\n                uploadFile(file, function (fileUrl) {\r\n                    callback(fileUrl);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // Helper method that takes an  HTML5 file entry and uploads the file; executes callback after upload\r\n    function uploadFile(file, callback) {\r\n        if (Utilities.isUndefinedOrNull(file)) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileService.upload(file, constants.FILE.ORIGIN.HTML5, function (fileUrl) {\r\n            callback(fileUrl);\r\n        });\r\n    }\r\n\r\n    // Helper method that opens a file url given a tab id; will create a new window or tab if tabId is null\r\n    function openFileUrlInTab(fileUrl, tabId) {\r\n        var deferred = $q.defer();\r\n        deferred.resolve(Utilities.isNotUndefinedOrNull(tabId) ? tabId : getDisplayTabId(fileUrl));\r\n\r\n        deferred.promise.then(function (tabId) {\r\n            if (Utilities.isUndefinedOrNull(tabId)) {\r\n                $log.warn('BackgroundController.openFileUrlInTab: tabIdPromise null or undefined');\r\n                return;\r\n            }\r\n\r\n            BrowserHandler.tabs.update(tabId, {url: fileUrl});\r\n        });\r\n    }\r\n\r\n    function isResponseHeaderPrivate(response, header) {\r\n        return response[header] && response[header].toLowerCase().indexOf('private') !== -1;\r\n    }\r\n\r\n    function initialize() {\r\n        $log.getEnabledSetting().then(function (enabled) {\r\n            setUninstallUrl(enabled);\r\n        });\r\n\r\n    }\r\n\r\n    function setUninstallUrl(enabled) {\r\n        if (!Utilities.isNotUndefinedOrNull(enabled)) {\r\n            enabled = true;\r\n        }\r\n\r\n        // Check if setUninstallURL is enabled\r\n        if (Utilities.isNotUndefinedOrNull(BrowserHandler.runtime.setUninstallURL)) {\r\n            var manifest = Utilities.getManifest();\r\n            var appVersion = manifest ? manifest.version : -1;\r\n\r\n            // Use office.com as default uninstall page\r\n            var url = Utilities.isExtensionInDevelopmentMode() ? constants.LINKS.OFFICE_HOME_DEV_URL : constants.LINKS.OFFICE_HOME_URL;\r\n\r\n            // Check if logging is enabled by user\r\n            if (enabled) {\r\n                url = constants.LINKS.UNINSTALL + '?version=' + appVersion;\r\n                url = Utilities.isExtensionInDevelopmentMode() ? url + '&isDebug=true' : url;\r\n            }\r\n\r\n            BrowserHandler.runtime.setUninstallURL(url);\r\n        }\r\n    }\r\n\r\n    function RespondWithError(response, sendResponse) {\r\n        if (IsInvalidMethod(response)) {\r\n            // for Invalid Method we want produce the same response regardless it came from extension or native code, it should be hidden from caller.\r\n            const invalidResponse = CreateInvalidMethodResponse();\r\n            $log.trackEvent('SSO_FAIL', invalidResponse);\r\n            sendResponse(invalidResponse);\r\n        }\r\n        else {\r\n            $log.trackEvent('SSO_FAIL', response);\r\n            sendResponse(response);\r\n        }\r\n    }\r\n\r\n    function IsInvalidMethod(response) {\r\n        return response.ext && response.ext.error === constants.SSO.RESPONSE_CODE_INVALID;\r\n    }\r\n\r\n    function CreateInvalidMethodResponse() {\r\n        return {\r\n            status: 'Fail',\r\n            code: 'OSError',\r\n            description: 'Error processing request.',\r\n            ext: { error: constants.SSO.RESPONSE_CODE_INVALID }\r\n        };\r\n    }\r\n\r\n    initialize();\r\n}\r\n","import angular from 'angular';\r\nimport { CopyPasteService, FileReaderEx, ImageReader } from '@1js/office-online-ccp';\r\n\r\nexport default angular\r\n    .module('app.copypaste', [])\r\n    .factory('copyPasteService', ['$log', 'imageReader', '$window', ($log, imageReader, $window) => new CopyPasteService($log, imageReader, $window)])\r\n    .factory('fileReader', () => new FileReaderEx())\r\n    .factory('imageReader', ['$log', 'fileReader', ($log, fileReader) => new ImageReader($log, fileReader)])\r\n    .name;\r\n","import angular from 'angular';\r\nimport fileService from './file.service';\r\nimport fileLoader from './fileLoader.service';\r\nimport oneDriveFileService from './oneDriveFile.service';\r\nimport sharePointFileService from './sharePointFile.service';\r\n\r\nexport default angular\r\n    .module('app.file', [])\r\n    .factory('fileService', ['$http', '$q', '$log', 'localize', 'notification', 'storage', 'fileLoader', 'userService', 'sharePointFileService', 'oneDriveFileService', fileService])\r\n    .factory('fileLoader', ['$http', '$q', '$log', fileLoader])\r\n    .service('oneDriveFileService', ['$http', '$log', 'localize', oneDriveFileService])\r\n    .service('sharePointFileService', ['$http', '$log', 'localize', 'userService', sharePointFileService])\r\n    .name;\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileService($http, $q, $log, localize, notification, storage, fileLoader, userService, sharePointFileService, oneDriveFileService) {\r\n    var currentUserType = constants.USER_TYPE.NONE;\r\n\r\n    function handleFileLoadError(error) {\r\n        if (Utilities.isUndefinedOrNull(error)) {\r\n            return;\r\n        }\r\n\r\n        switch (error) {\r\n            case (constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED):\r\n                notification.show(constants.NOTIFICATION.FILE_MAX_SIZE_BYTE_LIMIT_REACHED);\r\n                break;\r\n            case (constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE):\r\n                notification.show(constants.NOTIFICATION.UNSUPPORTEDFILETYPE);\r\n                break;\r\n            default:\r\n                $log.error(`fileService.loadFile - ${error}`);\r\n                notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function handleFileUploadError(data, status) {\r\n        if (Utilities.isUndefinedOrNull(status)) {\r\n            return;\r\n        }\r\n\r\n        if (status === 415) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_UNSUPPORTED_MEDIA);\r\n        }\r\n        else if (status === 502 || status === 503 || status === 509) {\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_SERVER);\r\n        }\r\n        else if (data) {\r\n            $log.error(`fileService.doUpload - ${status} - ${JSON.stringify(data)}`);\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_FAILURE_GENERIC);\r\n        }\r\n    }\r\n\r\n    function getFileServiceProvider(userType) {\r\n        var fileServiceProvider = null;\r\n\r\n        // Determine which file service to use and inject\r\n        switch (userType) {\r\n            case constants.USER_TYPE.O365:\r\n                fileServiceProvider = sharePointFileService;\r\n                break;\r\n            case constants.USER_TYPE.MSA:\r\n                fileServiceProvider = oneDriveFileService;\r\n                break;\r\n            default:\r\n                notification.show(constants.NOTIFICATION.NOTSIGNEDIN);\r\n                $log.trackEvent('FileUserTypeError_UserNotSignedIn');\r\n                break;\r\n        }\r\n\r\n        return fileServiceProvider;\r\n    }\r\n\r\n    function doUpload(file, callback) {\r\n        var fileServiceProvider;\r\n\r\n        userService.getUserType().then(function (userType) {\r\n            currentUserType = userType;\r\n            fileServiceProvider = getFileServiceProvider(userType);\r\n            if (Utilities.isUndefinedOrNull(fileServiceProvider)) {\r\n                callback(null);\r\n                return;\r\n            }\r\n\r\n            // Show a notification that file upload is now in progress\r\n            $log.trackEvent('FileServiceProviderUploadDocType', {'extension': Utilities.getFileExtension(file.name)});\r\n            notification.show(constants.NOTIFICATION.FILE_UPLOAD_IN_PROGRESS);\r\n\r\n            fileServiceProvider.doUpload(file, function (fileUrl, data, status) {\r\n                if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                    handleFileUploadError(data, status);\r\n                }\r\n\r\n                callback(fileUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function upload(fileInfo, fileOrigin, callback) {\r\n        if (Utilities.isUndefinedOrNull(fileInfo) || (fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)) {\r\n            $log.error(`fileService.upload(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        fileLoader.loadFile(fileInfo, fileOrigin).then(\r\n            function (file) {\r\n                doUpload(file, function (fileUrl) {\r\n                    if (Utilities.isUndefinedOrNull(fileUrl)) {\r\n                        callback(null);\r\n                        return;\r\n                    }\r\n\r\n                    storage.get('displayAutoSaveNotification').then(function (result) {\r\n                        if (Utilities.isUndefinedOrNull(result.displayAutoSaveNotification) || result.displayAutoSaveNotification === true) {\r\n                            var autoSaveNotification = constants.NOTIFICATION.AUTOSAVE;\r\n                            autoSaveNotification.message = currentUserType === constants.USER_TYPE.MSA ? constants.NOTIFICATION.AUTOSAVETOONEDRIVE : constants.NOTIFICATION.AUTOSAVETOSHAREPOINT;\r\n                            notification.show(autoSaveNotification);\r\n                        }\r\n\r\n                        callback(fileUrl);\r\n                    });\r\n                });\r\n            },\r\n            function (error) {\r\n                handleFileLoadError(error);\r\n                callback(null);\r\n                return;\r\n            }\r\n        );\r\n    }\r\n\r\n    return {upload};\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function fileLoader($http, $q, $log) {\r\n    function loadFileFromPath(filePath) {\r\n        var deferred = $q.defer();\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', filePath, true);\r\n        xhr.responseType = 'arraybuffer';\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200 || xhr.status === 0) {\r\n                    var result = {};\r\n                    result.content = xhr.response;\r\n                    result.name = filePath.replace(/^.*[\\\\/]/, '');\r\n                    deferred.resolve(result);\r\n                } else {\r\n                    $log.error(`fileLoader.loadFileFromPath(): XMLHttpRequestError at method loadFileFromPath - ${xhr.status}`);\r\n                    deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    return deferred.promise;\r\n                }\r\n            }\r\n        };\r\n\r\n        xhr.send(null);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFileFromHTML5(file) {\r\n        var deferred = $q.defer();\r\n        if (Utilities.isUndefinedOrNull(constants.FILE.SUPPORTED_FILE_TYPES[Utilities.getFileExtension(file.name)])) {\r\n            deferred.reject(constants.FILE.ERROR.UNSUPPORTED_FILE_TYPE);\r\n            return deferred.promise;\r\n        }\r\n\r\n        var reader = new FileReader();\r\n        var result = {};\r\n        result.name = encodeURI(file.name);\r\n\r\n        reader.onload = function () {\r\n            result.content = new Int8Array(reader.result);\r\n            deferred.resolve(result);\r\n        };\r\n\r\n        reader.readAsArrayBuffer(file);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    function loadFile(fileInfo, fileOrigin) {\r\n        var deferred = $q.defer();\r\n\r\n        if (\r\n            Utilities.isUndefinedOrNull(fileInfo) ||\r\n            (Utilities.isUndefinedOrNull(fileOrigin) && fileOrigin !== constants.FILE.ORIGIN.HTML5 && fileOrigin !== constants.FILE.ORIGIN.LOCAL_PATH)\r\n        ) {\r\n            deferred.reject(`fileLoader.loadFile(): Invalid argument: fileInfo: ${JSON.stringify(fileInfo)}, fileOrigin: ${fileOrigin}`);\r\n            return deferred.promise;\r\n        }\r\n\r\n        if (fileOrigin === constants.FILE.ORIGIN.HTML5) {\r\n            // Check size of file before attempting to load the file\r\n            if (fileInfo.size > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${fileInfo.size} bytes`);\r\n                deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                return deferred.promise;\r\n            }\r\n\r\n            loadFileFromHTML5(fileInfo).then(\r\n                function (file) {\r\n                    deferred.resolve(file);\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        } else {\r\n            loadFileFromPath(fileInfo).then(\r\n                function (file) {\r\n                    if (!file.content) {\r\n                        $log.error(); (`fileLoader.loadFile(): loadFileFromPath failed`);\r\n                        deferred.reject(constants.FILE.ERROR.LOAD_FROM_PATH);\r\n                    }\r\n                    // Check size of file after attempting to load the file\r\n                    else if (file.content.byteLength > constants.FILE.MAX_SIZE_BYTE_LIMIT) {\r\n                        $log.info(`fileLoader.loadFile(): Attempt to upload file with size exceeding limit - ${file.content.byteLength} bytes`);\r\n                        deferred.reject(constants.FILE.ERROR.FILE_SIZE_MAX_EXCEEDED);\r\n                    }\r\n                    else {\r\n                        deferred.resolve(file);\r\n                    }\r\n                },\r\n                function (error) {\r\n                    deferred.reject(error);\r\n                }\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    var service = {\r\n        loadFile: loadFile,\r\n    };\r\n\r\n    return service;\r\n}\r\n","import constants from '../common/constants';\r\n\r\nexport default function oneDriveFileService($http, $log, localize) {\r\n\r\n    this.doUpload = function (file, callback) {\r\n        var requestUrl = constants.ONEDRIVE.INSTANCE +\r\n            '/drive/root:/' + encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content' + constants.ONEDRIVE.QUERY_OPTION;\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.MSA\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                $log.debug(`oneDriveFileService.doUpload - ${response.status} - ${data.webUrl}`);\r\n                callback(data.webUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, null, response.statusText);\r\n            });\r\n    };\r\n}\r\n","import Utilities from '../common/utilities';\r\nimport constants from '../common/constants';\r\n\r\nexport default function sharePointFileService($http, $log/* , constants */, localize, userService) {\r\n\r\n    function renameFile(fileName) {\r\n        var now = new Date().toISOString();\r\n        var reg = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+).+/;\r\n        var version = now.replace(reg, '_$1$2$3_$4$5$6.');\r\n        return fileName.replace('.', version);\r\n    }\r\n\r\n    this.doUpload = async function (file, callback) {\r\n        file.name = renameFile(file.name);\r\n        var userInfo = await userService.getUserInfo(constants.USER_TYPE.O365);\r\n        if (Utilities.isUndefinedOrNull(userInfo) || Utilities.isUndefinedOrNull(userInfo.oneDriveUrl)) {\r\n            $log.error('sharePointFileService.doUpload - Invalid OneDriveUrl');\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        var requestUrl = constants.O365CONFIG.UPLOAD_URL +\r\n            encodeURIComponent(localize.getLocalizedString('AppFolderName')) +\r\n            '/' + file.name + ':/content';\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: requestUrl,\r\n            headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'X-UserType': constants.USER_TYPE.O365\r\n            },\r\n            data: file.content,\r\n            transformRequest: []\r\n        };\r\n\r\n        $http(request).then(\r\n            function (response) {\r\n                var data = response.data;\r\n                var status = response.status;\r\n                var etag = '', fileUrl = '';\r\n\r\n                if (Utilities.isUndefinedOrNull(data.eTag)) {\r\n                    $log.error('sharePointFileService.doUpload - Missing eTag');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                etag = data.eTag.substring(1, data.eTag.indexOf(','));\r\n\r\n                if (Utilities.isUndefinedOrNull(data['@microsoft.graph.downloadUrl'])) {\r\n                    $log.error('sharePointFileService.doUpload - Missing downloadUrl');\r\n                    callback(null, data, status);\r\n                    return;\r\n                }\r\n                fileUrl = data['@microsoft.graph.downloadUrl'].replace(/download.aspx?.+/, 'WopiFrame.aspx?sourcedoc=' + etag);\r\n\r\n                $log.debug(`sharePointFileService.doUpload - ${status} - ${fileUrl}`);\r\n                callback(fileUrl);\r\n            },\r\n            function (response) {\r\n                callback(null, response.data, response.status);\r\n            });\r\n    };\r\n}\r\n","import angular from 'angular';\r\nimport '../diagnostics';\r\nimport '../diagnostics/aria';\r\nimport '../common';\r\nimport '../user';\r\nimport './background.controller';\r\nimport '../copypaste';\r\nimport '../file';\r\n\r\ndocument.body.setAttribute('data-ng-controller', 'BackgroundController as ctrl');\r\ndocument.documentElement.setAttribute('data-ng-app', 'app');\r\n\r\nexport default angular\r\n    .module('app', ['localization', 'app.common', 'app.diagnostics', 'app.user', 'app.file', 'app.background', 'app.copypaste']);\r\n","declare let browser: any;\r\ndeclare let chrome: any;\r\n\r\nvar browserListeners: any[] = [];\r\nvar propertyList = {};\r\n\r\nfunction mergeProperties(target: any, source: any): any {\r\n    for (const [key, value] of Object.entries(source)) {\r\n        if (!target[key]) {\r\n            target[key] = value;\r\n            continue;\r\n        }\r\n\r\n        if (typeof value !== typeof target[key]) {\r\n            console.log(`skipping ${key} due to conflicting types`);\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(value)) {\r\n            target[key] = target[key].concat(value);\r\n            continue;\r\n        }\r\n\r\n        if (typeof value === 'object') {\r\n            target[key] = mergeProperties(target[key], value);\r\n            continue;\r\n        }\r\n        target[key] = value;\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nexport default (function (): any {\r\n    var browserHandler = ((): any => {\r\n        if (typeof browser === 'object') {\r\n            var edgeBrowser = Object.create(browser);\r\n\r\n            edgeBrowser.notifications = {\r\n                clear: function (notificationId: string, callback: (wasCleared: boolean) => void): void {\r\n                    // Invoke callback with wasCleared == false\r\n                    callback(false);\r\n                },\r\n                create: function (\r\n                    notificationId: string,\r\n                    options: chrome.notifications.NotificationOptions,\r\n                    callback: (notificationId: string) => void\r\n                ): void {\r\n                    // Use window alert dialog to display notification message\r\n                    if (typeof options !== 'undefined' && options !== null) {\r\n                        // Only show when priority is 1 or 2\r\n                        if (typeof options.priority !== 'undefined' && options.priority !== null && options.priority > 0) {\r\n                            window.alert(options.message);\r\n                        }\r\n                    }\r\n\r\n                    // Invoke callback with notification id\r\n                    callback(notificationId);\r\n                },\r\n                onButtonClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n                onClicked: {\r\n                    addListener: function (notificationId: string): void {\r\n                        // Not implemented\r\n                    },\r\n                },\r\n            };\r\n\r\n            edgeBrowser.runtime = {\r\n                getPlatformInfo: function (callback: (platformInfo: chrome.runtime.PlatformInfo) => void): void {\r\n                    // Does not execute the callback function\r\n                    // Not implemented\r\n                },\r\n            };\r\n        } else if (typeof chrome === 'object') {\r\n            return Object.create(chrome);\r\n        }\r\n    })();\r\n\r\n    // when running in tests, provide override the necessary functions\r\n    if ((window as any).jasmine) {\r\n        const browserMock = {\r\n            mock: true,\r\n            browserAction: {\r\n                setIcon: function (icon: string): void {},\r\n            },\r\n            extension: {\r\n                getURL: function (name: any): string {\r\n                    return '';\r\n                },\r\n            },\r\n            i18n: {\r\n                getUILanguage: function (name: any, callback: any): string {\r\n                    return '';\r\n                },\r\n                getMessage: function (): string {\r\n                    return '';\r\n                },\r\n            },\r\n            runtime: {\r\n                onMessage: {\r\n                    addListener: function (listener: any): any {\r\n                        browserListeners.push(listener);\r\n                    },\r\n                    removeListener: function (listener: any): void {\r\n                        browserListeners.splice(browserListeners.indexOf(listener), 1);\r\n                    },\r\n                },\r\n                sendMessage: function (message: any): any {\r\n                    for (let i = 0; i < browserListeners.length; ++i) {\r\n                        browserListeners[i](message);\r\n                    }\r\n                },\r\n                id: 'ndjpnladcallmjemlbaebfadecfhkepb',\r\n            },\r\n            storage: {\r\n                local: {\r\n                    get: function (name: string, callback: (arg0: { [x: number]: any }) => void): any {\r\n                        callback({\r\n                            [name]: (propertyList as any)[name],\r\n                        });\r\n                    },\r\n\r\n                    set: function (data: { [x: string]: any; hasOwnProperty: (arg0: string) => any }): void {\r\n                        for (const key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                (propertyList as any)[key] = /*JSON.stringify*/ data[key];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    remove: function (name: string | number, callback: (arg0: any) => void): void {\r\n                        delete (propertyList as any)[name];\r\n                        callback(propertyList);\r\n                    },\r\n\r\n                    clear: function (name: any, callback: any): void {\r\n                        propertyList = {};\r\n                    },\r\n                },\r\n            },\r\n            tabs: {\r\n                create: function (createProperties: any, callback: (arg0: {}) => void): void {\r\n                    if (callback) callback({});\r\n                },\r\n            },\r\n        };\r\n        browserHandler = mergeProperties(browserHandler || {}, browserMock);\r\n        if (!(window as any).chrome) {\r\n            (window as any).chrome = browserHandler;\r\n        }\r\n    }\r\n\r\n    if (!(window as any).BrowserHandler) {\r\n        (window as any).BrowserHandler = browserHandler;\r\n    }\r\n\r\n    return browserHandler;\r\n})();\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\n('use strict');\r\n\r\nfunction promised(proc: any): any {\r\n    return function (...args: ((err: any, ...results: unknown[]) => void)[]): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            function callback(...results: unknown[]): void {\r\n                return resolve(...results);\r\n            }\r\n\r\n            args.push(callback);\r\n            proc.call(this, ...args);\r\n        });\r\n    };\r\n}\r\n\r\nasync function filterNeeded(permissions: string | string[]): Promise<string[]> {\r\n    if (!Array.isArray(permissions)) {\r\n        permissions = [permissions];\r\n    }\r\n\r\n    var granted = await promised(BrowserHandler.permissions.getAll)();\r\n    console.debug(`permissions granted: ${JSON.stringify(granted)}`);\r\n\r\n    return permissions.filter((permission: string) => {\r\n        return !granted.permissions.includes(permission);\r\n    });\r\n}\r\n\r\nexport function checkPermission(requested: string | string[], log: { trackEvent: Function } | null = null): Promise<boolean> {\r\n    if (!Array.isArray(requested)) {\r\n        requested = [requested];\r\n    }\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            var permissions = await filterNeeded(requested);\r\n            if (!permissions.length) {\r\n                return resolve(true);\r\n            }\r\n\r\n            var result = await promised(BrowserHandler.permissions.contains)({ permissions });\r\n            console.debug(`Granted permissions ${result === true ? '' : 'do not'} include ${permissions}`);\r\n            if (result) {\r\n                return resolve(result);\r\n            }\r\n            var granted = await promised(BrowserHandler.permissions.request)({ permissions });\r\n\r\n            console.debug(`Requested permissions ${permissions} ${granted ? 'granted' : 'denied'}`);\r\n            var eventProps: any = {\r\n                granted: !!granted,\r\n                permissions,\r\n            };\r\n\r\n            if (!granted && BrowserHandler.runtime) {\r\n                eventProps.lastError = BrowserHandler.runtime.lastError?.message;\r\n                eventProps.id = BrowserHandler.runtime.id;\r\n            }\r\n\r\n            log?.trackEvent('Permission', eventProps);\r\n            return resolve(!!granted);\r\n        } catch (err) {\r\n            resolve(false);\r\n        }\r\n    });\r\n}\r\n\r\nexport async function preemptivePermissionsRequest(): Promise<void> {\r\n    try {\r\n        var optional = BrowserHandler.runtime.getManifest().optional_permissions;\r\n        await checkPermission(optional);\r\n    } catch (err) {\r\n        console.log(`preemptivePermissionsRequest exception:${err}`);\r\n    }\r\n}\r\n","import BrowserHandler from '../common/browserHandler';\r\n\r\nif (!(window as any).Utilities) {\r\n    (window as any).Utilities = {\r\n        // Deserialize query string to an object\r\n        deserializeQuery: function (query: string): any {\r\n            var match: RegExpExecArray,\r\n                pl = /\\+/g, // Regex for replacing addition symbol with a space\r\n                search = /([^&=]+)=?([^&]*)/g,\r\n                decode = function (s: string): string {\r\n                    return decodeURIComponent(s.replace(pl, ' '));\r\n                },\r\n                obj: any = {};\r\n            match = search.exec(query);\r\n            while (match) {\r\n                obj[decode(match[1])] = decode(match[2]);\r\n                match = search.exec(query);\r\n            }\r\n\r\n            return obj;\r\n        },\r\n\r\n        // Gets the file extension\r\n        getFileExtension: function (fileName: string): string {\r\n            var docExt = '';\r\n            if (fileName) {\r\n                var splitDoc = fileName.match(/(?:\\.)(\\w+)$/);\r\n                if (splitDoc && splitDoc.length > 1) {\r\n                    docExt = splitDoc[splitDoc.length - 1].toLowerCase();\r\n                }\r\n            }\r\n\r\n            return docExt;\r\n        },\r\n\r\n        // Navigate to url\r\n        navigateToUrlWithNewTab: function (url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.tabs.create({\r\n                url: url,\r\n                active: this.isUndefinedOrNull(openActive) ? true : openActive,\r\n            }, onSuccess);\r\n        },\r\n\r\n        // Waiting for a BrowserHandler window to be created if there is no current window existing.\r\n        // This is to avoid opening a browser instance if the extension is installed silently.\r\n        safeOpenNewTab: function(url: string, openActive: boolean, onSuccess: (tab: any) => void): void {\r\n            BrowserHandler.windows.getAll(function (windows: any) {\r\n                if (windows.length === 0) {\r\n                    BrowserHandler.windows.onCreated.addListener(() =>\r\n                        this.navigateToUrlWithNewTab(\r\n                            url,\r\n                            openActive,\r\n                            onSuccess\r\n                        )\r\n                    );\r\n                } else {\r\n                    this.navigateToUrlWithNewTab(\r\n                        url,\r\n                        openActive,\r\n                        onSuccess\r\n                    );\r\n                }\r\n            });\r\n        },\r\n\r\n        // Simple check for not undefined or null\r\n        isNotUndefinedOrNull: function (obj: any): boolean {\r\n            return !this.isUndefinedOrNull(obj);\r\n        },\r\n\r\n        // Simple check for undefined or null\r\n        isUndefinedOrNull: function (obj: any): boolean {\r\n            return typeof obj === 'undefined' || obj === null;\r\n        },\r\n\r\n        // Determines whether the extension is running in testing mode (running jasmine unit tests)\r\n        isExtensionInTestingMode: function (): boolean {\r\n            return this.isNotUndefinedOrNull((window as any).jasmine);\r\n        },\r\n\r\n        // Determines whether extension is running in developer mode; defaults to true if inconclusive\r\n        isExtensionInDevelopmentMode: function (): boolean {\r\n            // testing mode is not development mode\r\n            if (this.isExtensionInTestingMode()) {\r\n                return false;\r\n            }\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                var url = BrowserHandler.runtime.getURL('');\r\n\r\n                if (typeof url !== 'undefined' && url !== null) {\r\n                    if (/_microsoftofficeonline_/i.test(url)) {\r\n                        return false; // from store\r\n                    }\r\n                }\r\n            }\r\n            if ((window as any).chrome && (window as any).chrome.extension) {\r\n                // Make sure chrome manifest exists\r\n                var manifest = this.getManifest();\r\n                if (manifest === undefined || manifest === null) {\r\n                    return false;\r\n                }\r\n\r\n                // Google Web Store adds key and update_url keys to the manifest\r\n                if (manifest.key !== undefined || manifest.update_url !== undefined) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        // Returns the message id to use.\r\n        // This should work only in chrome.\r\n        getAppDescription: function (): string {\r\n            if (!(window.chrome && window.chrome.extension)) {\r\n                return undefined;\r\n            }\r\n\r\n            // Make sure chrome manifest exists\r\n            var manifest = this.getManifest();\r\n\r\n            return manifest.description;\r\n        },\r\n\r\n        // Gets the Chrome runtime manifest object\r\n        getManifest: function (): any {\r\n            // Make sure the BrowserHandler.runtime.getManifest() function exists\r\n            if (typeof BrowserHandler.runtime !== 'object' || typeof BrowserHandler.runtime.getManifest !== 'function') {\r\n                return null;\r\n            }\r\n\r\n            // Make sure manifest exists\r\n            var manifest = BrowserHandler.runtime.getManifest();\r\n            if (manifest === undefined || manifest === null) {\r\n                return null;\r\n            }\r\n\r\n            return manifest;\r\n        },\r\n\r\n        // Returns whether the current context is running in the extension background\r\n        isBackgroundContext: function (): boolean {\r\n            var loc = window.location.href;\r\n\r\n            if ((window as any).browser && (window as any).browser.extension) {\r\n                if (/^ms-browser-extension/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // Modern chrome does define window.browser so we need to re-check\r\n            if (window.chrome && window.chrome.extension) {\r\n                if (/^chrome/.test(loc) && window === BrowserHandler.extension.getBackgroundPage()) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Gets the current time\r\n        getCurrentTime: function (): number {\r\n            return Math.round(new Date().getTime() / 1000.0);\r\n        },\r\n\r\n        // Returns true if we are running on Chrome, false otherwise\r\n        isChrome: function (): boolean {\r\n            // Ref: http://stackoverflow.com/questions/4565112/javascript-how-to-find-out-if-the-user-browser-is-chrome/13348618\r\n            return this.getBrowserName() === 'Chrome' && window.navigator.vendor.indexOf('Google') > -1;\r\n        },\r\n\r\n        // browserVersion: undefined,\r\n        getBrowserAndVersion: function () {\r\n            if (!this.browserVersion) {\r\n                const checkUserAgentForBrowser = (browser: string) => {\r\n                    // userAgent provides better version but may be limited in future so fallback to userAgentData if userAgent fails\r\n                    const regex = new RegExp(`(?<browser>${browser})/(?<version>[0-9.]+)`, 'i');\r\n                    const browserMatch = window.navigator.userAgent.match(regex);\r\n                    if (browserMatch && browserMatch.groups) {\r\n                        return browserMatch.groups;\r\n                    }\r\n\r\n                    if ((window.navigator as any).userAgentData) {\r\n                        const brands: Array<{ brand: string; version: string }> = (window.navigator as any).userAgentData.brands;\r\n                        const match = brands.find((entry) => entry.brand.match(new RegExp(browser, 'i')));\r\n                        if (match) {\r\n                            return { browser: match.brand, version: match.version };\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // order matters here as some browsers may include others to appear as another browser, such as Chrome with Safari\r\n                // or Edge based on Chromium including Chrome so more specific  needs to be checked first\r\n                const orderedBrowserMatches = ['OPe?R', 'Edge?', 'Chrome', 'Safari', 'Firefox'];\r\n                for (const browser of orderedBrowserMatches) {\r\n                    const browserVersion = checkUserAgentForBrowser(browser);\r\n                    if (browserVersion) {\r\n                        this.browserVersion = browserVersion;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.browserVersion;\r\n        },\r\n\r\n        // Returns the name of the current browser (Chrome or Edge)\r\n        getBrowserName: function (): string {\r\n            const browserVersion = this.getBrowserAndVersion();\r\n            return browserVersion ? browserVersion.browser : 'Chrome';\r\n        },\r\n\r\n        // Following code is required since Edge doesn't support \"__MSG_@@bidi_dir__\" in RS1\r\n        isRTL: function (): boolean {\r\n            var uiLang = BrowserHandler.i18n.getUILanguage();\r\n            return /^ar/i.test(uiLang) || /^fa/i.test(uiLang) || /^he/i.test(uiLang) ? true : false;\r\n        },\r\n\r\n        // Set the pop up icon\r\n        setIcon: function (iconPath: any): void {\r\n            BrowserHandler.browserAction.setIcon({\r\n                path: iconPath,\r\n            });\r\n        },\r\n    };\r\n}\r\n\r\nexport default (window as any).Utilities;\r\n","import Utilities from '../common/utilities';\r\nimport { AWTLogManager } from '@aria/webjs-sdk';\r\n\r\n// Set instrumentation key depending on whether extension is in development mode\r\n//[SuppressMessage(\"Microsoft.Security\", \"CS002:SecretInNextLine\", Justification=\"not a auth secret. designates the Aria tenent\")]\r\nvar tenantId = '2c8ba5f543dc45cabca6a8903ae65ec0-17b4b4b1-0680-4459-8c45-b7c284ec277d-7329';\r\n\r\n// Initialize\r\nAWTLogManager.initialize(tenantId);\r\nconst browserVersion = Utilities.getBrowserAndVersion();\r\nif (browserVersion) {\r\n    AWTLogManager.setContext('DeviceInfo.BrowserName', browserVersion.browser);\r\n    AWTLogManager.setContext('DeviceInfo.BrowserVersion', browserVersion.version);\r\n}\r\n// Store the logger instance in a variable that is accessible in other methods of your page\r\nvar ariaLogger = AWTLogManager.getLogger(tenantId);\r\n(window as any).ariaLogger = ariaLogger;\r\n","﻿/* global BrowserHandler angular chrome browser */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    /*\r\n     * An AngularJS Localization Service\r\n     *\r\n     * Written by Jim Lavin\r\n     * http://codingsmackdown.tv\r\n     *\r\n     * Modified to integrate with chrome.i18n infrastructure\r\n     */\r\n    var BrowserHandler = window.BrowserHandler;\r\n\r\n    if (!BrowserHandler) {\r\n        BrowserHandler = chrome || browser;\r\n    }\r\n\r\n    angular\r\n        .module('localization', [])\r\n        // localization service responsible for retrieving resource files from chrome.i18n\r\n        .factory('localize', ['$filter', function ($filter) {\r\n            var localize = {\r\n                // checks the dictionary for a localized resource string\r\n                getLocalizedString: function (value) {\r\n                    // default the result to an empty string\r\n                    var result = '';\r\n\r\n                    // pull localized resource using Chrome API\r\n                    result = BrowserHandler.i18n.getMessage(value);\r\n\r\n                    // return the value to the call\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            // return the local instance when called\r\n            return localize;\r\n        }])\r\n\r\n        // simple translation filter\r\n        // usage {{ TOKEN | i18n }}\r\n        .filter('i18n', ['localize', function (localize) {\r\n            return function (input) {\r\n                return localize.getLocalizedString(input);\r\n            };\r\n        }])\r\n\r\n        // translation directive that can handle dynamic strings\r\n        // updates the text value of the attached element\r\n        // usage <span data-i18n=\"TOKEN\" ></span>\r\n        // or\r\n        // <span data-i18n=\"TOKEN|VALUE1|VALUE2\" ></span>\r\n        .directive('i18n', ['localize', function (localize) {\r\n            var i18nDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length <= 1) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    // update the element\r\n                    for (var index = 1; index < values.length; index++) {\r\n                        var target = '{' + (index - 1) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.text(tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18n', function (value) {\r\n                        i18nDirective.updateText(elm, attrs.i18n);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18nDirective;\r\n        }])\r\n        // translation directive that can handle dynamic strings\r\n        // updates the attribute value of the attached element\r\n        // usage <span data-i18n-attr=\"TOKEN|ATTRIBUTE\" ></span>\r\n        // or\r\n        // <span data-i18n-attr=\"TOKEN|ATTRIBUTE|VALUE1|VALUE2\" ></span>\r\n        .directive('i18nAttr', ['localize', function (localize) {\r\n            var i18NAttrDirective = {\r\n                restrict: \"EAC\",\r\n                updateText: function (elm, token) {\r\n                    var values = token.split('|');\r\n                    if (values.length < 2) return;\r\n\r\n                    // construct the tag to insert into the element\r\n                    var tag = localize.getLocalizedString(values[0]);\r\n                    if (!tag) return;\r\n\r\n                    for (var index = 2; index < values.length; index++) {\r\n                        var target = '{' + (index - 2) + '}';\r\n                        tag = tag.replace(target, values[index]);\r\n                    }\r\n\r\n                    // insert the text into the element\r\n                    elm.attr(values[1], tag);\r\n                },\r\n\r\n                link: function (scope, elm, attrs) {\r\n                    attrs.$observe('i18nAttr', function (value) {\r\n                        i18NAttrDirective.updateText(elm, value);\r\n                    });\r\n                }\r\n            };\r\n\r\n            return i18NAttrDirective;\r\n        }]);\r\n})();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t965: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkofficechromeextension\"] = self[\"webpackChunkofficechromeextension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(4456)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}